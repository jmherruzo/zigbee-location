                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.4.0 #8981 (Oct 24 2015) (Linux)
                                      4 ; This file was generated Sun Oct 25 01:52:03 2015
                                      5 ;--------------------------------------------------------
                                      6 	.module rudolph1
                                      7 	.optsdcc -mmcs51 --model-large
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _trickle_send
                                     13 	.globl _trickle_close
                                     14 	.globl _trickle_open
                                     15 	.globl _ipolite_send
                                     16 	.globl _ipolite_close
                                     17 	.globl _ipolite_open
                                     18 	.globl _packetbuf_hdralloc
                                     19 	.globl _packetbuf_set_datalen
                                     20 	.globl _packetbuf_hdrptr
                                     21 	.globl _packetbuf_dataptr
                                     22 	.globl _packetbuf_clear
                                     23 	.globl _ctimer_stop
                                     24 	.globl _ctimer_set
                                     25 	.globl _ACTIVE
                                     26 	.globl _TX_BYTE
                                     27 	.globl _RX_BYTE
                                     28 	.globl _ERR
                                     29 	.globl _FE
                                     30 	.globl _SLAVE
                                     31 	.globl _RE
                                     32 	.globl _MODE
                                     33 	.globl _T3OVFIF
                                     34 	.globl _T3CH0IF
                                     35 	.globl _T3CH1IF
                                     36 	.globl _T4OVFIF
                                     37 	.globl _T4CH0IF
                                     38 	.globl _T4CH1IF
                                     39 	.globl _OVFIM
                                     40 	.globl _B_0
                                     41 	.globl _B_1
                                     42 	.globl _B_2
                                     43 	.globl _B_3
                                     44 	.globl _B_4
                                     45 	.globl _B_5
                                     46 	.globl _B_6
                                     47 	.globl _B_7
                                     48 	.globl _P2IF
                                     49 	.globl _UTX0IF
                                     50 	.globl _UTX1IF
                                     51 	.globl _P1IF
                                     52 	.globl _WDTIF
                                     53 	.globl _ACC_0
                                     54 	.globl _ACC_1
                                     55 	.globl _ACC_2
                                     56 	.globl _ACC_3
                                     57 	.globl _ACC_4
                                     58 	.globl _ACC_5
                                     59 	.globl _ACC_6
                                     60 	.globl _ACC_7
                                     61 	.globl _P
                                     62 	.globl _F1
                                     63 	.globl _OV
                                     64 	.globl _RS0
                                     65 	.globl _RS1
                                     66 	.globl _F0
                                     67 	.globl _AC
                                     68 	.globl _CY
                                     69 	.globl _DMAIF
                                     70 	.globl _T1IF
                                     71 	.globl _T2IF
                                     72 	.globl _T3IF
                                     73 	.globl _T4IF
                                     74 	.globl _P0IF
                                     75 	.globl _STIF
                                     76 	.globl _DMAIE
                                     77 	.globl _T1IE
                                     78 	.globl _T2IE
                                     79 	.globl _T3IE
                                     80 	.globl _T4IE
                                     81 	.globl _P0IE
                                     82 	.globl _RFERRIE
                                     83 	.globl _ADCIE
                                     84 	.globl _URX0IE
                                     85 	.globl _URX1IE
                                     86 	.globl _ENCIE
                                     87 	.globl _STIE
                                     88 	.globl _EA
                                     89 	.globl _P2_0
                                     90 	.globl _P2_1
                                     91 	.globl _P2_2
                                     92 	.globl _P2_3
                                     93 	.globl _P2_4
                                     94 	.globl _P2_5
                                     95 	.globl _P2_6
                                     96 	.globl _P2_7
                                     97 	.globl _ENCIF_0
                                     98 	.globl _ENCIF_1
                                     99 	.globl _P1_0
                                    100 	.globl _P1_1
                                    101 	.globl _P1_2
                                    102 	.globl _P1_3
                                    103 	.globl _P1_4
                                    104 	.globl _P1_5
                                    105 	.globl _P1_6
                                    106 	.globl _P1_7
                                    107 	.globl _IT0
                                    108 	.globl _RFERRIF
                                    109 	.globl _IT1
                                    110 	.globl _URX0IF
                                    111 	.globl _ADCIF
                                    112 	.globl _URX1IF
                                    113 	.globl _P0_0
                                    114 	.globl _P0_1
                                    115 	.globl _P0_2
                                    116 	.globl _P0_3
                                    117 	.globl _P0_4
                                    118 	.globl _P0_5
                                    119 	.globl _P0_6
                                    120 	.globl _P0_7
                                    121 	.globl _WDCTL
                                    122 	.globl _U1GCR
                                    123 	.globl _U1UCR
                                    124 	.globl _U1BAUD
                                    125 	.globl _U1DBUF
                                    126 	.globl _U1CSR
                                    127 	.globl _U0GCR
                                    128 	.globl _U0UCR
                                    129 	.globl _U0BAUD
                                    130 	.globl _U0DBUF
                                    131 	.globl _U0CSR
                                    132 	.globl _TIMIF
                                    133 	.globl _T4CC1
                                    134 	.globl _T4CCTL1
                                    135 	.globl _T4CC0
                                    136 	.globl _T4CCTL0
                                    137 	.globl _T4CTL
                                    138 	.globl _T4CNT
                                    139 	.globl _T3CC1
                                    140 	.globl _T3CCTL1
                                    141 	.globl _T3CC0
                                    142 	.globl _T3CCTL0
                                    143 	.globl _T3CTL
                                    144 	.globl _T3CNT
                                    145 	.globl _T2MSEL
                                    146 	.globl _T2IRQM
                                    147 	.globl _T2MOVF2
                                    148 	.globl _T2MOVF1
                                    149 	.globl _T2MOVF0
                                    150 	.globl _T2M1
                                    151 	.globl _T2M0
                                    152 	.globl _T2IRQF
                                    153 	.globl _T2EVTCFG
                                    154 	.globl _T2CTRL
                                    155 	.globl _T1STAT
                                    156 	.globl _T1CCTL2
                                    157 	.globl _T1CCTL1
                                    158 	.globl _T1CCTL0
                                    159 	.globl _T1CTL
                                    160 	.globl _T1CNTH
                                    161 	.globl _T1CNTL
                                    162 	.globl _T1CC2H
                                    163 	.globl _T1CC2L
                                    164 	.globl _T1CC1H
                                    165 	.globl _T1CC1L
                                    166 	.globl _T1CC0H
                                    167 	.globl _T1CC0L
                                    168 	.globl _CLKCONSTA
                                    169 	.globl _CLKCONCMD
                                    170 	.globl _SLEEPSTA
                                    171 	.globl _SLEEPCMD
                                    172 	.globl _STLOAD
                                    173 	.globl _ST2
                                    174 	.globl _ST1
                                    175 	.globl _ST0
                                    176 	.globl _RFERRF
                                    177 	.globl _RFIRQF0
                                    178 	.globl _RFST
                                    179 	.globl _RFD
                                    180 	.globl _RFIRQF1
                                    181 	.globl _PSBANK
                                    182 	.globl _FMAP
                                    183 	.globl _MEMCTR
                                    184 	.globl __XPAGE
                                    185 	.globl _MPAGE
                                    186 	.globl _PMUX
                                    187 	.globl _P2DIR
                                    188 	.globl _P1DIR
                                    189 	.globl _P0DIR
                                    190 	.globl _P2INP
                                    191 	.globl _P1INP
                                    192 	.globl _P2SEL
                                    193 	.globl _P1SEL
                                    194 	.globl _P0SEL
                                    195 	.globl _APCFG
                                    196 	.globl _PERCFG
                                    197 	.globl _P0INP
                                    198 	.globl _P2IEN
                                    199 	.globl _P1IEN
                                    200 	.globl _P0IEN
                                    201 	.globl _PICTL
                                    202 	.globl _P2IFG
                                    203 	.globl _P1IFG
                                    204 	.globl _P0IFG
                                    205 	.globl _DMAREQ
                                    206 	.globl _DMAARM
                                    207 	.globl _DMA0CFGH
                                    208 	.globl _DMA0CFGL
                                    209 	.globl _DMA1CFGH
                                    210 	.globl _DMA1CFGL
                                    211 	.globl _DMAIRQ
                                    212 	.globl _ENCCS
                                    213 	.globl _ENCDO
                                    214 	.globl _ENCDI
                                    215 	.globl _RNDH
                                    216 	.globl _RNDL
                                    217 	.globl _ADCH
                                    218 	.globl _ADCL
                                    219 	.globl _ADCCON3
                                    220 	.globl _ADCCON2
                                    221 	.globl _ADCCON1
                                    222 	.globl _B
                                    223 	.globl _IRCON2
                                    224 	.globl _ACC
                                    225 	.globl _PSW
                                    226 	.globl _IRCON
                                    227 	.globl _IP1
                                    228 	.globl _IEN1
                                    229 	.globl _IP0
                                    230 	.globl _IEN0
                                    231 	.globl _P2
                                    232 	.globl _S1CON
                                    233 	.globl _IEN2
                                    234 	.globl _S0CON
                                    235 	.globl _DPS
                                    236 	.globl _P1
                                    237 	.globl _TCON
                                    238 	.globl _PCON
                                    239 	.globl _DPH1
                                    240 	.globl _DPL1
                                    241 	.globl _DPH0
                                    242 	.globl _DPL0
                                    243 	.globl _SP
                                    244 	.globl _P0
                                    245 	.globl _X_IEEE_ADDR
                                    246 	.globl _X_INFOPAGE
                                    247 	.globl _X_P2DIR
                                    248 	.globl _X_P1DIR
                                    249 	.globl _X_P0DIR
                                    250 	.globl _X_U1GCR
                                    251 	.globl _X_U1UCR
                                    252 	.globl _X_U1BAUD
                                    253 	.globl _X_U1DBUF
                                    254 	.globl _X_U1CSR
                                    255 	.globl _X_P2INP
                                    256 	.globl _X_P1INP
                                    257 	.globl _X_P2SEL
                                    258 	.globl _X_P1SEL
                                    259 	.globl _X_P0SEL
                                    260 	.globl _X_APCFG
                                    261 	.globl _X_PERCFG
                                    262 	.globl _X_T4CC1
                                    263 	.globl _X_T4CCTL1
                                    264 	.globl _X_T4CC0
                                    265 	.globl _X_T4CCTL0
                                    266 	.globl _X_T4CTL
                                    267 	.globl _X_T4CNT
                                    268 	.globl _X_RFIRQF0
                                    269 	.globl _X_T1CCTL2
                                    270 	.globl _X_T1CCTL1
                                    271 	.globl _X_T1CCTL0
                                    272 	.globl _X_T1CTL
                                    273 	.globl _X_T1CNTH
                                    274 	.globl _X_T1CNTL
                                    275 	.globl _X_RFST
                                    276 	.globl _X_T1CC2H
                                    277 	.globl _X_T1CC2L
                                    278 	.globl _X_T1CC1H
                                    279 	.globl _X_T1CC1L
                                    280 	.globl _X_T1CC0H
                                    281 	.globl _X_T1CC0L
                                    282 	.globl _X_RFD
                                    283 	.globl _X_TIMIF
                                    284 	.globl _X_DMAREQ
                                    285 	.globl _X_DMAARM
                                    286 	.globl _X_DMA0CFGH
                                    287 	.globl _X_DMA0CFGL
                                    288 	.globl _X_DMA1CFGH
                                    289 	.globl _X_DMA1CFGL
                                    290 	.globl _X_DMAIRQ
                                    291 	.globl _X_T3CC1
                                    292 	.globl _X_T3CCTL1
                                    293 	.globl _X_T3CC0
                                    294 	.globl _X_T3CCTL0
                                    295 	.globl _X_T3CTL
                                    296 	.globl _X_T3CNT
                                    297 	.globl _X_WDCTL
                                    298 	.globl _X_MEMCTR
                                    299 	.globl _X_CLKCONCMD
                                    300 	.globl _X_U0GCR
                                    301 	.globl _X_U0UCR
                                    302 	.globl _X_T2MSEL
                                    303 	.globl _X_U0BAUD
                                    304 	.globl _X_U0DBUF
                                    305 	.globl _X_RFERRF
                                    306 	.globl _X_SLEEPCMD
                                    307 	.globl _X_RNDH
                                    308 	.globl _X_RNDL
                                    309 	.globl _X_ADCH
                                    310 	.globl _X_ADCL
                                    311 	.globl _X_ADCCON3
                                    312 	.globl _X_ADCCON2
                                    313 	.globl _X_ADCCON1
                                    314 	.globl _X_ENCCS
                                    315 	.globl _X_ENCDO
                                    316 	.globl _X_ENCDI
                                    317 	.globl _X_T1STAT
                                    318 	.globl _X_PMUX
                                    319 	.globl _X_STLOAD
                                    320 	.globl _X_P2IEN
                                    321 	.globl _X_P0IEN
                                    322 	.globl _X_T2IRQM
                                    323 	.globl _X_T2MOVF2
                                    324 	.globl _X_T2MOVF1
                                    325 	.globl _X_T2MOVF0
                                    326 	.globl _X_T2M1
                                    327 	.globl _X_T2M0
                                    328 	.globl _X_T2IRQF
                                    329 	.globl _X_P2
                                    330 	.globl _X_PSBANK
                                    331 	.globl _X_FMAP
                                    332 	.globl _X_CLKCONSTA
                                    333 	.globl _X_SLEEPSTA
                                    334 	.globl _X_T2EVTCFG
                                    335 	.globl _X_ST2
                                    336 	.globl _X_ST1
                                    337 	.globl _X_ST0
                                    338 	.globl _X_T2CTRL
                                    339 	.globl _X__XPAGE
                                    340 	.globl _X_MPAGE
                                    341 	.globl _X_RFIRQF1
                                    342 	.globl _X_P1
                                    343 	.globl _X_P0INP
                                    344 	.globl _X_P1IEN
                                    345 	.globl _X_PICTL
                                    346 	.globl _X_P2IFG
                                    347 	.globl _X_P1IFG
                                    348 	.globl _X_P0IFG
                                    349 	.globl _X_U0CSR
                                    350 	.globl _X_P0
                                    351 	.globl _USBF5
                                    352 	.globl _USBF4
                                    353 	.globl _USBF3
                                    354 	.globl _USBF2
                                    355 	.globl _USBF1
                                    356 	.globl _USBF0
                                    357 	.globl _USBCNTH
                                    358 	.globl _USBCNTL
                                    359 	.globl _USBCNT0
                                    360 	.globl _USBCSOH
                                    361 	.globl _USBCSOL
                                    362 	.globl _USBMAXO
                                    363 	.globl _USBCSIH
                                    364 	.globl _USBCSIL
                                    365 	.globl _USBCS0
                                    366 	.globl _USBMAXI
                                    367 	.globl _USBCTRL
                                    368 	.globl _USBINDEX
                                    369 	.globl _USBFRMH
                                    370 	.globl _USBFRML
                                    371 	.globl _USBCIE
                                    372 	.globl _USBOIE
                                    373 	.globl _USBIIE
                                    374 	.globl _USBCIF
                                    375 	.globl _USBOIF
                                    376 	.globl _USBIIF
                                    377 	.globl _USBPOW
                                    378 	.globl _USBADDR
                                    379 	.globl _CSPT
                                    380 	.globl _CSPZ
                                    381 	.globl _CSPY
                                    382 	.globl _CSPX
                                    383 	.globl _CSPSTAT
                                    384 	.globl _CSPCTRL
                                    385 	.globl _CSPPROG23
                                    386 	.globl _CSPPROG22
                                    387 	.globl _CSPPROG21
                                    388 	.globl _CSPPROG20
                                    389 	.globl _CSPPROG19
                                    390 	.globl _CSPPROG18
                                    391 	.globl _CSPPROG17
                                    392 	.globl _CSPPROG16
                                    393 	.globl _CSPPROG15
                                    394 	.globl _CSPPROG14
                                    395 	.globl _CSPPROG13
                                    396 	.globl _CSPPROG12
                                    397 	.globl _CSPPROG11
                                    398 	.globl _CSPPROG10
                                    399 	.globl _CSPPROG9
                                    400 	.globl _CSPPROG8
                                    401 	.globl _CSPPROG7
                                    402 	.globl _CSPPROG6
                                    403 	.globl _CSPPROG5
                                    404 	.globl _CSPPROG4
                                    405 	.globl _CSPPROG3
                                    406 	.globl _CSPPROG2
                                    407 	.globl _CSPPROG1
                                    408 	.globl _CSPPROG0
                                    409 	.globl _RFC_OBS_CTRL2
                                    410 	.globl _RFC_OBS_CTRL1
                                    411 	.globl _RFC_OBS_CTRL0
                                    412 	.globl _TXFILTCFG
                                    413 	.globl _PTEST1
                                    414 	.globl _PTEST0
                                    415 	.globl _ATEST
                                    416 	.globl _DACTEST2
                                    417 	.globl _DACTEST1
                                    418 	.globl _DACTEST0
                                    419 	.globl _MDMTEST1
                                    420 	.globl _MDMTEST0
                                    421 	.globl _ADCTEST2
                                    422 	.globl _ADCTEST1
                                    423 	.globl _ADCTEST0
                                    424 	.globl _AGCCTRL3
                                    425 	.globl _AGCCTRL2
                                    426 	.globl _AGCCTRL1
                                    427 	.globl _AGCCTRL0
                                    428 	.globl _FSCAL3
                                    429 	.globl _FSCAL2
                                    430 	.globl _FSCAL1
                                    431 	.globl _FSCAL0
                                    432 	.globl _FSCTRL
                                    433 	.globl _RXCTRL
                                    434 	.globl _FREQEST
                                    435 	.globl _MDMCTRL1
                                    436 	.globl _MDMCTRL0
                                    437 	.globl _RFRND
                                    438 	.globl _RFERRM
                                    439 	.globl _RFIRQM1
                                    440 	.globl _RFIRQM0
                                    441 	.globl _TXLAST_PTR
                                    442 	.globl _TXFIRST_PTR
                                    443 	.globl _RXP1_PTR
                                    444 	.globl _RXLAST_PTR
                                    445 	.globl _RXFIRST_PTR
                                    446 	.globl _TXFIFOCNT
                                    447 	.globl _RXFIFOCNT
                                    448 	.globl _RXFIRST
                                    449 	.globl _RSSISTAT
                                    450 	.globl _RSSI
                                    451 	.globl _CCACTRL1
                                    452 	.globl _CCACTRL0
                                    453 	.globl _FSMCTRL
                                    454 	.globl _FIFOPCTRL
                                    455 	.globl _FSMSTAT1
                                    456 	.globl _FSMSTAT0
                                    457 	.globl _TXCTRL
                                    458 	.globl _TXPOWER
                                    459 	.globl _FREQCTRL
                                    460 	.globl _FREQTUNE
                                    461 	.globl _RXMASKCLR
                                    462 	.globl _RXMASKSET
                                    463 	.globl _RXENABLE
                                    464 	.globl _FRMCTRL1
                                    465 	.globl _FRMCTRL0
                                    466 	.globl _SRCEXTEN2
                                    467 	.globl _SRCEXTEN1
                                    468 	.globl _SRCEXTEN0
                                    469 	.globl _SRCSHORTEN2
                                    470 	.globl _SRCSHORTEN1
                                    471 	.globl _SRCSHORTEN0
                                    472 	.globl _SRCMATCH
                                    473 	.globl _FRMFILT1
                                    474 	.globl _FRMFILT0
                                    475 	.globl _SHORT_ADDR1
                                    476 	.globl _SHORT_ADDR0
                                    477 	.globl _PAN_ID1
                                    478 	.globl _PAN_ID0
                                    479 	.globl _EXT_ADDR7
                                    480 	.globl _EXT_ADDR6
                                    481 	.globl _EXT_ADDR5
                                    482 	.globl _EXT_ADDR4
                                    483 	.globl _EXT_ADDR3
                                    484 	.globl _EXT_ADDR2
                                    485 	.globl _EXT_ADDR1
                                    486 	.globl _EXT_ADDR0
                                    487 	.globl _SRCSHORTPENDEN2
                                    488 	.globl _SRCSHORTPENDEN1
                                    489 	.globl _SRCSHORTPENDEN0
                                    490 	.globl _SRCEXTPENDEN2
                                    491 	.globl _SRCEXTPENDEN1
                                    492 	.globl _SRCEXTPENDEN0
                                    493 	.globl _SRCRESINDEX
                                    494 	.globl _SRCRESMASK2
                                    495 	.globl _SRCRESMASK1
                                    496 	.globl _SRCRESMASK0
                                    497 	.globl _SRC_ADDR_TABLE
                                    498 	.globl _TXFIFO
                                    499 	.globl _RXFIFO
                                    500 	.globl _RFCORE_RAM
                                    501 	.globl _CMPCTL
                                    502 	.globl _OPAMPS
                                    503 	.globl _OPAMPC
                                    504 	.globl _STCV2
                                    505 	.globl _STCV1
                                    506 	.globl _STCV0
                                    507 	.globl _STCS
                                    508 	.globl _STCC
                                    509 	.globl _T1CC4H
                                    510 	.globl _T1CC4L
                                    511 	.globl _T1CC3H
                                    512 	.globl _T1CC3L
                                    513 	.globl _XX_T1CC2H
                                    514 	.globl _XX_T1CC2L
                                    515 	.globl _XX_T1CC1H
                                    516 	.globl _XX_T1CC1L
                                    517 	.globl _XX_T1CC0H
                                    518 	.globl _XX_T1CC0L
                                    519 	.globl _T1CCTL4
                                    520 	.globl _T1CCTL3
                                    521 	.globl _XX_T1CCTL2
                                    522 	.globl _XX_T1CCTL1
                                    523 	.globl _XX_T1CCTL0
                                    524 	.globl _CLD
                                    525 	.globl _IRCTL
                                    526 	.globl _CHIPINFO1
                                    527 	.globl _CHIPINFO0
                                    528 	.globl _FWDATA
                                    529 	.globl _FADDRH
                                    530 	.globl _FADDRL
                                    531 	.globl _FCTL
                                    532 	.globl _IVCTRL
                                    533 	.globl _BATTMON
                                    534 	.globl _SRCRC
                                    535 	.globl _DBGDATA
                                    536 	.globl _TESTREG0
                                    537 	.globl _CHIPID
                                    538 	.globl _CHVER
                                    539 	.globl _OBSSEL5
                                    540 	.globl _OBSSEL4
                                    541 	.globl _OBSSEL3
                                    542 	.globl _OBSSEL2
                                    543 	.globl _OBSSEL1
                                    544 	.globl _OBSSEL0
                                    545 	.globl _I2CIO
                                    546 	.globl _I2CWC
                                    547 	.globl _I2CADDR
                                    548 	.globl _I2CDATA
                                    549 	.globl _I2CSTAT
                                    550 	.globl _I2CCFG
                                    551 	.globl _OPAMPMC
                                    552 	.globl _MONMUX
                                    553 	.globl _rudolph1_open
                                    554 	.globl _rudolph1_close
                                    555 	.globl _rudolph1_send
                                    556 	.globl _rudolph1_stop
                                    557 ;--------------------------------------------------------
                                    558 ; special function registers
                                    559 ;--------------------------------------------------------
                                    560 	.area RSEG    (ABS,DATA)
      000000                        561 	.org 0x0000
                           000080   562 _P0	=	0x0080
                           000081   563 _SP	=	0x0081
                           000082   564 _DPL0	=	0x0082
                           000083   565 _DPH0	=	0x0083
                           000084   566 _DPL1	=	0x0084
                           000085   567 _DPH1	=	0x0085
                           000087   568 _PCON	=	0x0087
                           000088   569 _TCON	=	0x0088
                           000090   570 _P1	=	0x0090
                           000092   571 _DPS	=	0x0092
                           000098   572 _S0CON	=	0x0098
                           00009A   573 _IEN2	=	0x009a
                           00009B   574 _S1CON	=	0x009b
                           0000A0   575 _P2	=	0x00a0
                           0000A8   576 _IEN0	=	0x00a8
                           0000A9   577 _IP0	=	0x00a9
                           0000B8   578 _IEN1	=	0x00b8
                           0000B9   579 _IP1	=	0x00b9
                           0000C0   580 _IRCON	=	0x00c0
                           0000D0   581 _PSW	=	0x00d0
                           0000E0   582 _ACC	=	0x00e0
                           0000E8   583 _IRCON2	=	0x00e8
                           0000F0   584 _B	=	0x00f0
                           0000B4   585 _ADCCON1	=	0x00b4
                           0000B5   586 _ADCCON2	=	0x00b5
                           0000B6   587 _ADCCON3	=	0x00b6
                           0000BA   588 _ADCL	=	0x00ba
                           0000BB   589 _ADCH	=	0x00bb
                           0000BC   590 _RNDL	=	0x00bc
                           0000BD   591 _RNDH	=	0x00bd
                           0000B1   592 _ENCDI	=	0x00b1
                           0000B2   593 _ENCDO	=	0x00b2
                           0000B3   594 _ENCCS	=	0x00b3
                           0000D1   595 _DMAIRQ	=	0x00d1
                           0000D2   596 _DMA1CFGL	=	0x00d2
                           0000D3   597 _DMA1CFGH	=	0x00d3
                           0000D4   598 _DMA0CFGL	=	0x00d4
                           0000D5   599 _DMA0CFGH	=	0x00d5
                           0000D6   600 _DMAARM	=	0x00d6
                           0000D7   601 _DMAREQ	=	0x00d7
                           000089   602 _P0IFG	=	0x0089
                           00008A   603 _P1IFG	=	0x008a
                           00008B   604 _P2IFG	=	0x008b
                           00008C   605 _PICTL	=	0x008c
                           0000AB   606 _P0IEN	=	0x00ab
                           00008D   607 _P1IEN	=	0x008d
                           0000AC   608 _P2IEN	=	0x00ac
                           00008F   609 _P0INP	=	0x008f
                           0000F1   610 _PERCFG	=	0x00f1
                           0000F2   611 _APCFG	=	0x00f2
                           0000F3   612 _P0SEL	=	0x00f3
                           0000F4   613 _P1SEL	=	0x00f4
                           0000F5   614 _P2SEL	=	0x00f5
                           0000F6   615 _P1INP	=	0x00f6
                           0000F7   616 _P2INP	=	0x00f7
                           0000FD   617 _P0DIR	=	0x00fd
                           0000FE   618 _P1DIR	=	0x00fe
                           0000FF   619 _P2DIR	=	0x00ff
                           0000AE   620 _PMUX	=	0x00ae
                           000093   621 _MPAGE	=	0x0093
                           000093   622 __XPAGE	=	0x0093
                           0000C7   623 _MEMCTR	=	0x00c7
                           00009F   624 _FMAP	=	0x009f
                           00009F   625 _PSBANK	=	0x009f
                           000091   626 _RFIRQF1	=	0x0091
                           0000D9   627 _RFD	=	0x00d9
                           0000E1   628 _RFST	=	0x00e1
                           0000E9   629 _RFIRQF0	=	0x00e9
                           0000BF   630 _RFERRF	=	0x00bf
                           000095   631 _ST0	=	0x0095
                           000096   632 _ST1	=	0x0096
                           000097   633 _ST2	=	0x0097
                           0000AD   634 _STLOAD	=	0x00ad
                           0000BE   635 _SLEEPCMD	=	0x00be
                           00009D   636 _SLEEPSTA	=	0x009d
                           0000C6   637 _CLKCONCMD	=	0x00c6
                           00009E   638 _CLKCONSTA	=	0x009e
                           0000DA   639 _T1CC0L	=	0x00da
                           0000DB   640 _T1CC0H	=	0x00db
                           0000DC   641 _T1CC1L	=	0x00dc
                           0000DD   642 _T1CC1H	=	0x00dd
                           0000DE   643 _T1CC2L	=	0x00de
                           0000DF   644 _T1CC2H	=	0x00df
                           0000E2   645 _T1CNTL	=	0x00e2
                           0000E3   646 _T1CNTH	=	0x00e3
                           0000E4   647 _T1CTL	=	0x00e4
                           0000E5   648 _T1CCTL0	=	0x00e5
                           0000E6   649 _T1CCTL1	=	0x00e6
                           0000E7   650 _T1CCTL2	=	0x00e7
                           0000AF   651 _T1STAT	=	0x00af
                           000094   652 _T2CTRL	=	0x0094
                           00009C   653 _T2EVTCFG	=	0x009c
                           0000A1   654 _T2IRQF	=	0x00a1
                           0000A2   655 _T2M0	=	0x00a2
                           0000A3   656 _T2M1	=	0x00a3
                           0000A4   657 _T2MOVF0	=	0x00a4
                           0000A5   658 _T2MOVF1	=	0x00a5
                           0000A6   659 _T2MOVF2	=	0x00a6
                           0000A7   660 _T2IRQM	=	0x00a7
                           0000C3   661 _T2MSEL	=	0x00c3
                           0000CA   662 _T3CNT	=	0x00ca
                           0000CB   663 _T3CTL	=	0x00cb
                           0000CC   664 _T3CCTL0	=	0x00cc
                           0000CD   665 _T3CC0	=	0x00cd
                           0000CE   666 _T3CCTL1	=	0x00ce
                           0000CF   667 _T3CC1	=	0x00cf
                           0000EA   668 _T4CNT	=	0x00ea
                           0000EB   669 _T4CTL	=	0x00eb
                           0000EC   670 _T4CCTL0	=	0x00ec
                           0000ED   671 _T4CC0	=	0x00ed
                           0000EE   672 _T4CCTL1	=	0x00ee
                           0000EF   673 _T4CC1	=	0x00ef
                           0000D8   674 _TIMIF	=	0x00d8
                           000086   675 _U0CSR	=	0x0086
                           0000C1   676 _U0DBUF	=	0x00c1
                           0000C2   677 _U0BAUD	=	0x00c2
                           0000C4   678 _U0UCR	=	0x00c4
                           0000C5   679 _U0GCR	=	0x00c5
                           0000F8   680 _U1CSR	=	0x00f8
                           0000F9   681 _U1DBUF	=	0x00f9
                           0000FA   682 _U1BAUD	=	0x00fa
                           0000FB   683 _U1UCR	=	0x00fb
                           0000FC   684 _U1GCR	=	0x00fc
                           0000C9   685 _WDCTL	=	0x00c9
                                    686 ;--------------------------------------------------------
                                    687 ; special function bits
                                    688 ;--------------------------------------------------------
                                    689 	.area RSEG    (ABS,DATA)
      000000                        690 	.org 0x0000
                           000087   691 _P0_7	=	0x0087
                           000086   692 _P0_6	=	0x0086
                           000085   693 _P0_5	=	0x0085
                           000084   694 _P0_4	=	0x0084
                           000083   695 _P0_3	=	0x0083
                           000082   696 _P0_2	=	0x0082
                           000081   697 _P0_1	=	0x0081
                           000080   698 _P0_0	=	0x0080
                           00008F   699 _URX1IF	=	0x008f
                           00008D   700 _ADCIF	=	0x008d
                           00008B   701 _URX0IF	=	0x008b
                           00008A   702 _IT1	=	0x008a
                           000089   703 _RFERRIF	=	0x0089
                           000088   704 _IT0	=	0x0088
                           000097   705 _P1_7	=	0x0097
                           000096   706 _P1_6	=	0x0096
                           000095   707 _P1_5	=	0x0095
                           000094   708 _P1_4	=	0x0094
                           000093   709 _P1_3	=	0x0093
                           000092   710 _P1_2	=	0x0092
                           000091   711 _P1_1	=	0x0091
                           000090   712 _P1_0	=	0x0090
                           000099   713 _ENCIF_1	=	0x0099
                           000098   714 _ENCIF_0	=	0x0098
                           0000A7   715 _P2_7	=	0x00a7
                           0000A6   716 _P2_6	=	0x00a6
                           0000A5   717 _P2_5	=	0x00a5
                           0000A4   718 _P2_4	=	0x00a4
                           0000A3   719 _P2_3	=	0x00a3
                           0000A2   720 _P2_2	=	0x00a2
                           0000A1   721 _P2_1	=	0x00a1
                           0000A0   722 _P2_0	=	0x00a0
                           0000AF   723 _EA	=	0x00af
                           0000AD   724 _STIE	=	0x00ad
                           0000AC   725 _ENCIE	=	0x00ac
                           0000AB   726 _URX1IE	=	0x00ab
                           0000AA   727 _URX0IE	=	0x00aa
                           0000A9   728 _ADCIE	=	0x00a9
                           0000A8   729 _RFERRIE	=	0x00a8
                           0000BD   730 _P0IE	=	0x00bd
                           0000BC   731 _T4IE	=	0x00bc
                           0000BB   732 _T3IE	=	0x00bb
                           0000BA   733 _T2IE	=	0x00ba
                           0000B9   734 _T1IE	=	0x00b9
                           0000B8   735 _DMAIE	=	0x00b8
                           0000C7   736 _STIF	=	0x00c7
                           0000C5   737 _P0IF	=	0x00c5
                           0000C4   738 _T4IF	=	0x00c4
                           0000C3   739 _T3IF	=	0x00c3
                           0000C2   740 _T2IF	=	0x00c2
                           0000C1   741 _T1IF	=	0x00c1
                           0000C0   742 _DMAIF	=	0x00c0
                           0000D7   743 _CY	=	0x00d7
                           0000D6   744 _AC	=	0x00d6
                           0000D5   745 _F0	=	0x00d5
                           0000D4   746 _RS1	=	0x00d4
                           0000D3   747 _RS0	=	0x00d3
                           0000D2   748 _OV	=	0x00d2
                           0000D1   749 _F1	=	0x00d1
                           0000D0   750 _P	=	0x00d0
                           0000E7   751 _ACC_7	=	0x00e7
                           0000E6   752 _ACC_6	=	0x00e6
                           0000E5   753 _ACC_5	=	0x00e5
                           0000E4   754 _ACC_4	=	0x00e4
                           0000E3   755 _ACC_3	=	0x00e3
                           0000E2   756 _ACC_2	=	0x00e2
                           0000E1   757 _ACC_1	=	0x00e1
                           0000E0   758 _ACC_0	=	0x00e0
                           0000EC   759 _WDTIF	=	0x00ec
                           0000EB   760 _P1IF	=	0x00eb
                           0000EA   761 _UTX1IF	=	0x00ea
                           0000E9   762 _UTX0IF	=	0x00e9
                           0000E8   763 _P2IF	=	0x00e8
                           0000F7   764 _B_7	=	0x00f7
                           0000F6   765 _B_6	=	0x00f6
                           0000F5   766 _B_5	=	0x00f5
                           0000F4   767 _B_4	=	0x00f4
                           0000F3   768 _B_3	=	0x00f3
                           0000F2   769 _B_2	=	0x00f2
                           0000F1   770 _B_1	=	0x00f1
                           0000F0   771 _B_0	=	0x00f0
                           0000DE   772 _OVFIM	=	0x00de
                           0000DD   773 _T4CH1IF	=	0x00dd
                           0000DC   774 _T4CH0IF	=	0x00dc
                           0000DB   775 _T4OVFIF	=	0x00db
                           0000DA   776 _T3CH1IF	=	0x00da
                           0000D9   777 _T3CH0IF	=	0x00d9
                           0000D8   778 _T3OVFIF	=	0x00d8
                           0000FF   779 _MODE	=	0x00ff
                           0000FE   780 _RE	=	0x00fe
                           0000FD   781 _SLAVE	=	0x00fd
                           0000FC   782 _FE	=	0x00fc
                           0000FB   783 _ERR	=	0x00fb
                           0000FA   784 _RX_BYTE	=	0x00fa
                           0000F9   785 _TX_BYTE	=	0x00f9
                           0000F8   786 _ACTIVE	=	0x00f8
                                    787 ;--------------------------------------------------------
                                    788 ; overlayable register banks
                                    789 ;--------------------------------------------------------
                                    790 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        791 	.ds 8
                                    792 ;--------------------------------------------------------
                                    793 ; internal ram data
                                    794 ;--------------------------------------------------------
                                    795 	.area DSEG    (DATA)
                                    796 ;--------------------------------------------------------
                                    797 ; overlayable items in internal ram 
                                    798 ;--------------------------------------------------------
                                    799 ;--------------------------------------------------------
                                    800 ; indirectly addressable internal ram data
                                    801 ;--------------------------------------------------------
                                    802 	.area ISEG    (DATA)
                                    803 ;--------------------------------------------------------
                                    804 ; absolute internal ram data
                                    805 ;--------------------------------------------------------
                                    806 	.area IABS    (ABS,DATA)
                                    807 	.area IABS    (ABS,DATA)
                                    808 ;--------------------------------------------------------
                                    809 ; bit data
                                    810 ;--------------------------------------------------------
                                    811 	.area BSEG    (BIT)
                                    812 ;--------------------------------------------------------
                                    813 ; paged external ram data
                                    814 ;--------------------------------------------------------
                                    815 	.area PSEG    (PAG,XDATA)
                                    816 ;--------------------------------------------------------
                                    817 ; external ram data
                                    818 ;--------------------------------------------------------
                                    819 	.area XSEG    (XDATA)
                           0061A6   820 _MONMUX	=	0x61a6
                           0061A6   821 _OPAMPMC	=	0x61a6
                           006230   822 _I2CCFG	=	0x6230
                           006231   823 _I2CSTAT	=	0x6231
                           006232   824 _I2CDATA	=	0x6232
                           006233   825 _I2CADDR	=	0x6233
                           006234   826 _I2CWC	=	0x6234
                           006235   827 _I2CIO	=	0x6235
                           006243   828 _OBSSEL0	=	0x6243
                           006244   829 _OBSSEL1	=	0x6244
                           006245   830 _OBSSEL2	=	0x6245
                           006246   831 _OBSSEL3	=	0x6246
                           006247   832 _OBSSEL4	=	0x6247
                           006248   833 _OBSSEL5	=	0x6248
                           006249   834 _CHVER	=	0x6249
                           00624A   835 _CHIPID	=	0x624a
                           00624B   836 _TESTREG0	=	0x624b
                           006260   837 _DBGDATA	=	0x6260
                           006262   838 _SRCRC	=	0x6262
                           006264   839 _BATTMON	=	0x6264
                           006265   840 _IVCTRL	=	0x6265
                           006270   841 _FCTL	=	0x6270
                           006271   842 _FADDRL	=	0x6271
                           006272   843 _FADDRH	=	0x6272
                           006273   844 _FWDATA	=	0x6273
                           006276   845 _CHIPINFO0	=	0x6276
                           006277   846 _CHIPINFO1	=	0x6277
                           006281   847 _IRCTL	=	0x6281
                           006290   848 _CLD	=	0x6290
                           0062A0   849 _XX_T1CCTL0	=	0x62a0
                           0062A1   850 _XX_T1CCTL1	=	0x62a1
                           0062A2   851 _XX_T1CCTL2	=	0x62a2
                           0062A3   852 _T1CCTL3	=	0x62a3
                           0062A4   853 _T1CCTL4	=	0x62a4
                           0062A6   854 _XX_T1CC0L	=	0x62a6
                           0062A7   855 _XX_T1CC0H	=	0x62a7
                           0062A8   856 _XX_T1CC1L	=	0x62a8
                           0062A9   857 _XX_T1CC1H	=	0x62a9
                           0062AA   858 _XX_T1CC2L	=	0x62aa
                           0062AB   859 _XX_T1CC2H	=	0x62ab
                           0062AC   860 _T1CC3L	=	0x62ac
                           0062AD   861 _T1CC3H	=	0x62ad
                           0062AE   862 _T1CC4L	=	0x62ae
                           0062AF   863 _T1CC4H	=	0x62af
                           0062B0   864 _STCC	=	0x62b0
                           0062B1   865 _STCS	=	0x62b1
                           0062B2   866 _STCV0	=	0x62b2
                           0062B3   867 _STCV1	=	0x62b3
                           0062B4   868 _STCV2	=	0x62b4
                           0062C0   869 _OPAMPC	=	0x62c0
                           0062C1   870 _OPAMPS	=	0x62c1
                           0062D0   871 _CMPCTL	=	0x62d0
                           006000   872 _RFCORE_RAM	=	0x6000
                           006000   873 _RXFIFO	=	0x6000
                           006080   874 _TXFIFO	=	0x6080
                           006100   875 _SRC_ADDR_TABLE	=	0x6100
                           006160   876 _SRCRESMASK0	=	0x6160
                           006161   877 _SRCRESMASK1	=	0x6161
                           006162   878 _SRCRESMASK2	=	0x6162
                           006163   879 _SRCRESINDEX	=	0x6163
                           006164   880 _SRCEXTPENDEN0	=	0x6164
                           006165   881 _SRCEXTPENDEN1	=	0x6165
                           006166   882 _SRCEXTPENDEN2	=	0x6166
                           006167   883 _SRCSHORTPENDEN0	=	0x6167
                           006168   884 _SRCSHORTPENDEN1	=	0x6168
                           006169   885 _SRCSHORTPENDEN2	=	0x6169
                           00616A   886 _EXT_ADDR0	=	0x616a
                           00616B   887 _EXT_ADDR1	=	0x616b
                           00616C   888 _EXT_ADDR2	=	0x616c
                           00616D   889 _EXT_ADDR3	=	0x616d
                           00616E   890 _EXT_ADDR4	=	0x616e
                           00616F   891 _EXT_ADDR5	=	0x616f
                           006170   892 _EXT_ADDR6	=	0x6170
                           006171   893 _EXT_ADDR7	=	0x6171
                           006172   894 _PAN_ID0	=	0x6172
                           006173   895 _PAN_ID1	=	0x6173
                           006174   896 _SHORT_ADDR0	=	0x6174
                           006175   897 _SHORT_ADDR1	=	0x6175
                           006180   898 _FRMFILT0	=	0x6180
                           006181   899 _FRMFILT1	=	0x6181
                           006182   900 _SRCMATCH	=	0x6182
                           006183   901 _SRCSHORTEN0	=	0x6183
                           006184   902 _SRCSHORTEN1	=	0x6184
                           006185   903 _SRCSHORTEN2	=	0x6185
                           006186   904 _SRCEXTEN0	=	0x6186
                           006187   905 _SRCEXTEN1	=	0x6187
                           006188   906 _SRCEXTEN2	=	0x6188
                           006189   907 _FRMCTRL0	=	0x6189
                           00618A   908 _FRMCTRL1	=	0x618a
                           00618B   909 _RXENABLE	=	0x618b
                           00618C   910 _RXMASKSET	=	0x618c
                           00618D   911 _RXMASKCLR	=	0x618d
                           00618E   912 _FREQTUNE	=	0x618e
                           00618F   913 _FREQCTRL	=	0x618f
                           006190   914 _TXPOWER	=	0x6190
                           006191   915 _TXCTRL	=	0x6191
                           006192   916 _FSMSTAT0	=	0x6192
                           006193   917 _FSMSTAT1	=	0x6193
                           006194   918 _FIFOPCTRL	=	0x6194
                           006195   919 _FSMCTRL	=	0x6195
                           006196   920 _CCACTRL0	=	0x6196
                           006197   921 _CCACTRL1	=	0x6197
                           006198   922 _RSSI	=	0x6198
                           006199   923 _RSSISTAT	=	0x6199
                           00619A   924 _RXFIRST	=	0x619a
                           00619B   925 _RXFIFOCNT	=	0x619b
                           00619C   926 _TXFIFOCNT	=	0x619c
                           00619D   927 _RXFIRST_PTR	=	0x619d
                           00619E   928 _RXLAST_PTR	=	0x619e
                           00619F   929 _RXP1_PTR	=	0x619f
                           0061A1   930 _TXFIRST_PTR	=	0x61a1
                           0061A2   931 _TXLAST_PTR	=	0x61a2
                           0061A3   932 _RFIRQM0	=	0x61a3
                           0061A4   933 _RFIRQM1	=	0x61a4
                           0061A5   934 _RFERRM	=	0x61a5
                           0061A7   935 _RFRND	=	0x61a7
                           0061A8   936 _MDMCTRL0	=	0x61a8
                           0061A9   937 _MDMCTRL1	=	0x61a9
                           0061AA   938 _FREQEST	=	0x61aa
                           0061AB   939 _RXCTRL	=	0x61ab
                           0061AC   940 _FSCTRL	=	0x61ac
                           0061AD   941 _FSCAL0	=	0x61ad
                           0061AE   942 _FSCAL1	=	0x61ae
                           0061AF   943 _FSCAL2	=	0x61af
                           0061B0   944 _FSCAL3	=	0x61b0
                           0061B1   945 _AGCCTRL0	=	0x61b1
                           0061B2   946 _AGCCTRL1	=	0x61b2
                           0061B3   947 _AGCCTRL2	=	0x61b3
                           0061B4   948 _AGCCTRL3	=	0x61b4
                           0061B5   949 _ADCTEST0	=	0x61b5
                           0061B6   950 _ADCTEST1	=	0x61b6
                           0061B7   951 _ADCTEST2	=	0x61b7
                           0061B8   952 _MDMTEST0	=	0x61b8
                           0061B9   953 _MDMTEST1	=	0x61b9
                           0061BA   954 _DACTEST0	=	0x61ba
                           0061BB   955 _DACTEST1	=	0x61bb
                           0061BC   956 _DACTEST2	=	0x61bc
                           0061BD   957 _ATEST	=	0x61bd
                           0061BE   958 _PTEST0	=	0x61be
                           0061BF   959 _PTEST1	=	0x61bf
                           0061FA   960 _TXFILTCFG	=	0x61fa
                           0061EB   961 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   962 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   963 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   964 _CSPPROG0	=	0x61c0
                           0061C1   965 _CSPPROG1	=	0x61c1
                           0061C2   966 _CSPPROG2	=	0x61c2
                           0061C3   967 _CSPPROG3	=	0x61c3
                           0061C4   968 _CSPPROG4	=	0x61c4
                           0061C5   969 _CSPPROG5	=	0x61c5
                           0061C6   970 _CSPPROG6	=	0x61c6
                           0061C7   971 _CSPPROG7	=	0x61c7
                           0061C8   972 _CSPPROG8	=	0x61c8
                           0061C9   973 _CSPPROG9	=	0x61c9
                           0061CA   974 _CSPPROG10	=	0x61ca
                           0061CB   975 _CSPPROG11	=	0x61cb
                           0061CC   976 _CSPPROG12	=	0x61cc
                           0061CD   977 _CSPPROG13	=	0x61cd
                           0061CE   978 _CSPPROG14	=	0x61ce
                           0061CF   979 _CSPPROG15	=	0x61cf
                           0061D0   980 _CSPPROG16	=	0x61d0
                           0061D1   981 _CSPPROG17	=	0x61d1
                           0061D2   982 _CSPPROG18	=	0x61d2
                           0061D3   983 _CSPPROG19	=	0x61d3
                           0061D4   984 _CSPPROG20	=	0x61d4
                           0061D5   985 _CSPPROG21	=	0x61d5
                           0061D6   986 _CSPPROG22	=	0x61d6
                           0061D7   987 _CSPPROG23	=	0x61d7
                           0061E0   988 _CSPCTRL	=	0x61e0
                           0061E1   989 _CSPSTAT	=	0x61e1
                           0061E2   990 _CSPX	=	0x61e2
                           0061E3   991 _CSPY	=	0x61e3
                           0061E4   992 _CSPZ	=	0x61e4
                           0061E5   993 _CSPT	=	0x61e5
                           006200   994 _USBADDR	=	0x6200
                           006201   995 _USBPOW	=	0x6201
                           006202   996 _USBIIF	=	0x6202
                           006204   997 _USBOIF	=	0x6204
                           006206   998 _USBCIF	=	0x6206
                           006207   999 _USBIIE	=	0x6207
                           006209  1000 _USBOIE	=	0x6209
                           00620B  1001 _USBCIE	=	0x620b
                           00620C  1002 _USBFRML	=	0x620c
                           00620D  1003 _USBFRMH	=	0x620d
                           00620E  1004 _USBINDEX	=	0x620e
                           00620F  1005 _USBCTRL	=	0x620f
                           006210  1006 _USBMAXI	=	0x6210
                           006211  1007 _USBCS0	=	0x6211
                           006211  1008 _USBCSIL	=	0x6211
                           006212  1009 _USBCSIH	=	0x6212
                           006213  1010 _USBMAXO	=	0x6213
                           006214  1011 _USBCSOL	=	0x6214
                           006215  1012 _USBCSOH	=	0x6215
                           006216  1013 _USBCNT0	=	0x6216
                           006216  1014 _USBCNTL	=	0x6216
                           006217  1015 _USBCNTH	=	0x6217
                           006220  1016 _USBF0	=	0x6220
                           006222  1017 _USBF1	=	0x6222
                           006224  1018 _USBF2	=	0x6224
                           006226  1019 _USBF3	=	0x6226
                           006228  1020 _USBF4	=	0x6228
                           00622A  1021 _USBF5	=	0x622a
                           007080  1022 _X_P0	=	0x7080
                           007086  1023 _X_U0CSR	=	0x7086
                           007089  1024 _X_P0IFG	=	0x7089
                           00708A  1025 _X_P1IFG	=	0x708a
                           00708B  1026 _X_P2IFG	=	0x708b
                           00708C  1027 _X_PICTL	=	0x708c
                           00708D  1028 _X_P1IEN	=	0x708d
                           00708F  1029 _X_P0INP	=	0x708f
                           007090  1030 _X_P1	=	0x7090
                           007091  1031 _X_RFIRQF1	=	0x7091
                           007093  1032 _X_MPAGE	=	0x7093
                           007093  1033 _X__XPAGE	=	0x7093
                           007094  1034 _X_T2CTRL	=	0x7094
                           007095  1035 _X_ST0	=	0x7095
                           007096  1036 _X_ST1	=	0x7096
                           007097  1037 _X_ST2	=	0x7097
                           00709C  1038 _X_T2EVTCFG	=	0x709c
                           00709D  1039 _X_SLEEPSTA	=	0x709d
                           00709E  1040 _X_CLKCONSTA	=	0x709e
                           00709F  1041 _X_FMAP	=	0x709f
                           00709F  1042 _X_PSBANK	=	0x709f
                           0070A0  1043 _X_P2	=	0x70a0
                           0070A1  1044 _X_T2IRQF	=	0x70a1
                           0070A2  1045 _X_T2M0	=	0x70a2
                           0070A3  1046 _X_T2M1	=	0x70a3
                           0070A4  1047 _X_T2MOVF0	=	0x70a4
                           0070A5  1048 _X_T2MOVF1	=	0x70a5
                           0070A6  1049 _X_T2MOVF2	=	0x70a6
                           0070A7  1050 _X_T2IRQM	=	0x70a7
                           0070AB  1051 _X_P0IEN	=	0x70ab
                           0070AC  1052 _X_P2IEN	=	0x70ac
                           0070AD  1053 _X_STLOAD	=	0x70ad
                           0070AE  1054 _X_PMUX	=	0x70ae
                           0070AF  1055 _X_T1STAT	=	0x70af
                           0070B1  1056 _X_ENCDI	=	0x70b1
                           0070B2  1057 _X_ENCDO	=	0x70b2
                           0070B3  1058 _X_ENCCS	=	0x70b3
                           0070B4  1059 _X_ADCCON1	=	0x70b4
                           0070B5  1060 _X_ADCCON2	=	0x70b5
                           0070B6  1061 _X_ADCCON3	=	0x70b6
                           0070BA  1062 _X_ADCL	=	0x70ba
                           0070BB  1063 _X_ADCH	=	0x70bb
                           0070BC  1064 _X_RNDL	=	0x70bc
                           0070BD  1065 _X_RNDH	=	0x70bd
                           0070BE  1066 _X_SLEEPCMD	=	0x70be
                           0070BF  1067 _X_RFERRF	=	0x70bf
                           0070C1  1068 _X_U0DBUF	=	0x70c1
                           0070C2  1069 _X_U0BAUD	=	0x70c2
                           0070C3  1070 _X_T2MSEL	=	0x70c3
                           0070C4  1071 _X_U0UCR	=	0x70c4
                           0070C5  1072 _X_U0GCR	=	0x70c5
                           0070C6  1073 _X_CLKCONCMD	=	0x70c6
                           0070C7  1074 _X_MEMCTR	=	0x70c7
                           0070C9  1075 _X_WDCTL	=	0x70c9
                           0070CA  1076 _X_T3CNT	=	0x70ca
                           0070CB  1077 _X_T3CTL	=	0x70cb
                           0070CC  1078 _X_T3CCTL0	=	0x70cc
                           0070CD  1079 _X_T3CC0	=	0x70cd
                           0070CE  1080 _X_T3CCTL1	=	0x70ce
                           0070CF  1081 _X_T3CC1	=	0x70cf
                           0070D1  1082 _X_DMAIRQ	=	0x70d1
                           0070D2  1083 _X_DMA1CFGL	=	0x70d2
                           0070D3  1084 _X_DMA1CFGH	=	0x70d3
                           0070D4  1085 _X_DMA0CFGL	=	0x70d4
                           0070D5  1086 _X_DMA0CFGH	=	0x70d5
                           0070D6  1087 _X_DMAARM	=	0x70d6
                           0070D7  1088 _X_DMAREQ	=	0x70d7
                           0070D8  1089 _X_TIMIF	=	0x70d8
                           0070D9  1090 _X_RFD	=	0x70d9
                           0070DA  1091 _X_T1CC0L	=	0x70da
                           0070DB  1092 _X_T1CC0H	=	0x70db
                           0070DC  1093 _X_T1CC1L	=	0x70dc
                           0070DD  1094 _X_T1CC1H	=	0x70dd
                           0070DE  1095 _X_T1CC2L	=	0x70de
                           0070DF  1096 _X_T1CC2H	=	0x70df
                           0070E1  1097 _X_RFST	=	0x70e1
                           0070E2  1098 _X_T1CNTL	=	0x70e2
                           0070E3  1099 _X_T1CNTH	=	0x70e3
                           0070E4  1100 _X_T1CTL	=	0x70e4
                           0070E5  1101 _X_T1CCTL0	=	0x70e5
                           0070E6  1102 _X_T1CCTL1	=	0x70e6
                           0070E7  1103 _X_T1CCTL2	=	0x70e7
                           0070E9  1104 _X_RFIRQF0	=	0x70e9
                           0070EA  1105 _X_T4CNT	=	0x70ea
                           0070EB  1106 _X_T4CTL	=	0x70eb
                           0070EC  1107 _X_T4CCTL0	=	0x70ec
                           0070ED  1108 _X_T4CC0	=	0x70ed
                           0070EE  1109 _X_T4CCTL1	=	0x70ee
                           0070EF  1110 _X_T4CC1	=	0x70ef
                           0070F1  1111 _X_PERCFG	=	0x70f1
                           0070F2  1112 _X_APCFG	=	0x70f2
                           0070F3  1113 _X_P0SEL	=	0x70f3
                           0070F4  1114 _X_P1SEL	=	0x70f4
                           0070F5  1115 _X_P2SEL	=	0x70f5
                           0070F6  1116 _X_P1INP	=	0x70f6
                           0070F7  1117 _X_P2INP	=	0x70f7
                           0070F8  1118 _X_U1CSR	=	0x70f8
                           0070F9  1119 _X_U1DBUF	=	0x70f9
                           0070FA  1120 _X_U1BAUD	=	0x70fa
                           0070FB  1121 _X_U1UCR	=	0x70fb
                           0070FC  1122 _X_U1GCR	=	0x70fc
                           0070FD  1123 _X_P0DIR	=	0x70fd
                           0070FE  1124 _X_P1DIR	=	0x70fe
                           0070FF  1125 _X_P2DIR	=	0x70ff
                           007800  1126 _X_INFOPAGE	=	0x7800
                           00780C  1127 _X_IEEE_ADDR	=	0x780c
                                   1128 ;--------------------------------------------------------
                                   1129 ; absolute external ram data
                                   1130 ;--------------------------------------------------------
                                   1131 	.area XABS    (ABS,XDATA)
                                   1132 ;--------------------------------------------------------
                                   1133 ; external initialized ram data
                                   1134 ;--------------------------------------------------------
                                   1135 	.area XISEG   (XDATA)
                                   1136 	.area HOME    (CODE)
                                   1137 	.area GSINIT0 (CODE)
                                   1138 	.area GSINIT1 (CODE)
                                   1139 	.area GSINIT2 (CODE)
                                   1140 	.area GSINIT3 (CODE)
                                   1141 	.area GSINIT4 (CODE)
                                   1142 	.area GSINIT5 (CODE)
                                   1143 	.area GSINIT  (CODE)
                                   1144 	.area GSFINAL (CODE)
                                   1145 	.area CSEG    (CODE)
                                   1146 ;--------------------------------------------------------
                                   1147 ; global & static initialisations
                                   1148 ;--------------------------------------------------------
                                   1149 	.area HOME    (CODE)
                                   1150 	.area GSINIT  (CODE)
                                   1151 	.area GSFINAL (CODE)
                                   1152 	.area GSINIT  (CODE)
                                   1153 ;--------------------------------------------------------
                                   1154 ; Home
                                   1155 ;--------------------------------------------------------
                                   1156 	.area HOME    (CODE)
                                   1157 	.area HOME    (CODE)
                                   1158 ;--------------------------------------------------------
                                   1159 ; code
                                   1160 ;--------------------------------------------------------
                                   1161 	.area CSEG    (CODE)
                                   1162 ;------------------------------------------------------------
                                   1163 ;Allocation info for local variables in function 'read_data'
                                   1164 ;------------------------------------------------------------
                                   1165 ;dataptr                   Allocated to stack - sp -7
                                   1166 ;chunk                     Allocated to stack - sp -9
                                   1167 ;c                         Allocated to stack - sp -2
                                   1168 ;len                       Allocated to registers r3 r4 
                                   1169 ;------------------------------------------------------------
                                   1170 ;	../contiki-sensinode/core/net/rime/rudolph1.c:88: read_data(struct rudolph1_conn *c, uint8_t *dataptr, int chunk)
                                   1171 ;	-----------------------------------------
                                   1172 ;	 function read_data
                                   1173 ;	-----------------------------------------
      000000                       1174 _read_data:
                           000007  1175 	ar7 = 0x07
                           000006  1176 	ar6 = 0x06
                           000005  1177 	ar5 = 0x05
                           000004  1178 	ar4 = 0x04
                           000003  1179 	ar3 = 0x03
                           000002  1180 	ar2 = 0x02
                           000001  1181 	ar1 = 0x01
                           000000  1182 	ar0 = 0x00
      000000 C0 82            [24] 1183 	push	dpl
      000002 C0 83            [24] 1184 	push	dph
      000004 C0 F0            [24] 1185 	push	b
                                   1186 ;	../contiki-sensinode/core/net/rime/rudolph1.c:90: int len = 0;
      000006 7B 00            [12] 1187 	mov	r3,#0x00
      000008 7C 00            [12] 1188 	mov	r4,#0x00
                                   1189 ;	../contiki-sensinode/core/net/rime/rudolph1.c:92: if(c->cb->read_chunk) {
      00000A A8 81            [24] 1190 	mov	r0,sp
      00000C 18               [12] 1191 	dec	r0
      00000D 18               [12] 1192 	dec	r0
      00000E 74 88            [12] 1193 	mov	a,#0x88
      000010 26               [12] 1194 	add	a,@r0
      000011 FA               [12] 1195 	mov	r2,a
      000012 E4               [12] 1196 	clr	a
      000013 08               [12] 1197 	inc	r0
      000014 36               [12] 1198 	addc	a,@r0
      000015 FE               [12] 1199 	mov	r6,a
      000016 08               [12] 1200 	inc	r0
      000017 86 07            [24] 1201 	mov	ar7,@r0
      000019 8A 82            [24] 1202 	mov	dpl,r2
      00001B 8E 83            [24] 1203 	mov	dph,r6
      00001D 8F F0            [24] 1204 	mov	b,r7
      00001F 12r00r00         [24] 1205 	lcall	__gptrget
      000022 FA               [12] 1206 	mov	r2,a
      000023 A3               [24] 1207 	inc	dptr
      000024 12r00r00         [24] 1208 	lcall	__gptrget
      000027 FE               [12] 1209 	mov	r6,a
      000028 A3               [24] 1210 	inc	dptr
      000029 12r00r00         [24] 1211 	lcall	__gptrget
      00002C FF               [12] 1212 	mov	r7,a
      00002D 74 02            [12] 1213 	mov	a,#0x02
      00002F 2A               [12] 1214 	add	a,r2
      000030 FA               [12] 1215 	mov	r2,a
      000031 E4               [12] 1216 	clr	a
      000032 3E               [12] 1217 	addc	a,r6
      000033 FE               [12] 1218 	mov	r6,a
      000034 8A 82            [24] 1219 	mov	dpl,r2
      000036 8E 83            [24] 1220 	mov	dph,r6
      000038 8F F0            [24] 1221 	mov	b,r7
      00003A 12r00r00         [24] 1222 	lcall	__gptrget
      00003D FE               [12] 1223 	mov	r6,a
      00003E A3               [24] 1224 	inc	dptr
      00003F 12r00r00         [24] 1225 	lcall	__gptrget
      000042 FF               [12] 1226 	mov	r7,a
      000043 4E               [12] 1227 	orl	a,r6
      000044 60 59            [24] 1228 	jz	00102$
                                   1229 ;	../contiki-sensinode/core/net/rime/rudolph1.c:93: len = c->cb->read_chunk(c, chunk * RUDOLPH1_DATASIZE,
      000046 E5 81            [12] 1230 	mov	a,sp
      000048 24 F7            [12] 1231 	add	a,#0xf7
      00004A F8               [12] 1232 	mov	r0,a
      00004B 86 02            [24] 1233 	mov	ar2,@r0
      00004D 08               [12] 1234 	inc	r0
      00004E E6               [12] 1235 	mov	a,@r0
      00004F 54 03            [12] 1236 	anl	a,#0x03
      000051 A2 E0            [12] 1237 	mov	c,acc.0
      000053 CA               [12] 1238 	xch	a,r2
      000054 13               [12] 1239 	rrc	a
      000055 CA               [12] 1240 	xch	a,r2
      000056 13               [12] 1241 	rrc	a
      000057 A2 E0            [12] 1242 	mov	c,acc.0
      000059 CA               [12] 1243 	xch	a,r2
      00005A 13               [12] 1244 	rrc	a
      00005B CA               [12] 1245 	xch	a,r2
      00005C 13               [12] 1246 	rrc	a
      00005D CA               [12] 1247 	xch	a,r2
      00005E FD               [12] 1248 	mov	r5,a
      00005F 74 40            [12] 1249 	mov	a,#0x40
      000061 C0 E0            [24] 1250 	push	acc
      000063 E4               [12] 1251 	clr	a
      000064 C0 E0            [24] 1252 	push	acc
      000066 E5 81            [12] 1253 	mov	a,sp
      000068 24 F7            [12] 1254 	add	a,#0xf7
      00006A F8               [12] 1255 	mov	r0,a
      00006B E6               [12] 1256 	mov	a,@r0
      00006C C0 E0            [24] 1257 	push	acc
      00006E 08               [12] 1258 	inc	r0
      00006F E6               [12] 1259 	mov	a,@r0
      000070 C0 E0            [24] 1260 	push	acc
      000072 08               [12] 1261 	inc	r0
      000073 E6               [12] 1262 	mov	a,@r0
      000074 C0 E0            [24] 1263 	push	acc
      000076 C0 02            [24] 1264 	push	ar2
      000078 C0 05            [24] 1265 	push	ar5
      00007A 12r00r7F         [24] 1266 	lcall	00109$
      00007D 80 12            [24] 1267 	sjmp	00110$
      00007F                       1268 00109$:
      00007F C0 06            [24] 1269 	push	ar6
      000081 C0 07            [24] 1270 	push	ar7
      000083 E5 81            [12] 1271 	mov	a,sp
      000085 24 F3            [12] 1272 	add	a,#0xf3
      000087 F8               [12] 1273 	mov	r0,a
      000088 86 82            [24] 1274 	mov	dpl,@r0
      00008A 08               [12] 1275 	inc	r0
      00008B 86 83            [24] 1276 	mov	dph,@r0
      00008D 08               [12] 1277 	inc	r0
      00008E 86 F0            [24] 1278 	mov	b,@r0
      000090 22               [24] 1279 	ret
      000091                       1280 00110$:
      000091 AE 82            [24] 1281 	mov	r6,dpl
      000093 AF 83            [24] 1282 	mov	r7,dph
      000095 E5 81            [12] 1283 	mov	a,sp
      000097 24 F9            [12] 1284 	add	a,#0xf9
      000099 F5 81            [12] 1285 	mov	sp,a
      00009B 8E 03            [24] 1286 	mov	ar3,r6
      00009D 8F 04            [24] 1287 	mov	ar4,r7
      00009F                       1288 00102$:
                                   1289 ;	../contiki-sensinode/core/net/rime/rudolph1.c:96: return len;
      00009F 8B 82            [24] 1290 	mov	dpl,r3
      0000A1 8C 83            [24] 1291 	mov	dph,r4
      0000A3 15 81            [12] 1292 	dec	sp
      0000A5 15 81            [12] 1293 	dec	sp
      0000A7 15 81            [12] 1294 	dec	sp
      0000A9 22               [24] 1295 	ret
                                   1296 ;------------------------------------------------------------
                                   1297 ;Allocation info for local variables in function 'format_data'
                                   1298 ;------------------------------------------------------------
                                   1299 ;chunk                     Allocated to stack - sp -9
                                   1300 ;c                         Allocated to stack - sp -5
                                   1301 ;p                         Allocated to stack - sp -2
                                   1302 ;------------------------------------------------------------
                                   1303 ;	../contiki-sensinode/core/net/rime/rudolph1.c:100: format_data(struct rudolph1_conn *c, int chunk)
                                   1304 ;	-----------------------------------------
                                   1305 ;	 function format_data
                                   1306 ;	-----------------------------------------
      0000AA                       1307 _format_data:
      0000AA C0 82            [24] 1308 	push	dpl
      0000AC C0 83            [24] 1309 	push	dph
      0000AE C0 F0            [24] 1310 	push	b
      0000B0 05 81            [12] 1311 	inc	sp
      0000B2 05 81            [12] 1312 	inc	sp
      0000B4 05 81            [12] 1313 	inc	sp
                                   1314 ;	../contiki-sensinode/core/net/rime/rudolph1.c:104: packetbuf_clear();
      0000B6 12r00r00         [24] 1315 	lcall	_packetbuf_clear
                                   1316 ;	../contiki-sensinode/core/net/rime/rudolph1.c:105: p = packetbuf_dataptr();
      0000B9 12r00r00         [24] 1317 	lcall	_packetbuf_dataptr
      0000BC AA 82            [24] 1318 	mov	r2,dpl
      0000BE AB 83            [24] 1319 	mov	r3,dph
      0000C0 AC F0            [24] 1320 	mov	r4,b
      0000C2 A8 81            [24] 1321 	mov	r0,sp
      0000C4 18               [12] 1322 	dec	r0
      0000C5 18               [12] 1323 	dec	r0
      0000C6 A6 02            [24] 1324 	mov	@r0,ar2
      0000C8 08               [12] 1325 	inc	r0
      0000C9 A6 03            [24] 1326 	mov	@r0,ar3
      0000CB 08               [12] 1327 	inc	r0
      0000CC A6 04            [24] 1328 	mov	@r0,ar4
                                   1329 ;	../contiki-sensinode/core/net/rime/rudolph1.c:106: p->h.type = TYPE_DATA;
      0000CE A8 81            [24] 1330 	mov	r0,sp
      0000D0 18               [12] 1331 	dec	r0
      0000D1 18               [12] 1332 	dec	r0
      0000D2 86 82            [24] 1333 	mov	dpl,@r0
      0000D4 08               [12] 1334 	inc	r0
      0000D5 86 83            [24] 1335 	mov	dph,@r0
      0000D7 08               [12] 1336 	inc	r0
      0000D8 86 F0            [24] 1337 	mov	b,@r0
      0000DA E4               [12] 1338 	clr	a
      0000DB 12r00r00         [24] 1339 	lcall	__gptrput
                                   1340 ;	../contiki-sensinode/core/net/rime/rudolph1.c:107: p->h.version = c->version;
      0000DE A8 81            [24] 1341 	mov	r0,sp
      0000E0 18               [12] 1342 	dec	r0
      0000E1 18               [12] 1343 	dec	r0
      0000E2 04               [12] 1344 	inc	a
      0000E3 26               [12] 1345 	add	a,@r0
      0000E4 FD               [12] 1346 	mov	r5,a
      0000E5 E4               [12] 1347 	clr	a
      0000E6 08               [12] 1348 	inc	r0
      0000E7 36               [12] 1349 	addc	a,@r0
      0000E8 FE               [12] 1350 	mov	r6,a
      0000E9 08               [12] 1351 	inc	r0
      0000EA 86 07            [24] 1352 	mov	ar7,@r0
      0000EC E5 81            [12] 1353 	mov	a,sp
      0000EE 24 FB            [12] 1354 	add	a,#0xfb
      0000F0 F8               [12] 1355 	mov	r0,a
      0000F1 74 A6            [12] 1356 	mov	a,#0xA6
      0000F3 26               [12] 1357 	add	a,@r0
      0000F4 FA               [12] 1358 	mov	r2,a
      0000F5 E4               [12] 1359 	clr	a
      0000F6 08               [12] 1360 	inc	r0
      0000F7 36               [12] 1361 	addc	a,@r0
      0000F8 FB               [12] 1362 	mov	r3,a
      0000F9 08               [12] 1363 	inc	r0
      0000FA 86 04            [24] 1364 	mov	ar4,@r0
      0000FC 8A 82            [24] 1365 	mov	dpl,r2
      0000FE 8B 83            [24] 1366 	mov	dph,r3
      000100 8C F0            [24] 1367 	mov	b,r4
      000102 12r00r00         [24] 1368 	lcall	__gptrget
      000105 8D 82            [24] 1369 	mov	dpl,r5
      000107 8E 83            [24] 1370 	mov	dph,r6
      000109 8F F0            [24] 1371 	mov	b,r7
      00010B 12r00r00         [24] 1372 	lcall	__gptrput
                                   1373 ;	../contiki-sensinode/core/net/rime/rudolph1.c:108: p->h.chunk = chunk;
      00010E A8 81            [24] 1374 	mov	r0,sp
      000110 18               [12] 1375 	dec	r0
      000111 18               [12] 1376 	dec	r0
      000112 74 02            [12] 1377 	mov	a,#0x02
      000114 26               [12] 1378 	add	a,@r0
      000115 FD               [12] 1379 	mov	r5,a
      000116 E4               [12] 1380 	clr	a
      000117 08               [12] 1381 	inc	r0
      000118 36               [12] 1382 	addc	a,@r0
      000119 FE               [12] 1383 	mov	r6,a
      00011A 08               [12] 1384 	inc	r0
      00011B 86 07            [24] 1385 	mov	ar7,@r0
      00011D 8D 82            [24] 1386 	mov	dpl,r5
      00011F 8E 83            [24] 1387 	mov	dph,r6
      000121 8F F0            [24] 1388 	mov	b,r7
      000123 E5 81            [12] 1389 	mov	a,sp
      000125 24 F7            [12] 1390 	add	a,#0xf7
      000127 F8               [12] 1391 	mov	r0,a
      000128 E6               [12] 1392 	mov	a,@r0
      000129 12r00r00         [24] 1393 	lcall	__gptrput
      00012C A3               [24] 1394 	inc	dptr
      00012D 08               [12] 1395 	inc	r0
      00012E E6               [12] 1396 	mov	a,@r0
      00012F 12r00r00         [24] 1397 	lcall	__gptrput
                                   1398 ;	../contiki-sensinode/core/net/rime/rudolph1.c:109: p->datalen = read_data(c, p->data, chunk);
      000132 A8 81            [24] 1399 	mov	r0,sp
      000134 18               [12] 1400 	dec	r0
      000135 18               [12] 1401 	dec	r0
      000136 74 04            [12] 1402 	mov	a,#0x04
      000138 26               [12] 1403 	add	a,@r0
      000139 FD               [12] 1404 	mov	r5,a
      00013A E4               [12] 1405 	clr	a
      00013B 08               [12] 1406 	inc	r0
      00013C 36               [12] 1407 	addc	a,@r0
      00013D FE               [12] 1408 	mov	r6,a
      00013E 08               [12] 1409 	inc	r0
      00013F 86 07            [24] 1410 	mov	ar7,@r0
      000141 A8 81            [24] 1411 	mov	r0,sp
      000143 18               [12] 1412 	dec	r0
      000144 18               [12] 1413 	dec	r0
      000145 74 05            [12] 1414 	mov	a,#0x05
      000147 26               [12] 1415 	add	a,@r0
      000148 FA               [12] 1416 	mov	r2,a
      000149 E4               [12] 1417 	clr	a
      00014A 08               [12] 1418 	inc	r0
      00014B 36               [12] 1419 	addc	a,@r0
      00014C FB               [12] 1420 	mov	r3,a
      00014D 08               [12] 1421 	inc	r0
      00014E 86 04            [24] 1422 	mov	ar4,@r0
      000150 C0 07            [24] 1423 	push	ar7
      000152 C0 06            [24] 1424 	push	ar6
      000154 C0 05            [24] 1425 	push	ar5
      000156 E5 81            [12] 1426 	mov	a,sp
      000158 24 F4            [12] 1427 	add	a,#0xf4
      00015A F8               [12] 1428 	mov	r0,a
      00015B E6               [12] 1429 	mov	a,@r0
      00015C C0 E0            [24] 1430 	push	acc
      00015E 08               [12] 1431 	inc	r0
      00015F E6               [12] 1432 	mov	a,@r0
      000160 C0 E0            [24] 1433 	push	acc
      000162 C0 02            [24] 1434 	push	ar2
      000164 C0 03            [24] 1435 	push	ar3
      000166 C0 04            [24] 1436 	push	ar4
      000168 E5 81            [12] 1437 	mov	a,sp
      00016A 24 F3            [12] 1438 	add	a,#0xf3
      00016C F8               [12] 1439 	mov	r0,a
      00016D 86 82            [24] 1440 	mov	dpl,@r0
      00016F 08               [12] 1441 	inc	r0
      000170 86 83            [24] 1442 	mov	dph,@r0
      000172 08               [12] 1443 	inc	r0
      000173 86 F0            [24] 1444 	mov	b,@r0
      000175 12r00r00         [24] 1445 	lcall	_read_data
      000178 AB 82            [24] 1446 	mov	r3,dpl
      00017A E5 81            [12] 1447 	mov	a,sp
      00017C 24 FB            [12] 1448 	add	a,#0xfb
      00017E F5 81            [12] 1449 	mov	sp,a
      000180 D0 05            [24] 1450 	pop	ar5
      000182 D0 06            [24] 1451 	pop	ar6
      000184 D0 07            [24] 1452 	pop	ar7
      000186 8D 82            [24] 1453 	mov	dpl,r5
      000188 8E 83            [24] 1454 	mov	dph,r6
      00018A 8F F0            [24] 1455 	mov	b,r7
      00018C EB               [12] 1456 	mov	a,r3
      00018D 12r00r00         [24] 1457 	lcall	__gptrput
                                   1458 ;	../contiki-sensinode/core/net/rime/rudolph1.c:111: (RUDOLPH1_DATASIZE - p->datalen));
      000190 7C 00            [12] 1459 	mov	r4,#0x00
      000192 74 40            [12] 1460 	mov	a,#0x40
      000194 C3               [12] 1461 	clr	c
      000195 9B               [12] 1462 	subb	a,r3
      000196 FB               [12] 1463 	mov	r3,a
      000197 E4               [12] 1464 	clr	a
      000198 9C               [12] 1465 	subb	a,r4
      000199 FC               [12] 1466 	mov	r4,a
      00019A 74 45            [12] 1467 	mov	a,#0x45
      00019C C3               [12] 1468 	clr	c
      00019D 9B               [12] 1469 	subb	a,r3
      00019E FB               [12] 1470 	mov	r3,a
      00019F E4               [12] 1471 	clr	a
      0001A0 9C               [12] 1472 	subb	a,r4
      0001A1 FC               [12] 1473 	mov	r4,a
      0001A2 8B 82            [24] 1474 	mov	dpl,r3
      0001A4 8C 83            [24] 1475 	mov	dph,r4
      0001A6 C0 07            [24] 1476 	push	ar7
      0001A8 C0 06            [24] 1477 	push	ar6
      0001AA C0 05            [24] 1478 	push	ar5
      0001AC 12r00r00         [24] 1479 	lcall	_packetbuf_set_datalen
      0001AF D0 05            [24] 1480 	pop	ar5
      0001B1 D0 06            [24] 1481 	pop	ar6
      0001B3 D0 07            [24] 1482 	pop	ar7
                                   1483 ;	../contiki-sensinode/core/net/rime/rudolph1.c:113: return p->datalen;
      0001B5 8D 82            [24] 1484 	mov	dpl,r5
      0001B7 8E 83            [24] 1485 	mov	dph,r6
      0001B9 8F F0            [24] 1486 	mov	b,r7
      0001BB 12r00r00         [24] 1487 	lcall	__gptrget
      0001BE FD               [12] 1488 	mov	r5,a
      0001BF 7F 00            [12] 1489 	mov	r7,#0x00
      0001C1 8D 82            [24] 1490 	mov	dpl,r5
      0001C3 8F 83            [24] 1491 	mov	dph,r7
      0001C5 E5 81            [12] 1492 	mov	a,sp
      0001C7 24 FA            [12] 1493 	add	a,#0xFA
      0001C9 F5 81            [12] 1494 	mov	sp,a
      0001CB 22               [24] 1495 	ret
                                   1496 ;------------------------------------------------------------
                                   1497 ;Allocation info for local variables in function 'write_data'
                                   1498 ;------------------------------------------------------------
                                   1499 ;chunk                     Allocated to stack - sp -6
                                   1500 ;data                      Allocated to stack - sp -9
                                   1501 ;datalen                   Allocated to stack - sp -11
                                   1502 ;c                         Allocated to stack - sp -2
                                   1503 ;------------------------------------------------------------
                                   1504 ;	../contiki-sensinode/core/net/rime/rudolph1.c:117: write_data(struct rudolph1_conn *c, int chunk, uint8_t *data, int datalen)
                                   1505 ;	-----------------------------------------
                                   1506 ;	 function write_data
                                   1507 ;	-----------------------------------------
      0001CC                       1508 _write_data:
      0001CC C0 82            [24] 1509 	push	dpl
      0001CE C0 83            [24] 1510 	push	dph
      0001D0 C0 F0            [24] 1511 	push	b
                                   1512 ;	../contiki-sensinode/core/net/rime/rudolph1.c:119: if(chunk == 0) {
      0001D2 E5 81            [12] 1513 	mov	a,sp
      0001D4 24 FA            [12] 1514 	add	a,#0xfa
      0001D6 F8               [12] 1515 	mov	r0,a
      0001D7 E6               [12] 1516 	mov	a,@r0
      0001D8 08               [12] 1517 	inc	r0
      0001D9 46               [12] 1518 	orl	a,@r0
      0001DA 70 77            [24] 1519 	jnz	00102$
                                   1520 ;	../contiki-sensinode/core/net/rime/rudolph1.c:120: c->cb->write_chunk(c, 0, RUDOLPH1_FLAG_NEWFILE, data, 0);
      0001DC A8 81            [24] 1521 	mov	r0,sp
      0001DE 18               [12] 1522 	dec	r0
      0001DF 18               [12] 1523 	dec	r0
      0001E0 74 88            [12] 1524 	mov	a,#0x88
      0001E2 26               [12] 1525 	add	a,@r0
      0001E3 FA               [12] 1526 	mov	r2,a
      0001E4 E4               [12] 1527 	clr	a
      0001E5 08               [12] 1528 	inc	r0
      0001E6 36               [12] 1529 	addc	a,@r0
      0001E7 FB               [12] 1530 	mov	r3,a
      0001E8 08               [12] 1531 	inc	r0
      0001E9 86 04            [24] 1532 	mov	ar4,@r0
      0001EB 8A 82            [24] 1533 	mov	dpl,r2
      0001ED 8B 83            [24] 1534 	mov	dph,r3
      0001EF 8C F0            [24] 1535 	mov	b,r4
      0001F1 12r00r00         [24] 1536 	lcall	__gptrget
      0001F4 FA               [12] 1537 	mov	r2,a
      0001F5 A3               [24] 1538 	inc	dptr
      0001F6 12r00r00         [24] 1539 	lcall	__gptrget
      0001F9 FB               [12] 1540 	mov	r3,a
      0001FA A3               [24] 1541 	inc	dptr
      0001FB 12r00r00         [24] 1542 	lcall	__gptrget
      0001FE FC               [12] 1543 	mov	r4,a
      0001FF 8A 82            [24] 1544 	mov	dpl,r2
      000201 8B 83            [24] 1545 	mov	dph,r3
      000203 8C F0            [24] 1546 	mov	b,r4
      000205 12r00r00         [24] 1547 	lcall	__gptrget
      000208 FA               [12] 1548 	mov	r2,a
      000209 A3               [24] 1549 	inc	dptr
      00020A 12r00r00         [24] 1550 	lcall	__gptrget
      00020D FB               [12] 1551 	mov	r3,a
      00020E C0 03            [24] 1552 	push	ar3
      000210 C0 02            [24] 1553 	push	ar2
      000212 E4               [12] 1554 	clr	a
      000213 C0 E0            [24] 1555 	push	acc
      000215 C0 E0            [24] 1556 	push	acc
      000217 E5 81            [12] 1557 	mov	a,sp
      000219 24 F3            [12] 1558 	add	a,#0xf3
      00021B F8               [12] 1559 	mov	r0,a
      00021C E6               [12] 1560 	mov	a,@r0
      00021D C0 E0            [24] 1561 	push	acc
      00021F 08               [12] 1562 	inc	r0
      000220 E6               [12] 1563 	mov	a,@r0
      000221 C0 E0            [24] 1564 	push	acc
      000223 08               [12] 1565 	inc	r0
      000224 E6               [12] 1566 	mov	a,@r0
      000225 C0 E0            [24] 1567 	push	acc
      000227 74 01            [12] 1568 	mov	a,#0x01
      000229 C0 E0            [24] 1569 	push	acc
      00022B E4               [12] 1570 	clr	a
      00022C C0 E0            [24] 1571 	push	acc
      00022E C0 E0            [24] 1572 	push	acc
      000230 C0 E0            [24] 1573 	push	acc
      000232 12r02r37         [24] 1574 	lcall	00115$
      000235 80 12            [24] 1575 	sjmp	00116$
      000237                       1576 00115$:
      000237 C0 02            [24] 1577 	push	ar2
      000239 C0 03            [24] 1578 	push	ar3
      00023B E5 81            [12] 1579 	mov	a,sp
      00023D 24 EF            [12] 1580 	add	a,#0xef
      00023F F8               [12] 1581 	mov	r0,a
      000240 86 82            [24] 1582 	mov	dpl,@r0
      000242 08               [12] 1583 	inc	r0
      000243 86 83            [24] 1584 	mov	dph,@r0
      000245 08               [12] 1585 	inc	r0
      000246 86 F0            [24] 1586 	mov	b,@r0
      000248 22               [24] 1587 	ret
      000249                       1588 00116$:
      000249 E5 81            [12] 1589 	mov	a,sp
      00024B 24 F7            [12] 1590 	add	a,#0xf7
      00024D F5 81            [12] 1591 	mov	sp,a
      00024F D0 02            [24] 1592 	pop	ar2
      000251 D0 03            [24] 1593 	pop	ar3
      000253                       1594 00102$:
                                   1595 ;	../contiki-sensinode/core/net/rime/rudolph1.c:123: if(datalen < RUDOLPH1_DATASIZE) {
      000253 E5 81            [12] 1596 	mov	a,sp
      000255 24 F5            [12] 1597 	add	a,#0xf5
      000257 F8               [12] 1598 	mov	r0,a
      000258 C3               [12] 1599 	clr	c
      000259 E6               [12] 1600 	mov	a,@r0
      00025A 94 40            [12] 1601 	subb	a,#0x40
      00025C 08               [12] 1602 	inc	r0
      00025D E6               [12] 1603 	mov	a,@r0
      00025E 64 80            [12] 1604 	xrl	a,#0x80
      000260 94 80            [12] 1605 	subb	a,#0x80
      000262 40 03            [24] 1606 	jc	00117$
      000264 02r03r01         [24] 1607 	ljmp	00104$
      000267                       1608 00117$:
                                   1609 ;	../contiki-sensinode/core/net/rime/rudolph1.c:127: c->cb->write_chunk(c, chunk * RUDOLPH1_DATASIZE,
      000267 A8 81            [24] 1610 	mov	r0,sp
      000269 18               [12] 1611 	dec	r0
      00026A 18               [12] 1612 	dec	r0
      00026B 74 88            [12] 1613 	mov	a,#0x88
      00026D 26               [12] 1614 	add	a,@r0
      00026E FA               [12] 1615 	mov	r2,a
      00026F E4               [12] 1616 	clr	a
      000270 08               [12] 1617 	inc	r0
      000271 36               [12] 1618 	addc	a,@r0
      000272 FB               [12] 1619 	mov	r3,a
      000273 08               [12] 1620 	inc	r0
      000274 86 04            [24] 1621 	mov	ar4,@r0
      000276 8A 82            [24] 1622 	mov	dpl,r2
      000278 8B 83            [24] 1623 	mov	dph,r3
      00027A 8C F0            [24] 1624 	mov	b,r4
      00027C 12r00r00         [24] 1625 	lcall	__gptrget
      00027F FA               [12] 1626 	mov	r2,a
      000280 A3               [24] 1627 	inc	dptr
      000281 12r00r00         [24] 1628 	lcall	__gptrget
      000284 FB               [12] 1629 	mov	r3,a
      000285 A3               [24] 1630 	inc	dptr
      000286 12r00r00         [24] 1631 	lcall	__gptrget
      000289 FC               [12] 1632 	mov	r4,a
      00028A 8A 82            [24] 1633 	mov	dpl,r2
      00028C 8B 83            [24] 1634 	mov	dph,r3
      00028E 8C F0            [24] 1635 	mov	b,r4
      000290 12r00r00         [24] 1636 	lcall	__gptrget
      000293 FA               [12] 1637 	mov	r2,a
      000294 A3               [24] 1638 	inc	dptr
      000295 12r00r00         [24] 1639 	lcall	__gptrget
      000298 FB               [12] 1640 	mov	r3,a
      000299 E5 81            [12] 1641 	mov	a,sp
      00029B 24 FA            [12] 1642 	add	a,#0xfa
      00029D F8               [12] 1643 	mov	r0,a
      00029E 86 04            [24] 1644 	mov	ar4,@r0
      0002A0 08               [12] 1645 	inc	r0
      0002A1 E6               [12] 1646 	mov	a,@r0
      0002A2 54 03            [12] 1647 	anl	a,#0x03
      0002A4 A2 E0            [12] 1648 	mov	c,acc.0
      0002A6 CC               [12] 1649 	xch	a,r4
      0002A7 13               [12] 1650 	rrc	a
      0002A8 CC               [12] 1651 	xch	a,r4
      0002A9 13               [12] 1652 	rrc	a
      0002AA A2 E0            [12] 1653 	mov	c,acc.0
      0002AC CC               [12] 1654 	xch	a,r4
      0002AD 13               [12] 1655 	rrc	a
      0002AE CC               [12] 1656 	xch	a,r4
      0002AF 13               [12] 1657 	rrc	a
      0002B0 CC               [12] 1658 	xch	a,r4
      0002B1 FF               [12] 1659 	mov	r7,a
      0002B2 C0 03            [24] 1660 	push	ar3
      0002B4 C0 02            [24] 1661 	push	ar2
      0002B6 E5 81            [12] 1662 	mov	a,sp
      0002B8 24 F3            [12] 1663 	add	a,#0xf3
      0002BA F8               [12] 1664 	mov	r0,a
      0002BB E6               [12] 1665 	mov	a,@r0
      0002BC C0 E0            [24] 1666 	push	acc
      0002BE 08               [12] 1667 	inc	r0
      0002BF E6               [12] 1668 	mov	a,@r0
      0002C0 C0 E0            [24] 1669 	push	acc
      0002C2 E5 81            [12] 1670 	mov	a,sp
      0002C4 24 F3            [12] 1671 	add	a,#0xf3
      0002C6 F8               [12] 1672 	mov	r0,a
      0002C7 E6               [12] 1673 	mov	a,@r0
      0002C8 C0 E0            [24] 1674 	push	acc
      0002CA 08               [12] 1675 	inc	r0
      0002CB E6               [12] 1676 	mov	a,@r0
      0002CC C0 E0            [24] 1677 	push	acc
      0002CE 08               [12] 1678 	inc	r0
      0002CF E6               [12] 1679 	mov	a,@r0
      0002D0 C0 E0            [24] 1680 	push	acc
      0002D2 74 02            [12] 1681 	mov	a,#0x02
      0002D4 C0 E0            [24] 1682 	push	acc
      0002D6 E4               [12] 1683 	clr	a
      0002D7 C0 E0            [24] 1684 	push	acc
      0002D9 C0 04            [24] 1685 	push	ar4
      0002DB C0 07            [24] 1686 	push	ar7
      0002DD 12r02rE2         [24] 1687 	lcall	00118$
      0002E0 80 12            [24] 1688 	sjmp	00119$
      0002E2                       1689 00118$:
      0002E2 C0 02            [24] 1690 	push	ar2
      0002E4 C0 03            [24] 1691 	push	ar3
      0002E6 E5 81            [12] 1692 	mov	a,sp
      0002E8 24 EF            [12] 1693 	add	a,#0xef
      0002EA F8               [12] 1694 	mov	r0,a
      0002EB 86 82            [24] 1695 	mov	dpl,@r0
      0002ED 08               [12] 1696 	inc	r0
      0002EE 86 83            [24] 1697 	mov	dph,@r0
      0002F0 08               [12] 1698 	inc	r0
      0002F1 86 F0            [24] 1699 	mov	b,@r0
      0002F3 22               [24] 1700 	ret
      0002F4                       1701 00119$:
      0002F4 E5 81            [12] 1702 	mov	a,sp
      0002F6 24 F7            [12] 1703 	add	a,#0xf7
      0002F8 F5 81            [12] 1704 	mov	sp,a
      0002FA D0 02            [24] 1705 	pop	ar2
      0002FC D0 03            [24] 1706 	pop	ar3
      0002FE 02r03r96         [24] 1707 	ljmp	00106$
      000301                       1708 00104$:
                                   1709 ;	../contiki-sensinode/core/net/rime/rudolph1.c:130: c->cb->write_chunk(c, chunk * RUDOLPH1_DATASIZE,
      000301 A8 81            [24] 1710 	mov	r0,sp
      000303 18               [12] 1711 	dec	r0
      000304 18               [12] 1712 	dec	r0
      000305 74 88            [12] 1713 	mov	a,#0x88
      000307 26               [12] 1714 	add	a,@r0
      000308 FD               [12] 1715 	mov	r5,a
      000309 E4               [12] 1716 	clr	a
      00030A 08               [12] 1717 	inc	r0
      00030B 36               [12] 1718 	addc	a,@r0
      00030C FE               [12] 1719 	mov	r6,a
      00030D 08               [12] 1720 	inc	r0
      00030E 86 07            [24] 1721 	mov	ar7,@r0
      000310 8D 82            [24] 1722 	mov	dpl,r5
      000312 8E 83            [24] 1723 	mov	dph,r6
      000314 8F F0            [24] 1724 	mov	b,r7
      000316 12r00r00         [24] 1725 	lcall	__gptrget
      000319 FD               [12] 1726 	mov	r5,a
      00031A A3               [24] 1727 	inc	dptr
      00031B 12r00r00         [24] 1728 	lcall	__gptrget
      00031E FE               [12] 1729 	mov	r6,a
      00031F A3               [24] 1730 	inc	dptr
      000320 12r00r00         [24] 1731 	lcall	__gptrget
      000323 FF               [12] 1732 	mov	r7,a
      000324 8D 82            [24] 1733 	mov	dpl,r5
      000326 8E 83            [24] 1734 	mov	dph,r6
      000328 8F F0            [24] 1735 	mov	b,r7
      00032A 12r00r00         [24] 1736 	lcall	__gptrget
      00032D FD               [12] 1737 	mov	r5,a
      00032E A3               [24] 1738 	inc	dptr
      00032F 12r00r00         [24] 1739 	lcall	__gptrget
      000332 FE               [12] 1740 	mov	r6,a
      000333 E5 81            [12] 1741 	mov	a,sp
      000335 24 FA            [12] 1742 	add	a,#0xfa
      000337 F8               [12] 1743 	mov	r0,a
      000338 86 04            [24] 1744 	mov	ar4,@r0
      00033A 08               [12] 1745 	inc	r0
      00033B E6               [12] 1746 	mov	a,@r0
      00033C 54 03            [12] 1747 	anl	a,#0x03
      00033E A2 E0            [12] 1748 	mov	c,acc.0
      000340 CC               [12] 1749 	xch	a,r4
      000341 13               [12] 1750 	rrc	a
      000342 CC               [12] 1751 	xch	a,r4
      000343 13               [12] 1752 	rrc	a
      000344 A2 E0            [12] 1753 	mov	c,acc.0
      000346 CC               [12] 1754 	xch	a,r4
      000347 13               [12] 1755 	rrc	a
      000348 CC               [12] 1756 	xch	a,r4
      000349 13               [12] 1757 	rrc	a
      00034A CC               [12] 1758 	xch	a,r4
      00034B FF               [12] 1759 	mov	r7,a
      00034C C0 06            [24] 1760 	push	ar6
      00034E C0 05            [24] 1761 	push	ar5
      000350 E5 81            [12] 1762 	mov	a,sp
      000352 24 F3            [12] 1763 	add	a,#0xf3
      000354 F8               [12] 1764 	mov	r0,a
      000355 E6               [12] 1765 	mov	a,@r0
      000356 C0 E0            [24] 1766 	push	acc
      000358 08               [12] 1767 	inc	r0
      000359 E6               [12] 1768 	mov	a,@r0
      00035A C0 E0            [24] 1769 	push	acc
      00035C E5 81            [12] 1770 	mov	a,sp
      00035E 24 F3            [12] 1771 	add	a,#0xf3
      000360 F8               [12] 1772 	mov	r0,a
      000361 E6               [12] 1773 	mov	a,@r0
      000362 C0 E0            [24] 1774 	push	acc
      000364 08               [12] 1775 	inc	r0
      000365 E6               [12] 1776 	mov	a,@r0
      000366 C0 E0            [24] 1777 	push	acc
      000368 08               [12] 1778 	inc	r0
      000369 E6               [12] 1779 	mov	a,@r0
      00036A C0 E0            [24] 1780 	push	acc
      00036C E4               [12] 1781 	clr	a
      00036D C0 E0            [24] 1782 	push	acc
      00036F C0 E0            [24] 1783 	push	acc
      000371 C0 04            [24] 1784 	push	ar4
      000373 C0 07            [24] 1785 	push	ar7
      000375 12r03r7A         [24] 1786 	lcall	00120$
      000378 80 12            [24] 1787 	sjmp	00121$
      00037A                       1788 00120$:
      00037A C0 05            [24] 1789 	push	ar5
      00037C C0 06            [24] 1790 	push	ar6
      00037E E5 81            [12] 1791 	mov	a,sp
      000380 24 EF            [12] 1792 	add	a,#0xef
      000382 F8               [12] 1793 	mov	r0,a
      000383 86 82            [24] 1794 	mov	dpl,@r0
      000385 08               [12] 1795 	inc	r0
      000386 86 83            [24] 1796 	mov	dph,@r0
      000388 08               [12] 1797 	inc	r0
      000389 86 F0            [24] 1798 	mov	b,@r0
      00038B 22               [24] 1799 	ret
      00038C                       1800 00121$:
      00038C E5 81            [12] 1801 	mov	a,sp
      00038E 24 F7            [12] 1802 	add	a,#0xf7
      000390 F5 81            [12] 1803 	mov	sp,a
      000392 D0 05            [24] 1804 	pop	ar5
      000394 D0 06            [24] 1805 	pop	ar6
      000396                       1806 00106$:
      000396 15 81            [12] 1807 	dec	sp
      000398 15 81            [12] 1808 	dec	sp
      00039A 15 81            [12] 1809 	dec	sp
      00039C 22               [24] 1810 	ret
                                   1811 ;------------------------------------------------------------
                                   1812 ;Allocation info for local variables in function 'send_nack'
                                   1813 ;------------------------------------------------------------
                                   1814 ;c                         Allocated to stack - sp -5
                                   1815 ;hdr                       Allocated to stack - sp -2
                                   1816 ;------------------------------------------------------------
                                   1817 ;	../contiki-sensinode/core/net/rime/rudolph1.c:136: send_nack(struct rudolph1_conn *c)
                                   1818 ;	-----------------------------------------
                                   1819 ;	 function send_nack
                                   1820 ;	-----------------------------------------
      00039D                       1821 _send_nack:
      00039D C0 82            [24] 1822 	push	dpl
      00039F C0 83            [24] 1823 	push	dph
      0003A1 C0 F0            [24] 1824 	push	b
      0003A3 05 81            [12] 1825 	inc	sp
      0003A5 05 81            [12] 1826 	inc	sp
      0003A7 05 81            [12] 1827 	inc	sp
                                   1828 ;	../contiki-sensinode/core/net/rime/rudolph1.c:139: packetbuf_clear();
      0003A9 12r00r00         [24] 1829 	lcall	_packetbuf_clear
                                   1830 ;	../contiki-sensinode/core/net/rime/rudolph1.c:140: packetbuf_hdralloc(sizeof(struct rudolph1_hdr));
      0003AC 90 00 04         [24] 1831 	mov	dptr,#0x0004
      0003AF 12r00r00         [24] 1832 	lcall	_packetbuf_hdralloc
                                   1833 ;	../contiki-sensinode/core/net/rime/rudolph1.c:141: hdr = packetbuf_hdrptr();
      0003B2 12r00r00         [24] 1834 	lcall	_packetbuf_hdrptr
      0003B5 AA 82            [24] 1835 	mov	r2,dpl
      0003B7 AB 83            [24] 1836 	mov	r3,dph
      0003B9 AC F0            [24] 1837 	mov	r4,b
      0003BB A8 81            [24] 1838 	mov	r0,sp
      0003BD 18               [12] 1839 	dec	r0
      0003BE 18               [12] 1840 	dec	r0
      0003BF A6 02            [24] 1841 	mov	@r0,ar2
      0003C1 08               [12] 1842 	inc	r0
      0003C2 A6 03            [24] 1843 	mov	@r0,ar3
      0003C4 08               [12] 1844 	inc	r0
      0003C5 A6 04            [24] 1845 	mov	@r0,ar4
                                   1846 ;	../contiki-sensinode/core/net/rime/rudolph1.c:143: hdr->type = TYPE_NACK;
      0003C7 A8 81            [24] 1847 	mov	r0,sp
      0003C9 18               [12] 1848 	dec	r0
      0003CA 18               [12] 1849 	dec	r0
      0003CB 86 82            [24] 1850 	mov	dpl,@r0
      0003CD 08               [12] 1851 	inc	r0
      0003CE 86 83            [24] 1852 	mov	dph,@r0
      0003D0 08               [12] 1853 	inc	r0
      0003D1 86 F0            [24] 1854 	mov	b,@r0
      0003D3 74 01            [12] 1855 	mov	a,#0x01
      0003D5 12r00r00         [24] 1856 	lcall	__gptrput
                                   1857 ;	../contiki-sensinode/core/net/rime/rudolph1.c:144: hdr->version = c->version;
      0003D8 A8 81            [24] 1858 	mov	r0,sp
      0003DA 18               [12] 1859 	dec	r0
      0003DB 18               [12] 1860 	dec	r0
      0003DC 26               [12] 1861 	add	a,@r0
      0003DD FD               [12] 1862 	mov	r5,a
      0003DE E4               [12] 1863 	clr	a
      0003DF 08               [12] 1864 	inc	r0
      0003E0 36               [12] 1865 	addc	a,@r0
      0003E1 FE               [12] 1866 	mov	r6,a
      0003E2 08               [12] 1867 	inc	r0
      0003E3 86 07            [24] 1868 	mov	ar7,@r0
      0003E5 E5 81            [12] 1869 	mov	a,sp
      0003E7 24 FB            [12] 1870 	add	a,#0xfb
      0003E9 F8               [12] 1871 	mov	r0,a
      0003EA 74 A6            [12] 1872 	mov	a,#0xA6
      0003EC 26               [12] 1873 	add	a,@r0
      0003ED FA               [12] 1874 	mov	r2,a
      0003EE E4               [12] 1875 	clr	a
      0003EF 08               [12] 1876 	inc	r0
      0003F0 36               [12] 1877 	addc	a,@r0
      0003F1 FB               [12] 1878 	mov	r3,a
      0003F2 08               [12] 1879 	inc	r0
      0003F3 86 04            [24] 1880 	mov	ar4,@r0
      0003F5 8A 82            [24] 1881 	mov	dpl,r2
      0003F7 8B 83            [24] 1882 	mov	dph,r3
      0003F9 8C F0            [24] 1883 	mov	b,r4
      0003FB 12r00r00         [24] 1884 	lcall	__gptrget
      0003FE 8D 82            [24] 1885 	mov	dpl,r5
      000400 8E 83            [24] 1886 	mov	dph,r6
      000402 8F F0            [24] 1887 	mov	b,r7
      000404 12r00r00         [24] 1888 	lcall	__gptrput
                                   1889 ;	../contiki-sensinode/core/net/rime/rudolph1.c:145: hdr->chunk = c->chunk;
      000407 A8 81            [24] 1890 	mov	r0,sp
      000409 18               [12] 1891 	dec	r0
      00040A 18               [12] 1892 	dec	r0
      00040B 74 02            [12] 1893 	mov	a,#0x02
      00040D 26               [12] 1894 	add	a,@r0
      00040E FD               [12] 1895 	mov	r5,a
      00040F E4               [12] 1896 	clr	a
      000410 08               [12] 1897 	inc	r0
      000411 36               [12] 1898 	addc	a,@r0
      000412 FE               [12] 1899 	mov	r6,a
      000413 08               [12] 1900 	inc	r0
      000414 86 07            [24] 1901 	mov	ar7,@r0
      000416 E5 81            [12] 1902 	mov	a,sp
      000418 24 FB            [12] 1903 	add	a,#0xfb
      00041A F8               [12] 1904 	mov	r0,a
      00041B 74 A2            [12] 1905 	mov	a,#0xA2
      00041D 26               [12] 1906 	add	a,@r0
      00041E FA               [12] 1907 	mov	r2,a
      00041F E4               [12] 1908 	clr	a
      000420 08               [12] 1909 	inc	r0
      000421 36               [12] 1910 	addc	a,@r0
      000422 FB               [12] 1911 	mov	r3,a
      000423 08               [12] 1912 	inc	r0
      000424 86 04            [24] 1913 	mov	ar4,@r0
      000426 8A 82            [24] 1914 	mov	dpl,r2
      000428 8B 83            [24] 1915 	mov	dph,r3
      00042A 8C F0            [24] 1916 	mov	b,r4
      00042C 12r00r00         [24] 1917 	lcall	__gptrget
      00042F FA               [12] 1918 	mov	r2,a
      000430 A3               [24] 1919 	inc	dptr
      000431 12r00r00         [24] 1920 	lcall	__gptrget
      000434 FB               [12] 1921 	mov	r3,a
      000435 8D 82            [24] 1922 	mov	dpl,r5
      000437 8E 83            [24] 1923 	mov	dph,r6
      000439 8F F0            [24] 1924 	mov	b,r7
      00043B EA               [12] 1925 	mov	a,r2
      00043C 12r00r00         [24] 1926 	lcall	__gptrput
      00043F A3               [24] 1927 	inc	dptr
      000440 EB               [12] 1928 	mov	a,r3
      000441 12r00r00         [24] 1929 	lcall	__gptrput
                                   1930 ;	../contiki-sensinode/core/net/rime/rudolph1.c:150: ipolite_send(&c->ipolite, NACK_TIMEOUT, sizeof(struct rudolph1_hdr));
      000444 E5 81            [12] 1931 	mov	a,sp
      000446 24 FB            [12] 1932 	add	a,#0xfb
      000448 F8               [12] 1933 	mov	r0,a
      000449 74 5B            [12] 1934 	mov	a,#0x5B
      00044B 26               [12] 1935 	add	a,@r0
      00044C FD               [12] 1936 	mov	r5,a
      00044D E4               [12] 1937 	clr	a
      00044E 08               [12] 1938 	inc	r0
      00044F 36               [12] 1939 	addc	a,@r0
      000450 FE               [12] 1940 	mov	r6,a
      000451 08               [12] 1941 	inc	r0
      000452 86 07            [24] 1942 	mov	ar7,@r0
      000454 74 04            [12] 1943 	mov	a,#0x04
      000456 C0 E0            [24] 1944 	push	acc
      000458 74 20            [12] 1945 	mov	a,#0x20
      00045A C0 E0            [24] 1946 	push	acc
      00045C E4               [12] 1947 	clr	a
      00045D C0 E0            [24] 1948 	push	acc
      00045F 8D 82            [24] 1949 	mov	dpl,r5
      000461 8E 83            [24] 1950 	mov	dph,r6
      000463 8F F0            [24] 1951 	mov	b,r7
      000465 12r00r00         [24] 1952 	lcall	_ipolite_send
      000468 15 81            [12] 1953 	dec	sp
      00046A 15 81            [12] 1954 	dec	sp
      00046C 15 81            [12] 1955 	dec	sp
      00046E E5 81            [12] 1956 	mov	a,sp
      000470 24 FA            [12] 1957 	add	a,#0xFA
      000472 F5 81            [12] 1958 	mov	sp,a
      000474 22               [24] 1959 	ret
                                   1960 ;------------------------------------------------------------
                                   1961 ;Allocation info for local variables in function 'handle_data'
                                   1962 ;------------------------------------------------------------
                                   1963 ;p                         Allocated to stack - sp -19
                                   1964 ;c                         Allocated to stack - sp -14
                                   1965 ;sloc0                     Allocated to stack - sp -11
                                   1966 ;sloc1                     Allocated to stack - sp -10
                                   1967 ;sloc2                     Allocated to stack - sp -7
                                   1968 ;sloc3                     Allocated to stack - sp -4
                                   1969 ;sloc4                     Allocated to stack - sp -2
                                   1970 ;------------------------------------------------------------
                                   1971 ;	../contiki-sensinode/core/net/rime/rudolph1.c:154: handle_data(struct rudolph1_conn *c, struct rudolph1_datapacket *p)
                                   1972 ;	-----------------------------------------
                                   1973 ;	 function handle_data
                                   1974 ;	-----------------------------------------
      000475                       1975 _handle_data:
      000475 C0 82            [24] 1976 	push	dpl
      000477 C0 83            [24] 1977 	push	dph
      000479 C0 F0            [24] 1978 	push	b
      00047B E5 81            [12] 1979 	mov	a,sp
      00047D 24 0C            [12] 1980 	add	a,#0x0C
                                   1981 ;	../contiki-sensinode/core/net/rime/rudolph1.c:156: if(LT(c->version, p->h.version)) {
      00047F F5 81            [12] 1982 	mov	sp,a
      000481 24 F2            [12] 1983 	add	a,#0xf2
      000483 F8               [12] 1984 	mov	r0,a
      000484 74 A6            [12] 1985 	mov	a,#0xA6
      000486 26               [12] 1986 	add	a,@r0
      000487 FA               [12] 1987 	mov	r2,a
      000488 E4               [12] 1988 	clr	a
      000489 08               [12] 1989 	inc	r0
      00048A 36               [12] 1990 	addc	a,@r0
      00048B FB               [12] 1991 	mov	r3,a
      00048C 08               [12] 1992 	inc	r0
      00048D 86 04            [24] 1993 	mov	ar4,@r0
      00048F 8A 82            [24] 1994 	mov	dpl,r2
      000491 8B 83            [24] 1995 	mov	dph,r3
      000493 8C F0            [24] 1996 	mov	b,r4
      000495 E5 81            [12] 1997 	mov	a,sp
      000497 24 F5            [12] 1998 	add	a,#0xf5
      000499 F8               [12] 1999 	mov	r0,a
      00049A 12r00r00         [24] 2000 	lcall	__gptrget
      00049D F6               [12] 2001 	mov	@r0,a
      00049E E5 81            [12] 2002 	mov	a,sp
      0004A0 24 ED            [12] 2003 	add	a,#0xed
      0004A2 F8               [12] 2004 	mov	r0,a
      0004A3 E5 81            [12] 2005 	mov	a,sp
      0004A5 24 F6            [12] 2006 	add	a,#0xf6
      0004A7 F9               [12] 2007 	mov	r1,a
      0004A8 E6               [12] 2008 	mov	a,@r0
      0004A9 F7               [12] 2009 	mov	@r1,a
      0004AA 08               [12] 2010 	inc	r0
      0004AB 09               [12] 2011 	inc	r1
      0004AC E6               [12] 2012 	mov	a,@r0
      0004AD F7               [12] 2013 	mov	@r1,a
      0004AE 08               [12] 2014 	inc	r0
      0004AF 09               [12] 2015 	inc	r1
      0004B0 E6               [12] 2016 	mov	a,@r0
      0004B1 F7               [12] 2017 	mov	@r1,a
      0004B2 E5 81            [12] 2018 	mov	a,sp
      0004B4 24 F6            [12] 2019 	add	a,#0xf6
      0004B6 F8               [12] 2020 	mov	r0,a
      0004B7 74 01            [12] 2021 	mov	a,#0x01
      0004B9 26               [12] 2022 	add	a,@r0
      0004BA FD               [12] 2023 	mov	r5,a
      0004BB E4               [12] 2024 	clr	a
      0004BC 08               [12] 2025 	inc	r0
      0004BD 36               [12] 2026 	addc	a,@r0
      0004BE FE               [12] 2027 	mov	r6,a
      0004BF 08               [12] 2028 	inc	r0
      0004C0 86 07            [24] 2029 	mov	ar7,@r0
      0004C2 8D 82            [24] 2030 	mov	dpl,r5
      0004C4 8E 83            [24] 2031 	mov	dph,r6
      0004C6 8F F0            [24] 2032 	mov	b,r7
      0004C8 12r00r00         [24] 2033 	lcall	__gptrget
      0004CB FF               [12] 2034 	mov	r7,a
      0004CC E5 81            [12] 2035 	mov	a,sp
      0004CE 24 F5            [12] 2036 	add	a,#0xf5
      0004D0 F8               [12] 2037 	mov	r0,a
      0004D1 E6               [12] 2038 	mov	a,@r0
      0004D2 C3               [12] 2039 	clr	c
      0004D3 9F               [12] 2040 	subb	a,r7
      0004D4 FE               [12] 2041 	mov	r6,a
      0004D5 20 E7 03         [24] 2042 	jb	acc.7,00142$
      0004D8 02r05rC7         [24] 2043 	ljmp	00117$
      0004DB                       2044 00142$:
                                   2045 ;	../contiki-sensinode/core/net/rime/rudolph1.c:160: c->version = p->h.version;
      0004DB 8A 82            [24] 2046 	mov	dpl,r2
      0004DD 8B 83            [24] 2047 	mov	dph,r3
      0004DF 8C F0            [24] 2048 	mov	b,r4
      0004E1 EF               [12] 2049 	mov	a,r7
      0004E2 12r00r00         [24] 2050 	lcall	__gptrput
                                   2051 ;	../contiki-sensinode/core/net/rime/rudolph1.c:161: c->highest_chunk_heard = c->chunk = 0;
      0004E5 E5 81            [12] 2052 	mov	a,sp
      0004E7 24 F2            [12] 2053 	add	a,#0xf2
      0004E9 F8               [12] 2054 	mov	r0,a
      0004EA 74 A4            [12] 2055 	mov	a,#0xA4
      0004EC 26               [12] 2056 	add	a,@r0
      0004ED FF               [12] 2057 	mov	r7,a
      0004EE E4               [12] 2058 	clr	a
      0004EF 08               [12] 2059 	inc	r0
      0004F0 36               [12] 2060 	addc	a,@r0
      0004F1 FD               [12] 2061 	mov	r5,a
      0004F2 08               [12] 2062 	inc	r0
      0004F3 86 04            [24] 2063 	mov	ar4,@r0
      0004F5 E5 81            [12] 2064 	mov	a,sp
      0004F7 24 F2            [12] 2065 	add	a,#0xf2
      0004F9 F8               [12] 2066 	mov	r0,a
      0004FA 74 A2            [12] 2067 	mov	a,#0xA2
      0004FC 26               [12] 2068 	add	a,@r0
      0004FD FA               [12] 2069 	mov	r2,a
      0004FE E4               [12] 2070 	clr	a
      0004FF 08               [12] 2071 	inc	r0
      000500 36               [12] 2072 	addc	a,@r0
      000501 FB               [12] 2073 	mov	r3,a
      000502 08               [12] 2074 	inc	r0
      000503 86 06            [24] 2075 	mov	ar6,@r0
      000505 8A 82            [24] 2076 	mov	dpl,r2
      000507 8B 83            [24] 2077 	mov	dph,r3
      000509 8E F0            [24] 2078 	mov	b,r6
      00050B E4               [12] 2079 	clr	a
      00050C 12r00r00         [24] 2080 	lcall	__gptrput
      00050F A3               [24] 2081 	inc	dptr
      000510 12r00r00         [24] 2082 	lcall	__gptrput
      000513 8F 82            [24] 2083 	mov	dpl,r7
      000515 8D 83            [24] 2084 	mov	dph,r5
      000517 8C F0            [24] 2085 	mov	b,r4
      000519 12r00r00         [24] 2086 	lcall	__gptrput
      00051C A3               [24] 2087 	inc	dptr
      00051D 12r00r00         [24] 2088 	lcall	__gptrput
                                   2089 ;	../contiki-sensinode/core/net/rime/rudolph1.c:162: if(p->h.chunk != 0) {
      000520 E5 81            [12] 2090 	mov	a,sp
      000522 24 F6            [12] 2091 	add	a,#0xf6
      000524 F8               [12] 2092 	mov	r0,a
      000525 74 02            [12] 2093 	mov	a,#0x02
      000527 26               [12] 2094 	add	a,@r0
      000528 FC               [12] 2095 	mov	r4,a
      000529 E4               [12] 2096 	clr	a
      00052A 08               [12] 2097 	inc	r0
      00052B 36               [12] 2098 	addc	a,@r0
      00052C FD               [12] 2099 	mov	r5,a
      00052D 08               [12] 2100 	inc	r0
      00052E 86 06            [24] 2101 	mov	ar6,@r0
      000530 8C 82            [24] 2102 	mov	dpl,r4
      000532 8D 83            [24] 2103 	mov	dph,r5
      000534 8E F0            [24] 2104 	mov	b,r6
      000536 12r00r00         [24] 2105 	lcall	__gptrget
      000539 FC               [12] 2106 	mov	r4,a
      00053A A3               [24] 2107 	inc	dptr
      00053B 12r00r00         [24] 2108 	lcall	__gptrget
      00053E FD               [12] 2109 	mov	r5,a
      00053F 4C               [12] 2110 	orl	a,r4
      000540 60 13            [24] 2111 	jz	00102$
                                   2112 ;	../contiki-sensinode/core/net/rime/rudolph1.c:163: send_nack(c);
      000542 E5 81            [12] 2113 	mov	a,sp
      000544 24 F2            [12] 2114 	add	a,#0xf2
      000546 F8               [12] 2115 	mov	r0,a
      000547 86 82            [24] 2116 	mov	dpl,@r0
      000549 08               [12] 2117 	inc	r0
      00054A 86 83            [24] 2118 	mov	dph,@r0
      00054C 08               [12] 2119 	inc	r0
      00054D 86 F0            [24] 2120 	mov	b,@r0
      00054F 12r03r9D         [24] 2121 	lcall	_send_nack
      000552 02r07rF7         [24] 2122 	ljmp	00119$
      000555                       2123 00102$:
                                   2124 ;	../contiki-sensinode/core/net/rime/rudolph1.c:165: write_data(c, 0, p->data, p->datalen);
      000555 E5 81            [12] 2125 	mov	a,sp
      000557 24 F6            [12] 2126 	add	a,#0xf6
      000559 F8               [12] 2127 	mov	r0,a
      00055A 74 04            [12] 2128 	mov	a,#0x04
      00055C 26               [12] 2129 	add	a,@r0
      00055D FC               [12] 2130 	mov	r4,a
      00055E E4               [12] 2131 	clr	a
      00055F 08               [12] 2132 	inc	r0
      000560 36               [12] 2133 	addc	a,@r0
      000561 FD               [12] 2134 	mov	r5,a
      000562 08               [12] 2135 	inc	r0
      000563 86 06            [24] 2136 	mov	ar6,@r0
      000565 8C 82            [24] 2137 	mov	dpl,r4
      000567 8D 83            [24] 2138 	mov	dph,r5
      000569 8E F0            [24] 2139 	mov	b,r6
      00056B 12r00r00         [24] 2140 	lcall	__gptrget
      00056E FC               [12] 2141 	mov	r4,a
      00056F 7E 00            [12] 2142 	mov	r6,#0x00
      000571 E5 81            [12] 2143 	mov	a,sp
      000573 24 F6            [12] 2144 	add	a,#0xf6
      000575 F8               [12] 2145 	mov	r0,a
      000576 74 05            [12] 2146 	mov	a,#0x05
      000578 26               [12] 2147 	add	a,@r0
      000579 FA               [12] 2148 	mov	r2,a
      00057A E4               [12] 2149 	clr	a
      00057B 08               [12] 2150 	inc	r0
      00057C 36               [12] 2151 	addc	a,@r0
      00057D FB               [12] 2152 	mov	r3,a
      00057E 08               [12] 2153 	inc	r0
      00057F 86 05            [24] 2154 	mov	ar5,@r0
      000581 C0 04            [24] 2155 	push	ar4
      000583 C0 06            [24] 2156 	push	ar6
      000585 C0 02            [24] 2157 	push	ar2
      000587 C0 03            [24] 2158 	push	ar3
      000589 C0 05            [24] 2159 	push	ar5
      00058B E4               [12] 2160 	clr	a
      00058C C0 E0            [24] 2161 	push	acc
      00058E C0 E0            [24] 2162 	push	acc
      000590 E5 81            [12] 2163 	mov	a,sp
      000592 24 EB            [12] 2164 	add	a,#0xeb
      000594 F8               [12] 2165 	mov	r0,a
      000595 86 82            [24] 2166 	mov	dpl,@r0
      000597 08               [12] 2167 	inc	r0
      000598 86 83            [24] 2168 	mov	dph,@r0
      00059A 08               [12] 2169 	inc	r0
      00059B 86 F0            [24] 2170 	mov	b,@r0
      00059D 12r01rCC         [24] 2171 	lcall	_write_data
      0005A0 E5 81            [12] 2172 	mov	a,sp
      0005A2 24 F9            [12] 2173 	add	a,#0xf9
                                   2174 ;	../contiki-sensinode/core/net/rime/rudolph1.c:166: c->chunk = 1; /* Next chunk is 1. */
      0005A4 F5 81            [12] 2175 	mov	sp,a
      0005A6 24 F2            [12] 2176 	add	a,#0xf2
      0005A8 F8               [12] 2177 	mov	r0,a
      0005A9 74 A2            [12] 2178 	mov	a,#0xA2
      0005AB 26               [12] 2179 	add	a,@r0
      0005AC FC               [12] 2180 	mov	r4,a
      0005AD E4               [12] 2181 	clr	a
      0005AE 08               [12] 2182 	inc	r0
      0005AF 36               [12] 2183 	addc	a,@r0
      0005B0 FD               [12] 2184 	mov	r5,a
      0005B1 08               [12] 2185 	inc	r0
      0005B2 86 06            [24] 2186 	mov	ar6,@r0
      0005B4 8C 82            [24] 2187 	mov	dpl,r4
      0005B6 8D 83            [24] 2188 	mov	dph,r5
      0005B8 8E F0            [24] 2189 	mov	b,r6
      0005BA 74 01            [12] 2190 	mov	a,#0x01
      0005BC 12r00r00         [24] 2191 	lcall	__gptrput
      0005BF A3               [24] 2192 	inc	dptr
      0005C0 E4               [12] 2193 	clr	a
      0005C1 12r00r00         [24] 2194 	lcall	__gptrput
      0005C4 02r07rF7         [24] 2195 	ljmp	00119$
      0005C7                       2196 00117$:
                                   2197 ;	../contiki-sensinode/core/net/rime/rudolph1.c:169: } else if(p->h.version == c->version) {
      0005C7 E5 81            [12] 2198 	mov	a,sp
      0005C9 24 F5            [12] 2199 	add	a,#0xf5
      0005CB F8               [12] 2200 	mov	r0,a
      0005CC E6               [12] 2201 	mov	a,@r0
      0005CD B5 07 02         [24] 2202 	cjne	a,ar7,00144$
      0005D0 80 03            [24] 2203 	sjmp	00145$
      0005D2                       2204 00144$:
      0005D2 02r07rF7         [24] 2205 	ljmp	00119$
      0005D5                       2206 00145$:
                                   2207 ;	../contiki-sensinode/core/net/rime/rudolph1.c:174: if(p->h.chunk == c->chunk) {
      0005D5 E5 81            [12] 2208 	mov	a,sp
      0005D7 24 F6            [12] 2209 	add	a,#0xf6
      0005D9 F8               [12] 2210 	mov	r0,a
      0005DA 74 02            [12] 2211 	mov	a,#0x02
      0005DC 26               [12] 2212 	add	a,@r0
      0005DD FD               [12] 2213 	mov	r5,a
      0005DE E4               [12] 2214 	clr	a
      0005DF 08               [12] 2215 	inc	r0
      0005E0 36               [12] 2216 	addc	a,@r0
      0005E1 FE               [12] 2217 	mov	r6,a
      0005E2 08               [12] 2218 	inc	r0
      0005E3 86 07            [24] 2219 	mov	ar7,@r0
      0005E5 8D 82            [24] 2220 	mov	dpl,r5
      0005E7 8E 83            [24] 2221 	mov	dph,r6
      0005E9 8F F0            [24] 2222 	mov	b,r7
      0005EB E5 81            [12] 2223 	mov	a,sp
      0005ED 24 F9            [12] 2224 	add	a,#0xf9
      0005EF F8               [12] 2225 	mov	r0,a
      0005F0 12r00r00         [24] 2226 	lcall	__gptrget
      0005F3 F6               [12] 2227 	mov	@r0,a
      0005F4 A3               [24] 2228 	inc	dptr
      0005F5 12r00r00         [24] 2229 	lcall	__gptrget
      0005F8 08               [12] 2230 	inc	r0
      0005F9 F6               [12] 2231 	mov	@r0,a
      0005FA E5 81            [12] 2232 	mov	a,sp
      0005FC 24 F2            [12] 2233 	add	a,#0xf2
      0005FE F8               [12] 2234 	mov	r0,a
      0005FF 74 A2            [12] 2235 	mov	a,#0xA2
      000601 26               [12] 2236 	add	a,@r0
      000602 FA               [12] 2237 	mov	r2,a
      000603 E4               [12] 2238 	clr	a
      000604 08               [12] 2239 	inc	r0
      000605 36               [12] 2240 	addc	a,@r0
      000606 FB               [12] 2241 	mov	r3,a
      000607 08               [12] 2242 	inc	r0
      000608 86 04            [24] 2243 	mov	ar4,@r0
      00060A 8A 82            [24] 2244 	mov	dpl,r2
      00060C 8B 83            [24] 2245 	mov	dph,r3
      00060E 8C F0            [24] 2246 	mov	b,r4
      000610 12r00r00         [24] 2247 	lcall	__gptrget
      000613 FB               [12] 2248 	mov	r3,a
      000614 A3               [24] 2249 	inc	dptr
      000615 12r00r00         [24] 2250 	lcall	__gptrget
      000618 FC               [12] 2251 	mov	r4,a
      000619 E5 81            [12] 2252 	mov	a,sp
      00061B 24 F9            [12] 2253 	add	a,#0xf9
      00061D F8               [12] 2254 	mov	r0,a
      00061E E6               [12] 2255 	mov	a,@r0
      00061F B5 03 07         [24] 2256 	cjne	a,ar3,00146$
      000622 08               [12] 2257 	inc	r0
      000623 E6               [12] 2258 	mov	a,@r0
      000624 B5 04 02         [24] 2259 	cjne	a,ar4,00146$
      000627 80 03            [24] 2260 	sjmp	00147$
      000629                       2261 00146$:
      000629 02r07r4F         [24] 2262 	ljmp	00110$
      00062C                       2263 00147$:
                                   2264 ;	../contiki-sensinode/core/net/rime/rudolph1.c:178: write_data(c, p->h.chunk, p->data, p->datalen);
      00062C C0 05            [24] 2265 	push	ar5
      00062E C0 06            [24] 2266 	push	ar6
      000630 C0 07            [24] 2267 	push	ar7
      000632 E5 81            [12] 2268 	mov	a,sp
      000634 24 F3            [12] 2269 	add	a,#0xf3
      000636 F8               [12] 2270 	mov	r0,a
      000637 74 04            [12] 2271 	mov	a,#0x04
      000639 26               [12] 2272 	add	a,@r0
      00063A FA               [12] 2273 	mov	r2,a
      00063B E4               [12] 2274 	clr	a
      00063C 08               [12] 2275 	inc	r0
      00063D 36               [12] 2276 	addc	a,@r0
      00063E FE               [12] 2277 	mov	r6,a
      00063F 08               [12] 2278 	inc	r0
      000640 86 07            [24] 2279 	mov	ar7,@r0
      000642 8A 82            [24] 2280 	mov	dpl,r2
      000644 8E 83            [24] 2281 	mov	dph,r6
      000646 8F F0            [24] 2282 	mov	b,r7
      000648 12r00r00         [24] 2283 	lcall	__gptrget
      00064B FA               [12] 2284 	mov	r2,a
      00064C 7C 00            [12] 2285 	mov	r4,#0x00
      00064E E5 81            [12] 2286 	mov	a,sp
      000650 24 F3            [12] 2287 	add	a,#0xf3
      000652 F8               [12] 2288 	mov	r0,a
      000653 74 05            [12] 2289 	mov	a,#0x05
      000655 26               [12] 2290 	add	a,@r0
      000656 FD               [12] 2291 	mov	r5,a
      000657 E4               [12] 2292 	clr	a
      000658 08               [12] 2293 	inc	r0
      000659 36               [12] 2294 	addc	a,@r0
      00065A FE               [12] 2295 	mov	r6,a
      00065B 08               [12] 2296 	inc	r0
      00065C 86 07            [24] 2297 	mov	ar7,@r0
      00065E C0 07            [24] 2298 	push	ar7
      000660 C0 06            [24] 2299 	push	ar6
      000662 C0 05            [24] 2300 	push	ar5
      000664 C0 02            [24] 2301 	push	ar2
      000666 C0 04            [24] 2302 	push	ar4
      000668 C0 05            [24] 2303 	push	ar5
      00066A C0 06            [24] 2304 	push	ar6
      00066C C0 07            [24] 2305 	push	ar7
      00066E E5 81            [12] 2306 	mov	a,sp
      000670 24 EE            [12] 2307 	add	a,#0xee
      000672 F8               [12] 2308 	mov	r0,a
      000673 E6               [12] 2309 	mov	a,@r0
      000674 C0 E0            [24] 2310 	push	acc
      000676 08               [12] 2311 	inc	r0
      000677 E6               [12] 2312 	mov	a,@r0
      000678 C0 E0            [24] 2313 	push	acc
      00067A E5 81            [12] 2314 	mov	a,sp
      00067C 24 E5            [12] 2315 	add	a,#0xe5
      00067E F8               [12] 2316 	mov	r0,a
      00067F 86 82            [24] 2317 	mov	dpl,@r0
      000681 08               [12] 2318 	inc	r0
      000682 86 83            [24] 2319 	mov	dph,@r0
      000684 08               [12] 2320 	inc	r0
      000685 86 F0            [24] 2321 	mov	b,@r0
      000687 12r01rCC         [24] 2322 	lcall	_write_data
      00068A E5 81            [12] 2323 	mov	a,sp
      00068C 24 F9            [12] 2324 	add	a,#0xf9
      00068E F5 81            [12] 2325 	mov	sp,a
      000690 D0 05            [24] 2326 	pop	ar5
      000692 D0 06            [24] 2327 	pop	ar6
      000694 D0 07            [24] 2328 	pop	ar7
                                   2329 ;	../contiki-sensinode/core/net/rime/rudolph1.c:179: if(c->highest_chunk_heard < c->chunk) {
      000696 E5 81            [12] 2330 	mov	a,sp
      000698 24 EF            [12] 2331 	add	a,#0xef
      00069A F8               [12] 2332 	mov	r0,a
      00069B 74 A4            [12] 2333 	mov	a,#0xA4
      00069D 26               [12] 2334 	add	a,@r0
      00069E FC               [12] 2335 	mov	r4,a
      00069F E4               [12] 2336 	clr	a
      0006A0 08               [12] 2337 	inc	r0
      0006A1 36               [12] 2338 	addc	a,@r0
      0006A2 FB               [12] 2339 	mov	r3,a
      0006A3 08               [12] 2340 	inc	r0
      0006A4 86 02            [24] 2341 	mov	ar2,@r0
      0006A6 8C 82            [24] 2342 	mov	dpl,r4
      0006A8 8B 83            [24] 2343 	mov	dph,r3
      0006AA 8A F0            [24] 2344 	mov	b,r2
      0006AC 12r00r00         [24] 2345 	lcall	__gptrget
      0006AF FE               [12] 2346 	mov	r6,a
      0006B0 A3               [24] 2347 	inc	dptr
      0006B1 12r00r00         [24] 2348 	lcall	__gptrget
      0006B4 FF               [12] 2349 	mov	r7,a
      0006B5 E5 81            [12] 2350 	mov	a,sp
      0006B7 24 EF            [12] 2351 	add	a,#0xef
      0006B9 F8               [12] 2352 	mov	r0,a
      0006BA E5 81            [12] 2353 	mov	a,sp
      0006BC 24 FB            [12] 2354 	add	a,#0xfb
      0006BE F9               [12] 2355 	mov	r1,a
      0006BF 74 A2            [12] 2356 	mov	a,#0xA2
      0006C1 26               [12] 2357 	add	a,@r0
      0006C2 F7               [12] 2358 	mov	@r1,a
      0006C3 E4               [12] 2359 	clr	a
      0006C4 08               [12] 2360 	inc	r0
      0006C5 36               [12] 2361 	addc	a,@r0
      0006C6 09               [12] 2362 	inc	r1
      0006C7 F7               [12] 2363 	mov	@r1,a
      0006C8 08               [12] 2364 	inc	r0
      0006C9 09               [12] 2365 	inc	r1
      0006CA E6               [12] 2366 	mov	a,@r0
      0006CB F7               [12] 2367 	mov	@r1,a
      0006CC E5 81            [12] 2368 	mov	a,sp
      0006CE 24 FB            [12] 2369 	add	a,#0xfb
      0006D0 F8               [12] 2370 	mov	r0,a
      0006D1 86 82            [24] 2371 	mov	dpl,@r0
      0006D3 08               [12] 2372 	inc	r0
      0006D4 86 83            [24] 2373 	mov	dph,@r0
      0006D6 08               [12] 2374 	inc	r0
      0006D7 86 F0            [24] 2375 	mov	b,@r0
      0006D9 E5 81            [12] 2376 	mov	a,sp
      0006DB 24 F9            [12] 2377 	add	a,#0xf9
      0006DD F9               [12] 2378 	mov	r1,a
      0006DE 12r00r00         [24] 2379 	lcall	__gptrget
      0006E1 F7               [12] 2380 	mov	@r1,a
      0006E2 A3               [24] 2381 	inc	dptr
      0006E3 12r00r00         [24] 2382 	lcall	__gptrget
      0006E6 09               [12] 2383 	inc	r1
      0006E7 F7               [12] 2384 	mov	@r1,a
      0006E8 E5 81            [12] 2385 	mov	a,sp
      0006EA 24 F9            [12] 2386 	add	a,#0xf9
      0006EC F8               [12] 2387 	mov	r0,a
      0006ED C3               [12] 2388 	clr	c
      0006EE EE               [12] 2389 	mov	a,r6
      0006EF 96               [12] 2390 	subb	a,@r0
      0006F0 EF               [12] 2391 	mov	a,r7
      0006F1 08               [12] 2392 	inc	r0
      0006F2 96               [12] 2393 	subb	a,@r0
      0006F3 D0 07            [24] 2394 	pop	ar7
      0006F5 D0 06            [24] 2395 	pop	ar6
      0006F7 D0 05            [24] 2396 	pop	ar5
      0006F9 50 15            [24] 2397 	jnc	00105$
                                   2398 ;	../contiki-sensinode/core/net/rime/rudolph1.c:180: c->highest_chunk_heard = c->chunk;
      0006FB 8C 82            [24] 2399 	mov	dpl,r4
      0006FD 8B 83            [24] 2400 	mov	dph,r3
      0006FF 8A F0            [24] 2401 	mov	b,r2
      000701 E5 81            [12] 2402 	mov	a,sp
      000703 24 FC            [12] 2403 	add	a,#0xfc
      000705 F8               [12] 2404 	mov	r0,a
      000706 E6               [12] 2405 	mov	a,@r0
      000707 12r00r00         [24] 2406 	lcall	__gptrput
      00070A A3               [24] 2407 	inc	dptr
      00070B 08               [12] 2408 	inc	r0
      00070C E6               [12] 2409 	mov	a,@r0
      00070D 12r00r00         [24] 2410 	lcall	__gptrput
      000710                       2411 00105$:
                                   2412 ;	../contiki-sensinode/core/net/rime/rudolph1.c:182: c->chunk++;
      000710 C0 05            [24] 2413 	push	ar5
      000712 C0 06            [24] 2414 	push	ar6
      000714 C0 07            [24] 2415 	push	ar7
      000716 E5 81            [12] 2416 	mov	a,sp
      000718 24 FB            [12] 2417 	add	a,#0xfb
      00071A F8               [12] 2418 	mov	r0,a
      00071B 86 82            [24] 2419 	mov	dpl,@r0
      00071D 08               [12] 2420 	inc	r0
      00071E 86 83            [24] 2421 	mov	dph,@r0
      000720 08               [12] 2422 	inc	r0
      000721 86 F0            [24] 2423 	mov	b,@r0
      000723 12r00r00         [24] 2424 	lcall	__gptrget
      000726 FA               [12] 2425 	mov	r2,a
      000727 A3               [24] 2426 	inc	dptr
      000728 12r00r00         [24] 2427 	lcall	__gptrget
      00072B FF               [12] 2428 	mov	r7,a
      00072C 0A               [12] 2429 	inc	r2
      00072D BA 00 01         [24] 2430 	cjne	r2,#0x00,00149$
      000730 0F               [12] 2431 	inc	r7
      000731                       2432 00149$:
      000731 E5 81            [12] 2433 	mov	a,sp
      000733 24 FB            [12] 2434 	add	a,#0xfb
      000735 F8               [12] 2435 	mov	r0,a
      000736 86 82            [24] 2436 	mov	dpl,@r0
      000738 08               [12] 2437 	inc	r0
      000739 86 83            [24] 2438 	mov	dph,@r0
      00073B 08               [12] 2439 	inc	r0
      00073C 86 F0            [24] 2440 	mov	b,@r0
      00073E EA               [12] 2441 	mov	a,r2
      00073F 12r00r00         [24] 2442 	lcall	__gptrput
      000742 A3               [24] 2443 	inc	dptr
      000743 EF               [12] 2444 	mov	a,r7
      000744 12r00r00         [24] 2445 	lcall	__gptrput
      000747 D0 07            [24] 2446 	pop	ar7
      000749 D0 06            [24] 2447 	pop	ar6
      00074B D0 05            [24] 2448 	pop	ar5
      00074D 80 63            [24] 2449 	sjmp	00111$
      00074F                       2450 00110$:
                                   2451 ;	../contiki-sensinode/core/net/rime/rudolph1.c:183: } else if(p->h.chunk > c->chunk) {
      00074F E5 81            [12] 2452 	mov	a,sp
      000751 24 F9            [12] 2453 	add	a,#0xf9
      000753 F8               [12] 2454 	mov	r0,a
      000754 C3               [12] 2455 	clr	c
      000755 EB               [12] 2456 	mov	a,r3
      000756 96               [12] 2457 	subb	a,@r0
      000757 EC               [12] 2458 	mov	a,r4
      000758 08               [12] 2459 	inc	r0
      000759 96               [12] 2460 	subb	a,@r0
      00075A 50 56            [24] 2461 	jnc	00111$
                                   2462 ;	../contiki-sensinode/core/net/rime/rudolph1.c:187: send_nack(c);
      00075C E5 81            [12] 2463 	mov	a,sp
      00075E 24 F2            [12] 2464 	add	a,#0xf2
      000760 F8               [12] 2465 	mov	r0,a
      000761 86 82            [24] 2466 	mov	dpl,@r0
      000763 08               [12] 2467 	inc	r0
      000764 86 83            [24] 2468 	mov	dph,@r0
      000766 08               [12] 2469 	inc	r0
      000767 86 F0            [24] 2470 	mov	b,@r0
      000769 C0 07            [24] 2471 	push	ar7
      00076B C0 06            [24] 2472 	push	ar6
      00076D C0 05            [24] 2473 	push	ar5
      00076F 12r03r9D         [24] 2474 	lcall	_send_nack
      000772 D0 05            [24] 2475 	pop	ar5
      000774 D0 06            [24] 2476 	pop	ar6
      000776 D0 07            [24] 2477 	pop	ar7
                                   2478 ;	../contiki-sensinode/core/net/rime/rudolph1.c:188: c->highest_chunk_heard = p->h.chunk;
      000778 E5 81            [12] 2479 	mov	a,sp
      00077A 24 F2            [12] 2480 	add	a,#0xf2
      00077C F8               [12] 2481 	mov	r0,a
      00077D A9 81            [24] 2482 	mov	r1,sp
      00077F 19               [12] 2483 	dec	r1
      000780 19               [12] 2484 	dec	r1
      000781 74 A4            [12] 2485 	mov	a,#0xA4
      000783 26               [12] 2486 	add	a,@r0
      000784 F7               [12] 2487 	mov	@r1,a
      000785 E4               [12] 2488 	clr	a
      000786 08               [12] 2489 	inc	r0
      000787 36               [12] 2490 	addc	a,@r0
      000788 09               [12] 2491 	inc	r1
      000789 F7               [12] 2492 	mov	@r1,a
      00078A 08               [12] 2493 	inc	r0
      00078B 09               [12] 2494 	inc	r1
      00078C E6               [12] 2495 	mov	a,@r0
      00078D F7               [12] 2496 	mov	@r1,a
      00078E 8D 82            [24] 2497 	mov	dpl,r5
      000790 8E 83            [24] 2498 	mov	dph,r6
      000792 8F F0            [24] 2499 	mov	b,r7
      000794 12r00r00         [24] 2500 	lcall	__gptrget
      000797 FB               [12] 2501 	mov	r3,a
      000798 A3               [24] 2502 	inc	dptr
      000799 12r00r00         [24] 2503 	lcall	__gptrget
      00079C FC               [12] 2504 	mov	r4,a
      00079D A8 81            [24] 2505 	mov	r0,sp
      00079F 18               [12] 2506 	dec	r0
      0007A0 18               [12] 2507 	dec	r0
      0007A1 86 82            [24] 2508 	mov	dpl,@r0
      0007A3 08               [12] 2509 	inc	r0
      0007A4 86 83            [24] 2510 	mov	dph,@r0
      0007A6 08               [12] 2511 	inc	r0
      0007A7 86 F0            [24] 2512 	mov	b,@r0
      0007A9 EB               [12] 2513 	mov	a,r3
      0007AA 12r00r00         [24] 2514 	lcall	__gptrput
      0007AD A3               [24] 2515 	inc	dptr
      0007AE EC               [12] 2516 	mov	a,r4
      0007AF 12r00r00         [24] 2517 	lcall	__gptrput
                                   2518 ;	../contiki-sensinode/core/net/rime/rudolph1.c:189: } else if(p->h.chunk < c->chunk) {
      0007B2                       2519 00111$:
                                   2520 ;	../contiki-sensinode/core/net/rime/rudolph1.c:196: if(c->highest_chunk_heard > p->h.chunk) {
      0007B2 E5 81            [12] 2521 	mov	a,sp
      0007B4 24 F2            [12] 2522 	add	a,#0xf2
      0007B6 F8               [12] 2523 	mov	r0,a
      0007B7 74 A4            [12] 2524 	mov	a,#0xA4
      0007B9 26               [12] 2525 	add	a,@r0
      0007BA FA               [12] 2526 	mov	r2,a
      0007BB E4               [12] 2527 	clr	a
      0007BC 08               [12] 2528 	inc	r0
      0007BD 36               [12] 2529 	addc	a,@r0
      0007BE FB               [12] 2530 	mov	r3,a
      0007BF 08               [12] 2531 	inc	r0
      0007C0 86 04            [24] 2532 	mov	ar4,@r0
      0007C2 8A 82            [24] 2533 	mov	dpl,r2
      0007C4 8B 83            [24] 2534 	mov	dph,r3
      0007C6 8C F0            [24] 2535 	mov	b,r4
      0007C8 12r00r00         [24] 2536 	lcall	__gptrget
      0007CB FA               [12] 2537 	mov	r2,a
      0007CC A3               [24] 2538 	inc	dptr
      0007CD 12r00r00         [24] 2539 	lcall	__gptrget
      0007D0 FB               [12] 2540 	mov	r3,a
      0007D1 8D 82            [24] 2541 	mov	dpl,r5
      0007D3 8E 83            [24] 2542 	mov	dph,r6
      0007D5 8F F0            [24] 2543 	mov	b,r7
      0007D7 12r00r00         [24] 2544 	lcall	__gptrget
      0007DA FD               [12] 2545 	mov	r5,a
      0007DB A3               [24] 2546 	inc	dptr
      0007DC 12r00r00         [24] 2547 	lcall	__gptrget
      0007DF FE               [12] 2548 	mov	r6,a
      0007E0 C3               [12] 2549 	clr	c
      0007E1 ED               [12] 2550 	mov	a,r5
      0007E2 9A               [12] 2551 	subb	a,r2
      0007E3 EE               [12] 2552 	mov	a,r6
      0007E4 9B               [12] 2553 	subb	a,r3
      0007E5 50 10            [24] 2554 	jnc	00119$
                                   2555 ;	../contiki-sensinode/core/net/rime/rudolph1.c:197: send_nack(c);
      0007E7 E5 81            [12] 2556 	mov	a,sp
      0007E9 24 F2            [12] 2557 	add	a,#0xf2
      0007EB F8               [12] 2558 	mov	r0,a
      0007EC 86 82            [24] 2559 	mov	dpl,@r0
      0007EE 08               [12] 2560 	inc	r0
      0007EF 86 83            [24] 2561 	mov	dph,@r0
      0007F1 08               [12] 2562 	inc	r0
      0007F2 86 F0            [24] 2563 	mov	b,@r0
      0007F4 12r03r9D         [24] 2564 	lcall	_send_nack
      0007F7                       2565 00119$:
      0007F7 E5 81            [12] 2566 	mov	a,sp
      0007F9 24 F1            [12] 2567 	add	a,#0xF1
      0007FB F5 81            [12] 2568 	mov	sp,a
      0007FD 22               [24] 2569 	ret
                                   2570 ;------------------------------------------------------------
                                   2571 ;Allocation info for local variables in function 'recv_trickle'
                                   2572 ;------------------------------------------------------------
                                   2573 ;trickle                   Allocated to registers r5 r6 r7 
                                   2574 ;c                         Allocated to registers r5 r6 r7 
                                   2575 ;p                         Allocated to registers r2 r3 r4 
                                   2576 ;------------------------------------------------------------
                                   2577 ;	../contiki-sensinode/core/net/rime/rudolph1.c:206: recv_trickle(struct trickle_conn *trickle)
                                   2578 ;	-----------------------------------------
                                   2579 ;	 function recv_trickle
                                   2580 ;	-----------------------------------------
      0007FE                       2581 _recv_trickle:
      0007FE AD 82            [24] 2582 	mov	r5,dpl
      000800 AE 83            [24] 2583 	mov	r6,dph
      000802 AF F0            [24] 2584 	mov	r7,b
                                   2585 ;	../contiki-sensinode/core/net/rime/rudolph1.c:208: struct rudolph1_conn *c = (struct rudolph1_conn *)trickle;
                                   2586 ;	../contiki-sensinode/core/net/rime/rudolph1.c:209: struct rudolph1_datapacket *p = packetbuf_dataptr();
      000804 C0 07            [24] 2587 	push	ar7
      000806 C0 06            [24] 2588 	push	ar6
      000808 C0 05            [24] 2589 	push	ar5
      00080A 12r00r00         [24] 2590 	lcall	_packetbuf_dataptr
      00080D AA 82            [24] 2591 	mov	r2,dpl
      00080F AB 83            [24] 2592 	mov	r3,dph
      000811 AC F0            [24] 2593 	mov	r4,b
      000813 D0 05            [24] 2594 	pop	ar5
      000815 D0 06            [24] 2595 	pop	ar6
      000817 D0 07            [24] 2596 	pop	ar7
                                   2597 ;	../contiki-sensinode/core/net/rime/rudolph1.c:211: if(p->h.type == TYPE_DATA) {
      000819 8A 82            [24] 2598 	mov	dpl,r2
      00081B 8B 83            [24] 2599 	mov	dph,r3
      00081D 8C F0            [24] 2600 	mov	b,r4
      00081F 12r00r00         [24] 2601 	lcall	__gptrget
      000822 70 15            [24] 2602 	jnz	00103$
                                   2603 ;	../contiki-sensinode/core/net/rime/rudolph1.c:215: handle_data(c, p);
      000824 C0 02            [24] 2604 	push	ar2
      000826 C0 03            [24] 2605 	push	ar3
      000828 C0 04            [24] 2606 	push	ar4
      00082A 8D 82            [24] 2607 	mov	dpl,r5
      00082C 8E 83            [24] 2608 	mov	dph,r6
      00082E 8F F0            [24] 2609 	mov	b,r7
      000830 12r04r75         [24] 2610 	lcall	_handle_data
      000833 15 81            [12] 2611 	dec	sp
      000835 15 81            [12] 2612 	dec	sp
      000837 15 81            [12] 2613 	dec	sp
      000839                       2614 00103$:
      000839 22               [24] 2615 	ret
                                   2616 ;------------------------------------------------------------
                                   2617 ;Allocation info for local variables in function 'sent_ipolite'
                                   2618 ;------------------------------------------------------------
                                   2619 ;ipolite                   Allocated to registers 
                                   2620 ;------------------------------------------------------------
                                   2621 ;	../contiki-sensinode/core/net/rime/rudolph1.c:220: sent_ipolite(struct ipolite_conn *ipolite)
                                   2622 ;	-----------------------------------------
                                   2623 ;	 function sent_ipolite
                                   2624 ;	-----------------------------------------
      00083A                       2625 _sent_ipolite:
                                   2626 ;	../contiki-sensinode/core/net/rime/rudolph1.c:224: }
      00083A 22               [24] 2627 	ret
                                   2628 ;------------------------------------------------------------
                                   2629 ;Allocation info for local variables in function 'dropped_ipolite'
                                   2630 ;------------------------------------------------------------
                                   2631 ;ipolite                   Allocated to registers 
                                   2632 ;------------------------------------------------------------
                                   2633 ;	../contiki-sensinode/core/net/rime/rudolph1.c:227: dropped_ipolite(struct ipolite_conn *ipolite)
                                   2634 ;	-----------------------------------------
                                   2635 ;	 function dropped_ipolite
                                   2636 ;	-----------------------------------------
      00083B                       2637 _dropped_ipolite:
                                   2638 ;	../contiki-sensinode/core/net/rime/rudolph1.c:231: }
      00083B 22               [24] 2639 	ret
                                   2640 ;------------------------------------------------------------
                                   2641 ;Allocation info for local variables in function 'recv_ipolite'
                                   2642 ;------------------------------------------------------------
                                   2643 ;from                      Allocated to stack - sp -10
                                   2644 ;ipolite                   Allocated to registers r5 r6 r7 
                                   2645 ;c                         Allocated to stack - sp -5
                                   2646 ;p                         Allocated to stack - sp -2
                                   2647 ;sloc0                     Allocated to stack - sp +4
                                   2648 ;------------------------------------------------------------
                                   2649 ;	../contiki-sensinode/core/net/rime/rudolph1.c:234: recv_ipolite(struct ipolite_conn *ipolite, const rimeaddr_t *from)
                                   2650 ;	-----------------------------------------
                                   2651 ;	 function recv_ipolite
                                   2652 ;	-----------------------------------------
      00083C                       2653 _recv_ipolite:
      00083C E5 81            [12] 2654 	mov	a,sp
      00083E 24 06            [12] 2655 	add	a,#0x06
      000840 F5 81            [12] 2656 	mov	sp,a
      000842 AD 82            [24] 2657 	mov	r5,dpl
      000844 AE 83            [24] 2658 	mov	r6,dph
      000846 AF F0            [24] 2659 	mov	r7,b
                                   2660 ;	../contiki-sensinode/core/net/rime/rudolph1.c:236: struct rudolph1_conn *c = (struct rudolph1_conn *)
      000848 ED               [12] 2661 	mov	a,r5
      000849 24 A5            [12] 2662 	add	a,#0xA5
      00084B FD               [12] 2663 	mov	r5,a
      00084C EE               [12] 2664 	mov	a,r6
      00084D 34 FF            [12] 2665 	addc	a,#0xFF
      00084F FE               [12] 2666 	mov	r6,a
      000850 E5 81            [12] 2667 	mov	a,sp
      000852 24 FB            [12] 2668 	add	a,#0xfb
      000854 F8               [12] 2669 	mov	r0,a
      000855 A6 05            [24] 2670 	mov	@r0,ar5
      000857 08               [12] 2671 	inc	r0
      000858 A6 06            [24] 2672 	mov	@r0,ar6
      00085A 08               [12] 2673 	inc	r0
      00085B A6 07            [24] 2674 	mov	@r0,ar7
                                   2675 ;	../contiki-sensinode/core/net/rime/rudolph1.c:238: struct rudolph1_datapacket *p = packetbuf_dataptr();
      00085D 12r00r00         [24] 2676 	lcall	_packetbuf_dataptr
      000860 AA 82            [24] 2677 	mov	r2,dpl
      000862 AB 83            [24] 2678 	mov	r3,dph
      000864 AC F0            [24] 2679 	mov	r4,b
      000866 A8 81            [24] 2680 	mov	r0,sp
      000868 18               [12] 2681 	dec	r0
      000869 18               [12] 2682 	dec	r0
      00086A A6 02            [24] 2683 	mov	@r0,ar2
      00086C 08               [12] 2684 	inc	r0
      00086D A6 03            [24] 2685 	mov	@r0,ar3
      00086F 08               [12] 2686 	inc	r0
      000870 A6 04            [24] 2687 	mov	@r0,ar4
                                   2688 ;	../contiki-sensinode/core/net/rime/rudolph1.c:244: c->nacks++;
      000872 E5 81            [12] 2689 	mov	a,sp
      000874 24 FB            [12] 2690 	add	a,#0xfb
      000876 F8               [12] 2691 	mov	r0,a
      000877 74 A7            [12] 2692 	mov	a,#0xA7
      000879 26               [12] 2693 	add	a,@r0
      00087A FD               [12] 2694 	mov	r5,a
      00087B E4               [12] 2695 	clr	a
      00087C 08               [12] 2696 	inc	r0
      00087D 36               [12] 2697 	addc	a,@r0
      00087E FE               [12] 2698 	mov	r6,a
      00087F 08               [12] 2699 	inc	r0
      000880 86 07            [24] 2700 	mov	ar7,@r0
      000882 8D 82            [24] 2701 	mov	dpl,r5
      000884 8E 83            [24] 2702 	mov	dph,r6
      000886 8F F0            [24] 2703 	mov	b,r7
      000888 12r00r00         [24] 2704 	lcall	__gptrget
      00088B FC               [12] 2705 	mov	r4,a
      00088C 0C               [12] 2706 	inc	r4
      00088D 8D 82            [24] 2707 	mov	dpl,r5
      00088F 8E 83            [24] 2708 	mov	dph,r6
      000891 8F F0            [24] 2709 	mov	b,r7
      000893 EC               [12] 2710 	mov	a,r4
      000894 12r00r00         [24] 2711 	lcall	__gptrput
                                   2712 ;	../contiki-sensinode/core/net/rime/rudolph1.c:246: if(p->h.type == TYPE_NACK) {
      000897 A8 81            [24] 2713 	mov	r0,sp
      000899 18               [12] 2714 	dec	r0
      00089A 18               [12] 2715 	dec	r0
      00089B 86 82            [24] 2716 	mov	dpl,@r0
      00089D 08               [12] 2717 	inc	r0
      00089E 86 83            [24] 2718 	mov	dph,@r0
      0008A0 08               [12] 2719 	inc	r0
      0008A1 86 F0            [24] 2720 	mov	b,@r0
      0008A3 12r00r00         [24] 2721 	lcall	__gptrget
      0008A6 FF               [12] 2722 	mov	r7,a
      0008A7 BF 01 02         [24] 2723 	cjne	r7,#0x01,00130$
      0008AA 80 03            [24] 2724 	sjmp	00131$
      0008AC                       2725 00130$:
      0008AC 02r09rE7         [24] 2726 	ljmp	00111$
      0008AF                       2727 00131$:
                                   2728 ;	../contiki-sensinode/core/net/rime/rudolph1.c:251: if(p->h.version == c->version) {
      0008AF A8 81            [24] 2729 	mov	r0,sp
      0008B1 18               [12] 2730 	dec	r0
      0008B2 18               [12] 2731 	dec	r0
      0008B3 74 01            [12] 2732 	mov	a,#0x01
      0008B5 26               [12] 2733 	add	a,@r0
      0008B6 FC               [12] 2734 	mov	r4,a
      0008B7 E4               [12] 2735 	clr	a
      0008B8 08               [12] 2736 	inc	r0
      0008B9 36               [12] 2737 	addc	a,@r0
      0008BA FD               [12] 2738 	mov	r5,a
      0008BB 08               [12] 2739 	inc	r0
      0008BC 86 06            [24] 2740 	mov	ar6,@r0
      0008BE 8C 82            [24] 2741 	mov	dpl,r4
      0008C0 8D 83            [24] 2742 	mov	dph,r5
      0008C2 8E F0            [24] 2743 	mov	b,r6
      0008C4 12r00r00         [24] 2744 	lcall	__gptrget
      0008C7 FE               [12] 2745 	mov	r6,a
      0008C8 E5 81            [12] 2746 	mov	a,sp
      0008CA 24 FB            [12] 2747 	add	a,#0xfb
      0008CC F8               [12] 2748 	mov	r0,a
      0008CD 74 A6            [12] 2749 	mov	a,#0xA6
      0008CF 26               [12] 2750 	add	a,@r0
      0008D0 FB               [12] 2751 	mov	r3,a
      0008D1 E4               [12] 2752 	clr	a
      0008D2 08               [12] 2753 	inc	r0
      0008D3 36               [12] 2754 	addc	a,@r0
      0008D4 FC               [12] 2755 	mov	r4,a
      0008D5 08               [12] 2756 	inc	r0
      0008D6 86 05            [24] 2757 	mov	ar5,@r0
      0008D8 8B 82            [24] 2758 	mov	dpl,r3
      0008DA 8C 83            [24] 2759 	mov	dph,r4
      0008DC 8D F0            [24] 2760 	mov	b,r5
      0008DE 12r00r00         [24] 2761 	lcall	__gptrget
      0008E1 FD               [12] 2762 	mov	r5,a
      0008E2 EE               [12] 2763 	mov	a,r6
      0008E3 B5 05 02         [24] 2764 	cjne	a,ar5,00132$
      0008E6 80 03            [24] 2765 	sjmp	00133$
      0008E8                       2766 00132$:
      0008E8 02r09r77         [24] 2767 	ljmp	00106$
      0008EB                       2768 00133$:
                                   2769 ;	../contiki-sensinode/core/net/rime/rudolph1.c:252: if(p->h.chunk < c->chunk) {
      0008EB A8 81            [24] 2770 	mov	r0,sp
      0008ED 18               [12] 2771 	dec	r0
      0008EE 18               [12] 2772 	dec	r0
      0008EF 74 02            [12] 2773 	mov	a,#0x02
      0008F1 26               [12] 2774 	add	a,@r0
      0008F2 FA               [12] 2775 	mov	r2,a
      0008F3 E4               [12] 2776 	clr	a
      0008F4 08               [12] 2777 	inc	r0
      0008F5 36               [12] 2778 	addc	a,@r0
      0008F6 FB               [12] 2779 	mov	r3,a
      0008F7 08               [12] 2780 	inc	r0
      0008F8 86 04            [24] 2781 	mov	ar4,@r0
      0008FA 8A 82            [24] 2782 	mov	dpl,r2
      0008FC 8B 83            [24] 2783 	mov	dph,r3
      0008FE 8C F0            [24] 2784 	mov	b,r4
      000900 12r00r00         [24] 2785 	lcall	__gptrget
      000903 FF               [12] 2786 	mov	r7,a
      000904 A3               [24] 2787 	inc	dptr
      000905 12r00r00         [24] 2788 	lcall	__gptrget
      000908 FE               [12] 2789 	mov	r6,a
      000909 E5 81            [12] 2790 	mov	a,sp
      00090B 24 FB            [12] 2791 	add	a,#0xfb
      00090D F8               [12] 2792 	mov	r0,a
      00090E 74 A2            [12] 2793 	mov	a,#0xA2
      000910 26               [12] 2794 	add	a,@r0
      000911 FA               [12] 2795 	mov	r2,a
      000912 E4               [12] 2796 	clr	a
      000913 08               [12] 2797 	inc	r0
      000914 36               [12] 2798 	addc	a,@r0
      000915 FB               [12] 2799 	mov	r3,a
      000916 08               [12] 2800 	inc	r0
      000917 86 04            [24] 2801 	mov	ar4,@r0
      000919 8A 82            [24] 2802 	mov	dpl,r2
      00091B 8B 83            [24] 2803 	mov	dph,r3
      00091D 8C F0            [24] 2804 	mov	b,r4
      00091F 12r00r00         [24] 2805 	lcall	__gptrget
      000922 FA               [12] 2806 	mov	r2,a
      000923 A3               [24] 2807 	inc	dptr
      000924 12r00r00         [24] 2808 	lcall	__gptrget
      000927 FB               [12] 2809 	mov	r3,a
      000928 C3               [12] 2810 	clr	c
      000929 EF               [12] 2811 	mov	a,r7
      00092A 9A               [12] 2812 	subb	a,r2
      00092B EE               [12] 2813 	mov	a,r6
      00092C 9B               [12] 2814 	subb	a,r3
      00092D 40 03            [24] 2815 	jc	00134$
      00092F 02r0Ar0F         [24] 2816 	ljmp	00113$
      000932                       2817 00134$:
                                   2818 ;	../contiki-sensinode/core/net/rime/rudolph1.c:257: format_data(c, p->h.chunk);
      000932 C0 07            [24] 2819 	push	ar7
      000934 C0 06            [24] 2820 	push	ar6
      000936 E5 81            [12] 2821 	mov	a,sp
      000938 24 F9            [12] 2822 	add	a,#0xf9
      00093A F8               [12] 2823 	mov	r0,a
      00093B 86 82            [24] 2824 	mov	dpl,@r0
      00093D 08               [12] 2825 	inc	r0
      00093E 86 83            [24] 2826 	mov	dph,@r0
      000940 08               [12] 2827 	inc	r0
      000941 86 F0            [24] 2828 	mov	b,@r0
      000943 12r00rAA         [24] 2829 	lcall	_format_data
      000946 15 81            [12] 2830 	dec	sp
      000948 15 81            [12] 2831 	dec	sp
                                   2832 ;	../contiki-sensinode/core/net/rime/rudolph1.c:258: ipolite_send(&c->ipolite, REPAIR_TIMEOUT, sizeof(struct rudolph1_hdr));
      00094A E5 81            [12] 2833 	mov	a,sp
      00094C 24 FB            [12] 2834 	add	a,#0xfb
      00094E F8               [12] 2835 	mov	r0,a
      00094F 74 5B            [12] 2836 	mov	a,#0x5B
      000951 26               [12] 2837 	add	a,@r0
      000952 FA               [12] 2838 	mov	r2,a
      000953 E4               [12] 2839 	clr	a
      000954 08               [12] 2840 	inc	r0
      000955 36               [12] 2841 	addc	a,@r0
      000956 FB               [12] 2842 	mov	r3,a
      000957 08               [12] 2843 	inc	r0
      000958 86 04            [24] 2844 	mov	ar4,@r0
      00095A 74 04            [12] 2845 	mov	a,#0x04
      00095C C0 E0            [24] 2846 	push	acc
      00095E 74 20            [12] 2847 	mov	a,#0x20
      000960 C0 E0            [24] 2848 	push	acc
      000962 E4               [12] 2849 	clr	a
      000963 C0 E0            [24] 2850 	push	acc
      000965 8A 82            [24] 2851 	mov	dpl,r2
      000967 8B 83            [24] 2852 	mov	dph,r3
      000969 8C F0            [24] 2853 	mov	b,r4
      00096B 12r00r00         [24] 2854 	lcall	_ipolite_send
      00096E 15 81            [12] 2855 	dec	sp
      000970 15 81            [12] 2856 	dec	sp
      000972 15 81            [12] 2857 	dec	sp
      000974 02r0Ar0F         [24] 2858 	ljmp	00113$
      000977                       2859 00106$:
                                   2860 ;	../contiki-sensinode/core/net/rime/rudolph1.c:260: } else if(LT(p->h.version, c->version)) {
      000977 EE               [12] 2861 	mov	a,r6
      000978 C3               [12] 2862 	clr	c
      000979 9D               [12] 2863 	subb	a,r5
      00097A FE               [12] 2864 	mov	r6,a
      00097B 20 E7 03         [24] 2865 	jb	acc.7,00135$
      00097E 02r0Ar0F         [24] 2866 	ljmp	00113$
      000981                       2867 00135$:
                                   2868 ;	../contiki-sensinode/core/net/rime/rudolph1.c:261: format_data(c, 0);
      000981 E4               [12] 2869 	clr	a
      000982 C0 E0            [24] 2870 	push	acc
      000984 C0 E0            [24] 2871 	push	acc
      000986 E5 81            [12] 2872 	mov	a,sp
      000988 24 F9            [12] 2873 	add	a,#0xf9
      00098A F8               [12] 2874 	mov	r0,a
      00098B 86 82            [24] 2875 	mov	dpl,@r0
      00098D 08               [12] 2876 	inc	r0
      00098E 86 83            [24] 2877 	mov	dph,@r0
      000990 08               [12] 2878 	inc	r0
      000991 86 F0            [24] 2879 	mov	b,@r0
      000993 12r00rAA         [24] 2880 	lcall	_format_data
      000996 15 81            [12] 2881 	dec	sp
      000998 15 81            [12] 2882 	dec	sp
                                   2883 ;	../contiki-sensinode/core/net/rime/rudolph1.c:262: ipolite_send(&c->ipolite, c->send_interval / 2, sizeof(struct rudolph1_hdr));
      00099A E5 81            [12] 2884 	mov	a,sp
      00099C 24 FB            [12] 2885 	add	a,#0xfb
      00099E F8               [12] 2886 	mov	r0,a
      00099F 74 A0            [12] 2887 	mov	a,#0xA0
      0009A1 26               [12] 2888 	add	a,@r0
      0009A2 FC               [12] 2889 	mov	r4,a
      0009A3 E4               [12] 2890 	clr	a
      0009A4 08               [12] 2891 	inc	r0
      0009A5 36               [12] 2892 	addc	a,@r0
      0009A6 FD               [12] 2893 	mov	r5,a
      0009A7 08               [12] 2894 	inc	r0
      0009A8 86 06            [24] 2895 	mov	ar6,@r0
      0009AA 8C 82            [24] 2896 	mov	dpl,r4
      0009AC 8D 83            [24] 2897 	mov	dph,r5
      0009AE 8E F0            [24] 2898 	mov	b,r6
      0009B0 12r00r00         [24] 2899 	lcall	__gptrget
      0009B3 FC               [12] 2900 	mov	r4,a
      0009B4 A3               [24] 2901 	inc	dptr
      0009B5 12r00r00         [24] 2902 	lcall	__gptrget
      0009B8 C3               [12] 2903 	clr	c
      0009B9 13               [12] 2904 	rrc	a
      0009BA CC               [12] 2905 	xch	a,r4
      0009BB 13               [12] 2906 	rrc	a
      0009BC CC               [12] 2907 	xch	a,r4
      0009BD FD               [12] 2908 	mov	r5,a
      0009BE E5 81            [12] 2909 	mov	a,sp
      0009C0 24 FB            [12] 2910 	add	a,#0xfb
      0009C2 F8               [12] 2911 	mov	r0,a
      0009C3 74 5B            [12] 2912 	mov	a,#0x5B
      0009C5 26               [12] 2913 	add	a,@r0
      0009C6 FA               [12] 2914 	mov	r2,a
      0009C7 E4               [12] 2915 	clr	a
      0009C8 08               [12] 2916 	inc	r0
      0009C9 36               [12] 2917 	addc	a,@r0
      0009CA FB               [12] 2918 	mov	r3,a
      0009CB 08               [12] 2919 	inc	r0
      0009CC 86 06            [24] 2920 	mov	ar6,@r0
      0009CE 74 04            [12] 2921 	mov	a,#0x04
      0009D0 C0 E0            [24] 2922 	push	acc
      0009D2 C0 04            [24] 2923 	push	ar4
      0009D4 C0 05            [24] 2924 	push	ar5
      0009D6 8A 82            [24] 2925 	mov	dpl,r2
      0009D8 8B 83            [24] 2926 	mov	dph,r3
      0009DA 8E F0            [24] 2927 	mov	b,r6
      0009DC 12r00r00         [24] 2928 	lcall	_ipolite_send
      0009DF 15 81            [12] 2929 	dec	sp
      0009E1 15 81            [12] 2930 	dec	sp
      0009E3 15 81            [12] 2931 	dec	sp
      0009E5 80 28            [24] 2932 	sjmp	00113$
      0009E7                       2933 00111$:
                                   2934 ;	../contiki-sensinode/core/net/rime/rudolph1.c:264: } else if(p->h.type == TYPE_DATA) {
      0009E7 EF               [12] 2935 	mov	a,r7
      0009E8 70 25            [24] 2936 	jnz	00113$
                                   2937 ;	../contiki-sensinode/core/net/rime/rudolph1.c:269: handle_data(c, p);
      0009EA A8 81            [24] 2938 	mov	r0,sp
      0009EC 18               [12] 2939 	dec	r0
      0009ED 18               [12] 2940 	dec	r0
      0009EE E6               [12] 2941 	mov	a,@r0
      0009EF C0 E0            [24] 2942 	push	acc
      0009F1 08               [12] 2943 	inc	r0
      0009F2 E6               [12] 2944 	mov	a,@r0
      0009F3 C0 E0            [24] 2945 	push	acc
      0009F5 08               [12] 2946 	inc	r0
      0009F6 E6               [12] 2947 	mov	a,@r0
      0009F7 C0 E0            [24] 2948 	push	acc
      0009F9 E5 81            [12] 2949 	mov	a,sp
      0009FB 24 F8            [12] 2950 	add	a,#0xf8
      0009FD F8               [12] 2951 	mov	r0,a
      0009FE 86 82            [24] 2952 	mov	dpl,@r0
      000A00 08               [12] 2953 	inc	r0
      000A01 86 83            [24] 2954 	mov	dph,@r0
      000A03 08               [12] 2955 	inc	r0
      000A04 86 F0            [24] 2956 	mov	b,@r0
      000A06 12r04r75         [24] 2957 	lcall	_handle_data
      000A09 15 81            [12] 2958 	dec	sp
      000A0B 15 81            [12] 2959 	dec	sp
      000A0D 15 81            [12] 2960 	dec	sp
      000A0F                       2961 00113$:
      000A0F E5 81            [12] 2962 	mov	a,sp
      000A11 24 FA            [12] 2963 	add	a,#0xFA
      000A13 F5 81            [12] 2964 	mov	sp,a
      000A15 22               [24] 2965 	ret
                                   2966 ;------------------------------------------------------------
                                   2967 ;Allocation info for local variables in function 'send_next_packet'
                                   2968 ;------------------------------------------------------------
                                   2969 ;ptr                       Allocated to registers r5 r6 r7 
                                   2970 ;c                         Allocated to stack - sp -2
                                   2971 ;len                       Allocated to registers r3 r4 
                                   2972 ;sloc0                     Allocated to stack - sp -7
                                   2973 ;sloc1                     Allocated to stack - sp -4
                                   2974 ;------------------------------------------------------------
                                   2975 ;	../contiki-sensinode/core/net/rime/rudolph1.c:274: send_next_packet(void *ptr)
                                   2976 ;	-----------------------------------------
                                   2977 ;	 function send_next_packet
                                   2978 ;	-----------------------------------------
      000A16                       2979 _send_next_packet:
      000A16 E5 81            [12] 2980 	mov	a,sp
      000A18 24 08            [12] 2981 	add	a,#0x08
      000A1A F5 81            [12] 2982 	mov	sp,a
      000A1C AD 82            [24] 2983 	mov	r5,dpl
      000A1E AE 83            [24] 2984 	mov	r6,dph
      000A20 AF F0            [24] 2985 	mov	r7,b
                                   2986 ;	../contiki-sensinode/core/net/rime/rudolph1.c:276: struct rudolph1_conn *c = ptr;
      000A22 A8 81            [24] 2987 	mov	r0,sp
      000A24 18               [12] 2988 	dec	r0
      000A25 18               [12] 2989 	dec	r0
      000A26 A6 05            [24] 2990 	mov	@r0,ar5
      000A28 08               [12] 2991 	inc	r0
      000A29 A6 06            [24] 2992 	mov	@r0,ar6
      000A2B 08               [12] 2993 	inc	r0
      000A2C A6 07            [24] 2994 	mov	@r0,ar7
                                   2995 ;	../contiki-sensinode/core/net/rime/rudolph1.c:278: if(c->nacks == 0) {
      000A2E A8 81            [24] 2996 	mov	r0,sp
      000A30 18               [12] 2997 	dec	r0
      000A31 18               [12] 2998 	dec	r0
      000A32 74 A7            [12] 2999 	mov	a,#0xA7
      000A34 26               [12] 3000 	add	a,@r0
      000A35 FA               [12] 3001 	mov	r2,a
      000A36 E4               [12] 3002 	clr	a
      000A37 08               [12] 3003 	inc	r0
      000A38 36               [12] 3004 	addc	a,@r0
      000A39 FB               [12] 3005 	mov	r3,a
      000A3A 08               [12] 3006 	inc	r0
      000A3B 86 04            [24] 3007 	mov	ar4,@r0
      000A3D 8A 82            [24] 3008 	mov	dpl,r2
      000A3F 8B 83            [24] 3009 	mov	dph,r3
      000A41 8C F0            [24] 3010 	mov	b,r4
      000A43 12r00r00         [24] 3011 	lcall	__gptrget
      000A46 60 03            [24] 3012 	jz	00114$
      000A48 02r0BrBD         [24] 3013 	ljmp	00104$
      000A4B                       3014 00114$:
                                   3015 ;	../contiki-sensinode/core/net/rime/rudolph1.c:279: len = format_data(c, c->chunk);
      000A4B C0 02            [24] 3016 	push	ar2
      000A4D C0 03            [24] 3017 	push	ar3
      000A4F C0 04            [24] 3018 	push	ar4
      000A51 E5 81            [12] 3019 	mov	a,sp
      000A53 24 FB            [12] 3020 	add	a,#0xfb
      000A55 F8               [12] 3021 	mov	r0,a
      000A56 E5 81            [12] 3022 	mov	a,sp
      000A58 24 F6            [12] 3023 	add	a,#0xf6
      000A5A F9               [12] 3024 	mov	r1,a
      000A5B 74 A2            [12] 3025 	mov	a,#0xA2
      000A5D 26               [12] 3026 	add	a,@r0
      000A5E F7               [12] 3027 	mov	@r1,a
      000A5F E4               [12] 3028 	clr	a
      000A60 08               [12] 3029 	inc	r0
      000A61 36               [12] 3030 	addc	a,@r0
      000A62 09               [12] 3031 	inc	r1
      000A63 F7               [12] 3032 	mov	@r1,a
      000A64 08               [12] 3033 	inc	r0
      000A65 09               [12] 3034 	inc	r1
      000A66 E6               [12] 3035 	mov	a,@r0
      000A67 F7               [12] 3036 	mov	@r1,a
      000A68 E5 81            [12] 3037 	mov	a,sp
      000A6A 24 F6            [12] 3038 	add	a,#0xf6
      000A6C F8               [12] 3039 	mov	r0,a
      000A6D 86 82            [24] 3040 	mov	dpl,@r0
      000A6F 08               [12] 3041 	inc	r0
      000A70 86 83            [24] 3042 	mov	dph,@r0
      000A72 08               [12] 3043 	inc	r0
      000A73 86 F0            [24] 3044 	mov	b,@r0
      000A75 12r00r00         [24] 3045 	lcall	__gptrget
      000A78 FB               [12] 3046 	mov	r3,a
      000A79 A3               [24] 3047 	inc	dptr
      000A7A 12r00r00         [24] 3048 	lcall	__gptrget
      000A7D FC               [12] 3049 	mov	r4,a
      000A7E C0 02            [24] 3050 	push	ar2
      000A80 C0 03            [24] 3051 	push	ar3
      000A82 C0 04            [24] 3052 	push	ar4
      000A84 E5 81            [12] 3053 	mov	a,sp
      000A86 24 F8            [12] 3054 	add	a,#0xf8
      000A88 F8               [12] 3055 	mov	r0,a
      000A89 86 82            [24] 3056 	mov	dpl,@r0
      000A8B 08               [12] 3057 	inc	r0
      000A8C 86 83            [24] 3058 	mov	dph,@r0
      000A8E 08               [12] 3059 	inc	r0
      000A8F 86 F0            [24] 3060 	mov	b,@r0
      000A91 12r00rAA         [24] 3061 	lcall	_format_data
      000A94 AB 82            [24] 3062 	mov	r3,dpl
      000A96 AC 83            [24] 3063 	mov	r4,dph
      000A98 15 81            [12] 3064 	dec	sp
      000A9A 15 81            [12] 3065 	dec	sp
      000A9C D0 02            [24] 3066 	pop	ar2
                                   3067 ;	../contiki-sensinode/core/net/rime/rudolph1.c:280: trickle_send(&c->trickle);
      000A9E E5 81            [12] 3068 	mov	a,sp
      000AA0 24 FB            [12] 3069 	add	a,#0xfb
      000AA2 F8               [12] 3070 	mov	r0,a
      000AA3 86 82            [24] 3071 	mov	dpl,@r0
      000AA5 08               [12] 3072 	inc	r0
      000AA6 86 83            [24] 3073 	mov	dph,@r0
      000AA8 08               [12] 3074 	inc	r0
      000AA9 86 F0            [24] 3075 	mov	b,@r0
      000AAB C0 04            [24] 3076 	push	ar4
      000AAD C0 03            [24] 3077 	push	ar3
      000AAF C0 02            [24] 3078 	push	ar2
      000AB1 12r00r00         [24] 3079 	lcall	_trickle_send
      000AB4 D0 02            [24] 3080 	pop	ar2
      000AB6 D0 03            [24] 3081 	pop	ar3
      000AB8 D0 04            [24] 3082 	pop	ar4
                                   3083 ;	../contiki-sensinode/core/net/rime/rudolph1.c:281: if(len == RUDOLPH1_DATASIZE) {
      000ABA BB 40 05         [24] 3084 	cjne	r3,#0x40,00115$
      000ABD BC 00 02         [24] 3085 	cjne	r4,#0x00,00115$
      000AC0 80 09            [24] 3086 	sjmp	00116$
      000AC2                       3087 00115$:
      000AC2 D0 04            [24] 3088 	pop	ar4
      000AC4 D0 03            [24] 3089 	pop	ar3
      000AC6 D0 02            [24] 3090 	pop	ar2
      000AC8 02r0Br48         [24] 3091 	ljmp	00102$
      000ACB                       3092 00116$:
                                   3093 ;	../contiki-sensinode/core/net/rime/rudolph1.c:282: ctimer_set(&c->t, c->send_interval, send_next_packet, c);
      000ACB E5 81            [12] 3094 	mov	a,sp
      000ACD 24 FB            [12] 3095 	add	a,#0xfb
      000ACF F8               [12] 3096 	mov	r0,a
      000AD0 86 02            [24] 3097 	mov	ar2,@r0
      000AD2 08               [12] 3098 	inc	r0
      000AD3 86 03            [24] 3099 	mov	ar3,@r0
      000AD5 08               [12] 3100 	inc	r0
      000AD6 86 04            [24] 3101 	mov	ar4,@r0
      000AD8 E5 81            [12] 3102 	mov	a,sp
      000ADA 24 FB            [12] 3103 	add	a,#0xfb
      000ADC F8               [12] 3104 	mov	r0,a
      000ADD 74 A0            [12] 3105 	mov	a,#0xA0
      000ADF 26               [12] 3106 	add	a,@r0
      000AE0 FD               [12] 3107 	mov	r5,a
      000AE1 E4               [12] 3108 	clr	a
      000AE2 08               [12] 3109 	inc	r0
      000AE3 36               [12] 3110 	addc	a,@r0
      000AE4 FE               [12] 3111 	mov	r6,a
      000AE5 08               [12] 3112 	inc	r0
      000AE6 86 07            [24] 3113 	mov	ar7,@r0
      000AE8 8D 82            [24] 3114 	mov	dpl,r5
      000AEA 8E 83            [24] 3115 	mov	dph,r6
      000AEC 8F F0            [24] 3116 	mov	b,r7
      000AEE E5 81            [12] 3117 	mov	a,sp
      000AF0 24 F9            [12] 3118 	add	a,#0xf9
      000AF2 F8               [12] 3119 	mov	r0,a
      000AF3 12r00r00         [24] 3120 	lcall	__gptrget
      000AF6 F6               [12] 3121 	mov	@r0,a
      000AF7 A3               [24] 3122 	inc	dptr
      000AF8 12r00r00         [24] 3123 	lcall	__gptrget
      000AFB 08               [12] 3124 	inc	r0
      000AFC F6               [12] 3125 	mov	@r0,a
      000AFD E5 81            [12] 3126 	mov	a,sp
      000AFF 24 FB            [12] 3127 	add	a,#0xfb
      000B01 F8               [12] 3128 	mov	r0,a
      000B02 74 8B            [12] 3129 	mov	a,#0x8B
      000B04 26               [12] 3130 	add	a,@r0
      000B05 FD               [12] 3131 	mov	r5,a
      000B06 E4               [12] 3132 	clr	a
      000B07 08               [12] 3133 	inc	r0
      000B08 36               [12] 3134 	addc	a,@r0
      000B09 FE               [12] 3135 	mov	r6,a
      000B0A 08               [12] 3136 	inc	r0
      000B0B 86 07            [24] 3137 	mov	ar7,@r0
      000B0D C0 04            [24] 3138 	push	ar4
      000B0F C0 03            [24] 3139 	push	ar3
      000B11 C0 02            [24] 3140 	push	ar2
      000B13 C0 02            [24] 3141 	push	ar2
      000B15 C0 03            [24] 3142 	push	ar3
      000B17 C0 04            [24] 3143 	push	ar4
      000B19 74r16            [12] 3144 	mov	a,#_send_next_packet
      000B1B C0 E0            [24] 3145 	push	acc
      000B1D 74s0A            [12] 3146 	mov	a,#(_send_next_packet >> 8)
      000B1F C0 E0            [24] 3147 	push	acc
      000B21 E5 81            [12] 3148 	mov	a,sp
      000B23 24 F1            [12] 3149 	add	a,#0xf1
      000B25 F8               [12] 3150 	mov	r0,a
      000B26 E6               [12] 3151 	mov	a,@r0
      000B27 C0 E0            [24] 3152 	push	acc
      000B29 08               [12] 3153 	inc	r0
      000B2A E6               [12] 3154 	mov	a,@r0
      000B2B C0 E0            [24] 3155 	push	acc
      000B2D 8D 82            [24] 3156 	mov	dpl,r5
      000B2F 8E 83            [24] 3157 	mov	dph,r6
      000B31 8F F0            [24] 3158 	mov	b,r7
      000B33 12r00r00         [24] 3159 	lcall	_ctimer_set
      000B36 E5 81            [12] 3160 	mov	a,sp
      000B38 24 F9            [12] 3161 	add	a,#0xf9
      000B3A F5 81            [12] 3162 	mov	sp,a
      000B3C D0 02            [24] 3163 	pop	ar2
      000B3E D0 03            [24] 3164 	pop	ar3
      000B40 D0 04            [24] 3165 	pop	ar4
                                   3166 ;	../contiki-sensinode/core/net/rime/rudolph1.c:294: c->nacks = 0;
      000B42 D0 04            [24] 3167 	pop	ar4
      000B44 D0 03            [24] 3168 	pop	ar3
      000B46 D0 02            [24] 3169 	pop	ar2
                                   3170 ;	../contiki-sensinode/core/net/rime/rudolph1.c:282: ctimer_set(&c->t, c->send_interval, send_next_packet, c);
      000B48                       3171 00102$:
                                   3172 ;	../contiki-sensinode/core/net/rime/rudolph1.c:288: c->highest_chunk_heard = c->chunk;
      000B48 C0 02            [24] 3173 	push	ar2
      000B4A C0 03            [24] 3174 	push	ar3
      000B4C C0 04            [24] 3175 	push	ar4
      000B4E E5 81            [12] 3176 	mov	a,sp
      000B50 24 FB            [12] 3177 	add	a,#0xfb
      000B52 F8               [12] 3178 	mov	r0,a
      000B53 74 A4            [12] 3179 	mov	a,#0xA4
      000B55 26               [12] 3180 	add	a,@r0
      000B56 FD               [12] 3181 	mov	r5,a
      000B57 E4               [12] 3182 	clr	a
      000B58 08               [12] 3183 	inc	r0
      000B59 36               [12] 3184 	addc	a,@r0
      000B5A FE               [12] 3185 	mov	r6,a
      000B5B 08               [12] 3186 	inc	r0
      000B5C 86 07            [24] 3187 	mov	ar7,@r0
      000B5E E5 81            [12] 3188 	mov	a,sp
      000B60 24 F6            [12] 3189 	add	a,#0xf6
      000B62 F8               [12] 3190 	mov	r0,a
      000B63 86 82            [24] 3191 	mov	dpl,@r0
      000B65 08               [12] 3192 	inc	r0
      000B66 86 83            [24] 3193 	mov	dph,@r0
      000B68 08               [12] 3194 	inc	r0
      000B69 86 F0            [24] 3195 	mov	b,@r0
      000B6B 12r00r00         [24] 3196 	lcall	__gptrget
      000B6E FB               [12] 3197 	mov	r3,a
      000B6F A3               [24] 3198 	inc	dptr
      000B70 12r00r00         [24] 3199 	lcall	__gptrget
      000B73 FC               [12] 3200 	mov	r4,a
      000B74 8D 82            [24] 3201 	mov	dpl,r5
      000B76 8E 83            [24] 3202 	mov	dph,r6
      000B78 8F F0            [24] 3203 	mov	b,r7
      000B7A EB               [12] 3204 	mov	a,r3
      000B7B 12r00r00         [24] 3205 	lcall	__gptrput
      000B7E A3               [24] 3206 	inc	dptr
      000B7F EC               [12] 3207 	mov	a,r4
      000B80 12r00r00         [24] 3208 	lcall	__gptrput
                                   3209 ;	../contiki-sensinode/core/net/rime/rudolph1.c:289: c->chunk++;
      000B83 E5 81            [12] 3210 	mov	a,sp
      000B85 24 F6            [12] 3211 	add	a,#0xf6
      000B87 F8               [12] 3212 	mov	r0,a
      000B88 86 82            [24] 3213 	mov	dpl,@r0
      000B8A 08               [12] 3214 	inc	r0
      000B8B 86 83            [24] 3215 	mov	dph,@r0
      000B8D 08               [12] 3216 	inc	r0
      000B8E 86 F0            [24] 3217 	mov	b,@r0
      000B90 12r00r00         [24] 3218 	lcall	__gptrget
      000B93 FE               [12] 3219 	mov	r6,a
      000B94 A3               [24] 3220 	inc	dptr
      000B95 12r00r00         [24] 3221 	lcall	__gptrget
      000B98 FF               [12] 3222 	mov	r7,a
      000B99 0E               [12] 3223 	inc	r6
      000B9A BE 00 01         [24] 3224 	cjne	r6,#0x00,00117$
      000B9D 0F               [12] 3225 	inc	r7
      000B9E                       3226 00117$:
      000B9E E5 81            [12] 3227 	mov	a,sp
      000BA0 24 F6            [12] 3228 	add	a,#0xf6
      000BA2 F8               [12] 3229 	mov	r0,a
      000BA3 86 82            [24] 3230 	mov	dpl,@r0
      000BA5 08               [12] 3231 	inc	r0
      000BA6 86 83            [24] 3232 	mov	dph,@r0
      000BA8 08               [12] 3233 	inc	r0
      000BA9 86 F0            [24] 3234 	mov	b,@r0
      000BAB EE               [12] 3235 	mov	a,r6
      000BAC 12r00r00         [24] 3236 	lcall	__gptrput
      000BAF A3               [24] 3237 	inc	dptr
      000BB0 EF               [12] 3238 	mov	a,r7
      000BB1 12r00r00         [24] 3239 	lcall	__gptrput
      000BB4 D0 04            [24] 3240 	pop	ar4
      000BB6 D0 03            [24] 3241 	pop	ar3
      000BB8 D0 02            [24] 3242 	pop	ar2
      000BBA 02r0Cr40         [24] 3243 	ljmp	00105$
      000BBD                       3244 00104$:
                                   3245 ;	../contiki-sensinode/core/net/rime/rudolph1.c:292: ctimer_set(&c->t, c->send_interval, send_next_packet, c);
      000BBD C0 02            [24] 3246 	push	ar2
      000BBF C0 03            [24] 3247 	push	ar3
      000BC1 C0 04            [24] 3248 	push	ar4
      000BC3 E5 81            [12] 3249 	mov	a,sp
      000BC5 24 FB            [12] 3250 	add	a,#0xfb
      000BC7 F8               [12] 3251 	mov	r0,a
      000BC8 86 05            [24] 3252 	mov	ar5,@r0
      000BCA 08               [12] 3253 	inc	r0
      000BCB 86 06            [24] 3254 	mov	ar6,@r0
      000BCD 08               [12] 3255 	inc	r0
      000BCE 86 07            [24] 3256 	mov	ar7,@r0
      000BD0 E5 81            [12] 3257 	mov	a,sp
      000BD2 24 FB            [12] 3258 	add	a,#0xfb
      000BD4 F8               [12] 3259 	mov	r0,a
      000BD5 74 A0            [12] 3260 	mov	a,#0xA0
      000BD7 26               [12] 3261 	add	a,@r0
      000BD8 FA               [12] 3262 	mov	r2,a
      000BD9 E4               [12] 3263 	clr	a
      000BDA 08               [12] 3264 	inc	r0
      000BDB 36               [12] 3265 	addc	a,@r0
      000BDC FB               [12] 3266 	mov	r3,a
      000BDD 08               [12] 3267 	inc	r0
      000BDE 86 04            [24] 3268 	mov	ar4,@r0
      000BE0 8A 82            [24] 3269 	mov	dpl,r2
      000BE2 8B 83            [24] 3270 	mov	dph,r3
      000BE4 8C F0            [24] 3271 	mov	b,r4
      000BE6 E5 81            [12] 3272 	mov	a,sp
      000BE8 24 F9            [12] 3273 	add	a,#0xf9
      000BEA F8               [12] 3274 	mov	r0,a
      000BEB 12r00r00         [24] 3275 	lcall	__gptrget
      000BEE F6               [12] 3276 	mov	@r0,a
      000BEF A3               [24] 3277 	inc	dptr
      000BF0 12r00r00         [24] 3278 	lcall	__gptrget
      000BF3 08               [12] 3279 	inc	r0
      000BF4 F6               [12] 3280 	mov	@r0,a
      000BF5 E5 81            [12] 3281 	mov	a,sp
      000BF7 24 FB            [12] 3282 	add	a,#0xfb
      000BF9 F8               [12] 3283 	mov	r0,a
      000BFA 74 8B            [12] 3284 	mov	a,#0x8B
      000BFC 26               [12] 3285 	add	a,@r0
      000BFD FA               [12] 3286 	mov	r2,a
      000BFE E4               [12] 3287 	clr	a
      000BFF 08               [12] 3288 	inc	r0
      000C00 36               [12] 3289 	addc	a,@r0
      000C01 FB               [12] 3290 	mov	r3,a
      000C02 08               [12] 3291 	inc	r0
      000C03 86 04            [24] 3292 	mov	ar4,@r0
      000C05 C0 04            [24] 3293 	push	ar4
      000C07 C0 03            [24] 3294 	push	ar3
      000C09 C0 02            [24] 3295 	push	ar2
      000C0B C0 05            [24] 3296 	push	ar5
      000C0D C0 06            [24] 3297 	push	ar6
      000C0F C0 07            [24] 3298 	push	ar7
      000C11 74r16            [12] 3299 	mov	a,#_send_next_packet
      000C13 C0 E0            [24] 3300 	push	acc
      000C15 74s0A            [12] 3301 	mov	a,#(_send_next_packet >> 8)
      000C17 C0 E0            [24] 3302 	push	acc
      000C19 E5 81            [12] 3303 	mov	a,sp
      000C1B 24 F1            [12] 3304 	add	a,#0xf1
      000C1D F8               [12] 3305 	mov	r0,a
      000C1E E6               [12] 3306 	mov	a,@r0
      000C1F C0 E0            [24] 3307 	push	acc
      000C21 08               [12] 3308 	inc	r0
      000C22 E6               [12] 3309 	mov	a,@r0
      000C23 C0 E0            [24] 3310 	push	acc
      000C25 8A 82            [24] 3311 	mov	dpl,r2
      000C27 8B 83            [24] 3312 	mov	dph,r3
      000C29 8C F0            [24] 3313 	mov	b,r4
      000C2B 12r00r00         [24] 3314 	lcall	_ctimer_set
      000C2E E5 81            [12] 3315 	mov	a,sp
      000C30 24 F9            [12] 3316 	add	a,#0xf9
      000C32 F5 81            [12] 3317 	mov	sp,a
      000C34 D0 02            [24] 3318 	pop	ar2
      000C36 D0 03            [24] 3319 	pop	ar3
      000C38 D0 04            [24] 3320 	pop	ar4
                                   3321 ;	../contiki-sensinode/core/net/rime/rudolph1.c:294: c->nacks = 0;
      000C3A D0 04            [24] 3322 	pop	ar4
      000C3C D0 03            [24] 3323 	pop	ar3
      000C3E D0 02            [24] 3324 	pop	ar2
                                   3325 ;	../contiki-sensinode/core/net/rime/rudolph1.c:292: ctimer_set(&c->t, c->send_interval, send_next_packet, c);
      000C40                       3326 00105$:
                                   3327 ;	../contiki-sensinode/core/net/rime/rudolph1.c:294: c->nacks = 0;
      000C40 8A 82            [24] 3328 	mov	dpl,r2
      000C42 8B 83            [24] 3329 	mov	dph,r3
      000C44 8C F0            [24] 3330 	mov	b,r4
      000C46 E4               [12] 3331 	clr	a
      000C47 12r00r00         [24] 3332 	lcall	__gptrput
      000C4A E5 81            [12] 3333 	mov	a,sp
      000C4C 24 F8            [12] 3334 	add	a,#0xF8
      000C4E F5 81            [12] 3335 	mov	sp,a
      000C50 22               [24] 3336 	ret
                                   3337 ;------------------------------------------------------------
                                   3338 ;Allocation info for local variables in function 'rudolph1_open'
                                   3339 ;------------------------------------------------------------
                                   3340 ;channel                   Allocated to stack - sp -6
                                   3341 ;cb                        Allocated to stack - sp -9
                                   3342 ;c                         Allocated to stack - sp -2
                                   3343 ;------------------------------------------------------------
                                   3344 ;	../contiki-sensinode/core/net/rime/rudolph1.c:302: rudolph1_open(struct rudolph1_conn *c, uint16_t channel,
                                   3345 ;	-----------------------------------------
                                   3346 ;	 function rudolph1_open
                                   3347 ;	-----------------------------------------
      000C51                       3348 _rudolph1_open:
      000C51 C0 82            [24] 3349 	push	dpl
      000C53 C0 83            [24] 3350 	push	dph
      000C55 C0 F0            [24] 3351 	push	b
                                   3352 ;	../contiki-sensinode/core/net/rime/rudolph1.c:305: trickle_open(&c->trickle, TRICKLE_INTERVAL, channel, &trickle);
      000C57 74r06            [12] 3353 	mov	a,#_trickle
      000C59 C0 E0            [24] 3354 	push	acc
      000C5B 74s00            [12] 3355 	mov	a,#(_trickle >> 8)
      000C5D C0 E0            [24] 3356 	push	acc
      000C5F 74 80            [12] 3357 	mov	a,#0x80
      000C61 C0 E0            [24] 3358 	push	acc
      000C63 E5 81            [12] 3359 	mov	a,sp
      000C65 24 F7            [12] 3360 	add	a,#0xf7
      000C67 F8               [12] 3361 	mov	r0,a
      000C68 E6               [12] 3362 	mov	a,@r0
      000C69 C0 E0            [24] 3363 	push	acc
      000C6B 08               [12] 3364 	inc	r0
      000C6C E6               [12] 3365 	mov	a,@r0
      000C6D C0 E0            [24] 3366 	push	acc
      000C6F 74 40            [12] 3367 	mov	a,#0x40
      000C71 C0 E0            [24] 3368 	push	acc
      000C73 E4               [12] 3369 	clr	a
      000C74 C0 E0            [24] 3370 	push	acc
      000C76 E5 81            [12] 3371 	mov	a,sp
      000C78 24 F7            [12] 3372 	add	a,#0xf7
      000C7A F8               [12] 3373 	mov	r0,a
      000C7B 86 82            [24] 3374 	mov	dpl,@r0
      000C7D 08               [12] 3375 	inc	r0
      000C7E 86 83            [24] 3376 	mov	dph,@r0
      000C80 08               [12] 3377 	inc	r0
      000C81 86 F0            [24] 3378 	mov	b,@r0
      000C83 12r00r00         [24] 3379 	lcall	_trickle_open
      000C86 E5 81            [12] 3380 	mov	a,sp
      000C88 24 F9            [12] 3381 	add	a,#0xf9
                                   3382 ;	../contiki-sensinode/core/net/rime/rudolph1.c:306: ipolite_open(&c->ipolite, channel + 1, 1, &ipolite);
      000C8A F5 81            [12] 3383 	mov	sp,a
      000C8C 24 FA            [12] 3384 	add	a,#0xfa
      000C8E F8               [12] 3385 	mov	r0,a
      000C8F 74 01            [12] 3386 	mov	a,#0x01
      000C91 26               [12] 3387 	add	a,@r0
      000C92 FB               [12] 3388 	mov	r3,a
      000C93 E4               [12] 3389 	clr	a
      000C94 08               [12] 3390 	inc	r0
      000C95 36               [12] 3391 	addc	a,@r0
      000C96 FC               [12] 3392 	mov	r4,a
      000C97 A8 81            [24] 3393 	mov	r0,sp
      000C99 18               [12] 3394 	dec	r0
      000C9A 18               [12] 3395 	dec	r0
      000C9B 74 5B            [12] 3396 	mov	a,#0x5B
      000C9D 26               [12] 3397 	add	a,@r0
      000C9E FA               [12] 3398 	mov	r2,a
      000C9F E4               [12] 3399 	clr	a
      000CA0 08               [12] 3400 	inc	r0
      000CA1 36               [12] 3401 	addc	a,@r0
      000CA2 FE               [12] 3402 	mov	r6,a
      000CA3 08               [12] 3403 	inc	r0
      000CA4 86 07            [24] 3404 	mov	ar7,@r0
      000CA6 74r00            [12] 3405 	mov	a,#_ipolite
      000CA8 C0 E0            [24] 3406 	push	acc
      000CAA 74s00            [12] 3407 	mov	a,#(_ipolite >> 8)
      000CAC C0 E0            [24] 3408 	push	acc
      000CAE 74 80            [12] 3409 	mov	a,#0x80
      000CB0 C0 E0            [24] 3410 	push	acc
      000CB2 23               [12] 3411 	rl	a
      000CB3 C0 E0            [24] 3412 	push	acc
      000CB5 C0 03            [24] 3413 	push	ar3
      000CB7 C0 04            [24] 3414 	push	ar4
      000CB9 8A 82            [24] 3415 	mov	dpl,r2
      000CBB 8E 83            [24] 3416 	mov	dph,r6
      000CBD 8F F0            [24] 3417 	mov	b,r7
      000CBF 12r00r00         [24] 3418 	lcall	_ipolite_open
      000CC2 E5 81            [12] 3419 	mov	a,sp
      000CC4 24 FA            [12] 3420 	add	a,#0xfa
      000CC6 F5 81            [12] 3421 	mov	sp,a
                                   3422 ;	../contiki-sensinode/core/net/rime/rudolph1.c:307: c->cb = cb;
      000CC8 A8 81            [24] 3423 	mov	r0,sp
      000CCA 18               [12] 3424 	dec	r0
      000CCB 18               [12] 3425 	dec	r0
      000CCC 74 88            [12] 3426 	mov	a,#0x88
      000CCE 26               [12] 3427 	add	a,@r0
      000CCF FD               [12] 3428 	mov	r5,a
      000CD0 E4               [12] 3429 	clr	a
      000CD1 08               [12] 3430 	inc	r0
      000CD2 36               [12] 3431 	addc	a,@r0
      000CD3 FE               [12] 3432 	mov	r6,a
      000CD4 08               [12] 3433 	inc	r0
      000CD5 86 07            [24] 3434 	mov	ar7,@r0
      000CD7 8D 82            [24] 3435 	mov	dpl,r5
      000CD9 8E 83            [24] 3436 	mov	dph,r6
      000CDB 8F F0            [24] 3437 	mov	b,r7
      000CDD E5 81            [12] 3438 	mov	a,sp
      000CDF 24 F7            [12] 3439 	add	a,#0xf7
      000CE1 F8               [12] 3440 	mov	r0,a
      000CE2 E6               [12] 3441 	mov	a,@r0
      000CE3 12r00r00         [24] 3442 	lcall	__gptrput
      000CE6 A3               [24] 3443 	inc	dptr
      000CE7 08               [12] 3444 	inc	r0
      000CE8 E6               [12] 3445 	mov	a,@r0
      000CE9 12r00r00         [24] 3446 	lcall	__gptrput
      000CEC A3               [24] 3447 	inc	dptr
      000CED 08               [12] 3448 	inc	r0
      000CEE E6               [12] 3449 	mov	a,@r0
      000CEF 12r00r00         [24] 3450 	lcall	__gptrput
                                   3451 ;	../contiki-sensinode/core/net/rime/rudolph1.c:308: c->version = 0;
      000CF2 A8 81            [24] 3452 	mov	r0,sp
      000CF4 18               [12] 3453 	dec	r0
      000CF5 18               [12] 3454 	dec	r0
      000CF6 74 A6            [12] 3455 	mov	a,#0xA6
      000CF8 26               [12] 3456 	add	a,@r0
      000CF9 FD               [12] 3457 	mov	r5,a
      000CFA E4               [12] 3458 	clr	a
      000CFB 08               [12] 3459 	inc	r0
      000CFC 36               [12] 3460 	addc	a,@r0
      000CFD FE               [12] 3461 	mov	r6,a
      000CFE 08               [12] 3462 	inc	r0
      000CFF 86 07            [24] 3463 	mov	ar7,@r0
      000D01 8D 82            [24] 3464 	mov	dpl,r5
      000D03 8E 83            [24] 3465 	mov	dph,r6
      000D05 8F F0            [24] 3466 	mov	b,r7
      000D07 E4               [12] 3467 	clr	a
      000D08 12r00r00         [24] 3468 	lcall	__gptrput
                                   3469 ;	../contiki-sensinode/core/net/rime/rudolph1.c:309: c->send_interval = DEFAULT_SEND_INTERVAL;
      000D0B A8 81            [24] 3470 	mov	r0,sp
      000D0D 18               [12] 3471 	dec	r0
      000D0E 18               [12] 3472 	dec	r0
      000D0F 74 A0            [12] 3473 	mov	a,#0xA0
      000D11 26               [12] 3474 	add	a,@r0
      000D12 FD               [12] 3475 	mov	r5,a
      000D13 E4               [12] 3476 	clr	a
      000D14 08               [12] 3477 	inc	r0
      000D15 36               [12] 3478 	addc	a,@r0
      000D16 FE               [12] 3479 	mov	r6,a
      000D17 08               [12] 3480 	inc	r0
      000D18 86 07            [24] 3481 	mov	ar7,@r0
      000D1A 8D 82            [24] 3482 	mov	dpl,r5
      000D1C 8E 83            [24] 3483 	mov	dph,r6
      000D1E 8F F0            [24] 3484 	mov	b,r7
      000D20 E4               [12] 3485 	clr	a
      000D21 12r00r00         [24] 3486 	lcall	__gptrput
      000D24 A3               [24] 3487 	inc	dptr
      000D25 04               [12] 3488 	inc	a
      000D26 12r00r00         [24] 3489 	lcall	__gptrput
      000D29 15 81            [12] 3490 	dec	sp
      000D2B 15 81            [12] 3491 	dec	sp
      000D2D 15 81            [12] 3492 	dec	sp
      000D2F 22               [24] 3493 	ret
                                   3494 ;------------------------------------------------------------
                                   3495 ;Allocation info for local variables in function 'rudolph1_close'
                                   3496 ;------------------------------------------------------------
                                   3497 ;c                         Allocated to registers r5 r6 r7 
                                   3498 ;------------------------------------------------------------
                                   3499 ;	../contiki-sensinode/core/net/rime/rudolph1.c:313: rudolph1_close(struct rudolph1_conn *c)
                                   3500 ;	-----------------------------------------
                                   3501 ;	 function rudolph1_close
                                   3502 ;	-----------------------------------------
      000D30                       3503 _rudolph1_close:
                                   3504 ;	../contiki-sensinode/core/net/rime/rudolph1.c:315: trickle_close(&c->trickle);
      000D30 AD 82            [24] 3505 	mov	r5,dpl
      000D32 AE 83            [24] 3506 	mov	r6,dph
      000D34 AF F0            [24] 3507 	mov	r7,b
      000D36 C0 07            [24] 3508 	push	ar7
      000D38 C0 06            [24] 3509 	push	ar6
      000D3A C0 05            [24] 3510 	push	ar5
      000D3C 12r00r00         [24] 3511 	lcall	_trickle_close
      000D3F D0 05            [24] 3512 	pop	ar5
      000D41 D0 06            [24] 3513 	pop	ar6
      000D43 D0 07            [24] 3514 	pop	ar7
                                   3515 ;	../contiki-sensinode/core/net/rime/rudolph1.c:316: ipolite_close(&c->ipolite);
      000D45 74 5B            [12] 3516 	mov	a,#0x5B
      000D47 2D               [12] 3517 	add	a,r5
      000D48 FD               [12] 3518 	mov	r5,a
      000D49 E4               [12] 3519 	clr	a
      000D4A 3E               [12] 3520 	addc	a,r6
      000D4B FE               [12] 3521 	mov	r6,a
      000D4C 8D 82            [24] 3522 	mov	dpl,r5
      000D4E 8E 83            [24] 3523 	mov	dph,r6
      000D50 8F F0            [24] 3524 	mov	b,r7
      000D52 02r00r00         [24] 3525 	ljmp	_ipolite_close
                                   3526 ;------------------------------------------------------------
                                   3527 ;Allocation info for local variables in function 'rudolph1_send'
                                   3528 ;------------------------------------------------------------
                                   3529 ;send_interval             Allocated to stack - sp -6
                                   3530 ;c                         Allocated to stack - sp -2
                                   3531 ;------------------------------------------------------------
                                   3532 ;	../contiki-sensinode/core/net/rime/rudolph1.c:320: rudolph1_send(struct rudolph1_conn *c, clock_time_t send_interval)
                                   3533 ;	-----------------------------------------
                                   3534 ;	 function rudolph1_send
                                   3535 ;	-----------------------------------------
      000D55                       3536 _rudolph1_send:
      000D55 C0 82            [24] 3537 	push	dpl
      000D57 C0 83            [24] 3538 	push	dph
      000D59 C0 F0            [24] 3539 	push	b
                                   3540 ;	../contiki-sensinode/core/net/rime/rudolph1.c:322: c->version++;
      000D5B A8 81            [24] 3541 	mov	r0,sp
      000D5D 18               [12] 3542 	dec	r0
      000D5E 18               [12] 3543 	dec	r0
      000D5F 74 A6            [12] 3544 	mov	a,#0xA6
      000D61 26               [12] 3545 	add	a,@r0
      000D62 FA               [12] 3546 	mov	r2,a
      000D63 E4               [12] 3547 	clr	a
      000D64 08               [12] 3548 	inc	r0
      000D65 36               [12] 3549 	addc	a,@r0
      000D66 FB               [12] 3550 	mov	r3,a
      000D67 08               [12] 3551 	inc	r0
      000D68 86 04            [24] 3552 	mov	ar4,@r0
      000D6A 8A 82            [24] 3553 	mov	dpl,r2
      000D6C 8B 83            [24] 3554 	mov	dph,r3
      000D6E 8C F0            [24] 3555 	mov	b,r4
      000D70 12r00r00         [24] 3556 	lcall	__gptrget
      000D73 FF               [12] 3557 	mov	r7,a
      000D74 0F               [12] 3558 	inc	r7
      000D75 8A 82            [24] 3559 	mov	dpl,r2
      000D77 8B 83            [24] 3560 	mov	dph,r3
      000D79 8C F0            [24] 3561 	mov	b,r4
      000D7B EF               [12] 3562 	mov	a,r7
      000D7C 12r00r00         [24] 3563 	lcall	__gptrput
                                   3564 ;	../contiki-sensinode/core/net/rime/rudolph1.c:323: c->chunk = c->highest_chunk_heard = 0;
      000D7F A8 81            [24] 3565 	mov	r0,sp
      000D81 18               [12] 3566 	dec	r0
      000D82 18               [12] 3567 	dec	r0
      000D83 74 A2            [12] 3568 	mov	a,#0xA2
      000D85 26               [12] 3569 	add	a,@r0
      000D86 FD               [12] 3570 	mov	r5,a
      000D87 E4               [12] 3571 	clr	a
      000D88 08               [12] 3572 	inc	r0
      000D89 36               [12] 3573 	addc	a,@r0
      000D8A FE               [12] 3574 	mov	r6,a
      000D8B 08               [12] 3575 	inc	r0
      000D8C 86 07            [24] 3576 	mov	ar7,@r0
      000D8E A8 81            [24] 3577 	mov	r0,sp
      000D90 18               [12] 3578 	dec	r0
      000D91 18               [12] 3579 	dec	r0
      000D92 74 A4            [12] 3580 	mov	a,#0xA4
      000D94 26               [12] 3581 	add	a,@r0
      000D95 FA               [12] 3582 	mov	r2,a
      000D96 E4               [12] 3583 	clr	a
      000D97 08               [12] 3584 	inc	r0
      000D98 36               [12] 3585 	addc	a,@r0
      000D99 FB               [12] 3586 	mov	r3,a
      000D9A 08               [12] 3587 	inc	r0
      000D9B 86 04            [24] 3588 	mov	ar4,@r0
      000D9D 8A 82            [24] 3589 	mov	dpl,r2
      000D9F 8B 83            [24] 3590 	mov	dph,r3
      000DA1 8C F0            [24] 3591 	mov	b,r4
      000DA3 E4               [12] 3592 	clr	a
      000DA4 12r00r00         [24] 3593 	lcall	__gptrput
      000DA7 A3               [24] 3594 	inc	dptr
      000DA8 12r00r00         [24] 3595 	lcall	__gptrput
      000DAB 8D 82            [24] 3596 	mov	dpl,r5
      000DAD 8E 83            [24] 3597 	mov	dph,r6
      000DAF 8F F0            [24] 3598 	mov	b,r7
      000DB1 12r00r00         [24] 3599 	lcall	__gptrput
      000DB4 A3               [24] 3600 	inc	dptr
      000DB5 12r00r00         [24] 3601 	lcall	__gptrput
                                   3602 ;	../contiki-sensinode/core/net/rime/rudolph1.c:325: format_data(c, 0);
      000DB8 C0 E0            [24] 3603 	push	acc
      000DBA C0 E0            [24] 3604 	push	acc
      000DBC E5 81            [12] 3605 	mov	a,sp
      000DBE 24 FC            [12] 3606 	add	a,#0xfc
      000DC0 F8               [12] 3607 	mov	r0,a
      000DC1 86 82            [24] 3608 	mov	dpl,@r0
      000DC3 08               [12] 3609 	inc	r0
      000DC4 86 83            [24] 3610 	mov	dph,@r0
      000DC6 08               [12] 3611 	inc	r0
      000DC7 86 F0            [24] 3612 	mov	b,@r0
      000DC9 12r00rAA         [24] 3613 	lcall	_format_data
      000DCC 15 81            [12] 3614 	dec	sp
      000DCE 15 81            [12] 3615 	dec	sp
                                   3616 ;	../contiki-sensinode/core/net/rime/rudolph1.c:326: trickle_send(&c->trickle);
      000DD0 A8 81            [24] 3617 	mov	r0,sp
      000DD2 18               [12] 3618 	dec	r0
      000DD3 18               [12] 3619 	dec	r0
      000DD4 86 82            [24] 3620 	mov	dpl,@r0
      000DD6 08               [12] 3621 	inc	r0
      000DD7 86 83            [24] 3622 	mov	dph,@r0
      000DD9 08               [12] 3623 	inc	r0
      000DDA 86 F0            [24] 3624 	mov	b,@r0
      000DDC 12r00r00         [24] 3625 	lcall	_trickle_send
                                   3626 ;	../contiki-sensinode/core/net/rime/rudolph1.c:327: c->chunk++;
      000DDF A8 81            [24] 3627 	mov	r0,sp
      000DE1 18               [12] 3628 	dec	r0
      000DE2 18               [12] 3629 	dec	r0
      000DE3 74 A2            [12] 3630 	mov	a,#0xA2
      000DE5 26               [12] 3631 	add	a,@r0
      000DE6 FD               [12] 3632 	mov	r5,a
      000DE7 E4               [12] 3633 	clr	a
      000DE8 08               [12] 3634 	inc	r0
      000DE9 36               [12] 3635 	addc	a,@r0
      000DEA FE               [12] 3636 	mov	r6,a
      000DEB 08               [12] 3637 	inc	r0
      000DEC 86 07            [24] 3638 	mov	ar7,@r0
      000DEE 8D 82            [24] 3639 	mov	dpl,r5
      000DF0 8E 83            [24] 3640 	mov	dph,r6
      000DF2 8F F0            [24] 3641 	mov	b,r7
      000DF4 12r00r00         [24] 3642 	lcall	__gptrget
      000DF7 FB               [12] 3643 	mov	r3,a
      000DF8 A3               [24] 3644 	inc	dptr
      000DF9 12r00r00         [24] 3645 	lcall	__gptrget
      000DFC FC               [12] 3646 	mov	r4,a
      000DFD 0B               [12] 3647 	inc	r3
      000DFE BB 00 01         [24] 3648 	cjne	r3,#0x00,00103$
      000E01 0C               [12] 3649 	inc	r4
      000E02                       3650 00103$:
      000E02 8D 82            [24] 3651 	mov	dpl,r5
      000E04 8E 83            [24] 3652 	mov	dph,r6
      000E06 8F F0            [24] 3653 	mov	b,r7
      000E08 EB               [12] 3654 	mov	a,r3
      000E09 12r00r00         [24] 3655 	lcall	__gptrput
      000E0C A3               [24] 3656 	inc	dptr
      000E0D EC               [12] 3657 	mov	a,r4
      000E0E 12r00r00         [24] 3658 	lcall	__gptrput
                                   3659 ;	../contiki-sensinode/core/net/rime/rudolph1.c:328: c->send_interval = send_interval;
      000E11 A8 81            [24] 3660 	mov	r0,sp
      000E13 18               [12] 3661 	dec	r0
      000E14 18               [12] 3662 	dec	r0
      000E15 74 A0            [12] 3663 	mov	a,#0xA0
      000E17 26               [12] 3664 	add	a,@r0
      000E18 FD               [12] 3665 	mov	r5,a
      000E19 E4               [12] 3666 	clr	a
      000E1A 08               [12] 3667 	inc	r0
      000E1B 36               [12] 3668 	addc	a,@r0
      000E1C FE               [12] 3669 	mov	r6,a
      000E1D 08               [12] 3670 	inc	r0
      000E1E 86 07            [24] 3671 	mov	ar7,@r0
      000E20 8D 82            [24] 3672 	mov	dpl,r5
      000E22 8E 83            [24] 3673 	mov	dph,r6
      000E24 8F F0            [24] 3674 	mov	b,r7
      000E26 E5 81            [12] 3675 	mov	a,sp
      000E28 24 FA            [12] 3676 	add	a,#0xfa
      000E2A F8               [12] 3677 	mov	r0,a
      000E2B E6               [12] 3678 	mov	a,@r0
      000E2C 12r00r00         [24] 3679 	lcall	__gptrput
      000E2F A3               [24] 3680 	inc	dptr
      000E30 08               [12] 3681 	inc	r0
      000E31 E6               [12] 3682 	mov	a,@r0
      000E32 12r00r00         [24] 3683 	lcall	__gptrput
                                   3684 ;	../contiki-sensinode/core/net/rime/rudolph1.c:329: ctimer_set(&c->t, send_interval, send_next_packet, c);
      000E35 A8 81            [24] 3685 	mov	r0,sp
      000E37 18               [12] 3686 	dec	r0
      000E38 18               [12] 3687 	dec	r0
      000E39 86 05            [24] 3688 	mov	ar5,@r0
      000E3B 08               [12] 3689 	inc	r0
      000E3C 86 06            [24] 3690 	mov	ar6,@r0
      000E3E 08               [12] 3691 	inc	r0
      000E3F 86 07            [24] 3692 	mov	ar7,@r0
      000E41 A8 81            [24] 3693 	mov	r0,sp
      000E43 18               [12] 3694 	dec	r0
      000E44 18               [12] 3695 	dec	r0
      000E45 74 8B            [12] 3696 	mov	a,#0x8B
      000E47 26               [12] 3697 	add	a,@r0
      000E48 FA               [12] 3698 	mov	r2,a
      000E49 E4               [12] 3699 	clr	a
      000E4A 08               [12] 3700 	inc	r0
      000E4B 36               [12] 3701 	addc	a,@r0
      000E4C FB               [12] 3702 	mov	r3,a
      000E4D 08               [12] 3703 	inc	r0
      000E4E 86 04            [24] 3704 	mov	ar4,@r0
      000E50 C0 05            [24] 3705 	push	ar5
      000E52 C0 06            [24] 3706 	push	ar6
      000E54 C0 07            [24] 3707 	push	ar7
      000E56 74r16            [12] 3708 	mov	a,#_send_next_packet
      000E58 C0 E0            [24] 3709 	push	acc
      000E5A 74s0A            [12] 3710 	mov	a,#(_send_next_packet >> 8)
      000E5C C0 E0            [24] 3711 	push	acc
      000E5E E5 81            [12] 3712 	mov	a,sp
      000E60 24 F5            [12] 3713 	add	a,#0xf5
      000E62 F8               [12] 3714 	mov	r0,a
      000E63 E6               [12] 3715 	mov	a,@r0
      000E64 C0 E0            [24] 3716 	push	acc
      000E66 08               [12] 3717 	inc	r0
      000E67 E6               [12] 3718 	mov	a,@r0
      000E68 C0 E0            [24] 3719 	push	acc
      000E6A 8A 82            [24] 3720 	mov	dpl,r2
      000E6C 8B 83            [24] 3721 	mov	dph,r3
      000E6E 8C F0            [24] 3722 	mov	b,r4
      000E70 12r00r00         [24] 3723 	lcall	_ctimer_set
      000E73 E5 81            [12] 3724 	mov	a,sp
      000E75 24 F9            [12] 3725 	add	a,#0xf9
      000E77 F5 81            [12] 3726 	mov	sp,a
      000E79 15 81            [12] 3727 	dec	sp
      000E7B 15 81            [12] 3728 	dec	sp
      000E7D 15 81            [12] 3729 	dec	sp
      000E7F 22               [24] 3730 	ret
                                   3731 ;------------------------------------------------------------
                                   3732 ;Allocation info for local variables in function 'rudolph1_stop'
                                   3733 ;------------------------------------------------------------
                                   3734 ;c                         Allocated to registers r5 r6 r7 
                                   3735 ;------------------------------------------------------------
                                   3736 ;	../contiki-sensinode/core/net/rime/rudolph1.c:333: rudolph1_stop(struct rudolph1_conn *c)
                                   3737 ;	-----------------------------------------
                                   3738 ;	 function rudolph1_stop
                                   3739 ;	-----------------------------------------
      000E80                       3740 _rudolph1_stop:
      000E80 AD 82            [24] 3741 	mov	r5,dpl
      000E82 AE 83            [24] 3742 	mov	r6,dph
      000E84 AF F0            [24] 3743 	mov	r7,b
                                   3744 ;	../contiki-sensinode/core/net/rime/rudolph1.c:335: ctimer_stop(&c->t);
      000E86 74 8B            [12] 3745 	mov	a,#0x8B
      000E88 2D               [12] 3746 	add	a,r5
      000E89 FD               [12] 3747 	mov	r5,a
      000E8A E4               [12] 3748 	clr	a
      000E8B 3E               [12] 3749 	addc	a,r6
      000E8C FE               [12] 3750 	mov	r6,a
      000E8D 8D 82            [24] 3751 	mov	dpl,r5
      000E8F 8E 83            [24] 3752 	mov	dph,r6
      000E91 8F F0            [24] 3753 	mov	b,r7
      000E93 02r00r00         [24] 3754 	ljmp	_ctimer_stop
                                   3755 	.area CSEG    (CODE)
                                   3756 	.area CONST   (CODE)
      000000                       3757 _ipolite:
      000000r3Cs08                 3758 	.byte _recv_ipolite,(_recv_ipolite >> 8)
      000002r3As08                 3759 	.byte _sent_ipolite,(_sent_ipolite >> 8)
      000004r3Bs08                 3760 	.byte _dropped_ipolite,(_dropped_ipolite >> 8)
      000006                       3761 _trickle:
      000006rFEs07                 3762 	.byte _recv_trickle,(_recv_trickle >> 8)
                                   3763 	.area XINIT   (CODE)
                                   3764 	.area CABS    (ABS,CODE)

                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.4.0 #8981 (Oct 24 2015) (Linux)
                                      4 ; This file was generated Sun Oct 25 01:52:03 2015
                                      5 ;--------------------------------------------------------
                                      6 	.module rudolph2
                                      7 	.optsdcc -mmcs51 --model-large
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _polite_cancel
                                     13 	.globl _polite_send
                                     14 	.globl _polite_close
                                     15 	.globl _polite_open
                                     16 	.globl _packetbuf_hdrreduce
                                     17 	.globl _packetbuf_hdralloc
                                     18 	.globl _packetbuf_set_datalen
                                     19 	.globl _packetbuf_totlen
                                     20 	.globl _packetbuf_hdrptr
                                     21 	.globl _packetbuf_dataptr
                                     22 	.globl _packetbuf_clear
                                     23 	.globl _ctimer_set
                                     24 	.globl _ACTIVE
                                     25 	.globl _TX_BYTE
                                     26 	.globl _RX_BYTE
                                     27 	.globl _ERR
                                     28 	.globl _FE
                                     29 	.globl _SLAVE
                                     30 	.globl _RE
                                     31 	.globl _MODE
                                     32 	.globl _T3OVFIF
                                     33 	.globl _T3CH0IF
                                     34 	.globl _T3CH1IF
                                     35 	.globl _T4OVFIF
                                     36 	.globl _T4CH0IF
                                     37 	.globl _T4CH1IF
                                     38 	.globl _OVFIM
                                     39 	.globl _B_0
                                     40 	.globl _B_1
                                     41 	.globl _B_2
                                     42 	.globl _B_3
                                     43 	.globl _B_4
                                     44 	.globl _B_5
                                     45 	.globl _B_6
                                     46 	.globl _B_7
                                     47 	.globl _P2IF
                                     48 	.globl _UTX0IF
                                     49 	.globl _UTX1IF
                                     50 	.globl _P1IF
                                     51 	.globl _WDTIF
                                     52 	.globl _ACC_0
                                     53 	.globl _ACC_1
                                     54 	.globl _ACC_2
                                     55 	.globl _ACC_3
                                     56 	.globl _ACC_4
                                     57 	.globl _ACC_5
                                     58 	.globl _ACC_6
                                     59 	.globl _ACC_7
                                     60 	.globl _P
                                     61 	.globl _F1
                                     62 	.globl _OV
                                     63 	.globl _RS0
                                     64 	.globl _RS1
                                     65 	.globl _F0
                                     66 	.globl _AC
                                     67 	.globl _CY
                                     68 	.globl _DMAIF
                                     69 	.globl _T1IF
                                     70 	.globl _T2IF
                                     71 	.globl _T3IF
                                     72 	.globl _T4IF
                                     73 	.globl _P0IF
                                     74 	.globl _STIF
                                     75 	.globl _DMAIE
                                     76 	.globl _T1IE
                                     77 	.globl _T2IE
                                     78 	.globl _T3IE
                                     79 	.globl _T4IE
                                     80 	.globl _P0IE
                                     81 	.globl _RFERRIE
                                     82 	.globl _ADCIE
                                     83 	.globl _URX0IE
                                     84 	.globl _URX1IE
                                     85 	.globl _ENCIE
                                     86 	.globl _STIE
                                     87 	.globl _EA
                                     88 	.globl _P2_0
                                     89 	.globl _P2_1
                                     90 	.globl _P2_2
                                     91 	.globl _P2_3
                                     92 	.globl _P2_4
                                     93 	.globl _P2_5
                                     94 	.globl _P2_6
                                     95 	.globl _P2_7
                                     96 	.globl _ENCIF_0
                                     97 	.globl _ENCIF_1
                                     98 	.globl _P1_0
                                     99 	.globl _P1_1
                                    100 	.globl _P1_2
                                    101 	.globl _P1_3
                                    102 	.globl _P1_4
                                    103 	.globl _P1_5
                                    104 	.globl _P1_6
                                    105 	.globl _P1_7
                                    106 	.globl _IT0
                                    107 	.globl _RFERRIF
                                    108 	.globl _IT1
                                    109 	.globl _URX0IF
                                    110 	.globl _ADCIF
                                    111 	.globl _URX1IF
                                    112 	.globl _P0_0
                                    113 	.globl _P0_1
                                    114 	.globl _P0_2
                                    115 	.globl _P0_3
                                    116 	.globl _P0_4
                                    117 	.globl _P0_5
                                    118 	.globl _P0_6
                                    119 	.globl _P0_7
                                    120 	.globl _WDCTL
                                    121 	.globl _U1GCR
                                    122 	.globl _U1UCR
                                    123 	.globl _U1BAUD
                                    124 	.globl _U1DBUF
                                    125 	.globl _U1CSR
                                    126 	.globl _U0GCR
                                    127 	.globl _U0UCR
                                    128 	.globl _U0BAUD
                                    129 	.globl _U0DBUF
                                    130 	.globl _U0CSR
                                    131 	.globl _TIMIF
                                    132 	.globl _T4CC1
                                    133 	.globl _T4CCTL1
                                    134 	.globl _T4CC0
                                    135 	.globl _T4CCTL0
                                    136 	.globl _T4CTL
                                    137 	.globl _T4CNT
                                    138 	.globl _T3CC1
                                    139 	.globl _T3CCTL1
                                    140 	.globl _T3CC0
                                    141 	.globl _T3CCTL0
                                    142 	.globl _T3CTL
                                    143 	.globl _T3CNT
                                    144 	.globl _T2MSEL
                                    145 	.globl _T2IRQM
                                    146 	.globl _T2MOVF2
                                    147 	.globl _T2MOVF1
                                    148 	.globl _T2MOVF0
                                    149 	.globl _T2M1
                                    150 	.globl _T2M0
                                    151 	.globl _T2IRQF
                                    152 	.globl _T2EVTCFG
                                    153 	.globl _T2CTRL
                                    154 	.globl _T1STAT
                                    155 	.globl _T1CCTL2
                                    156 	.globl _T1CCTL1
                                    157 	.globl _T1CCTL0
                                    158 	.globl _T1CTL
                                    159 	.globl _T1CNTH
                                    160 	.globl _T1CNTL
                                    161 	.globl _T1CC2H
                                    162 	.globl _T1CC2L
                                    163 	.globl _T1CC1H
                                    164 	.globl _T1CC1L
                                    165 	.globl _T1CC0H
                                    166 	.globl _T1CC0L
                                    167 	.globl _CLKCONSTA
                                    168 	.globl _CLKCONCMD
                                    169 	.globl _SLEEPSTA
                                    170 	.globl _SLEEPCMD
                                    171 	.globl _STLOAD
                                    172 	.globl _ST2
                                    173 	.globl _ST1
                                    174 	.globl _ST0
                                    175 	.globl _RFERRF
                                    176 	.globl _RFIRQF0
                                    177 	.globl _RFST
                                    178 	.globl _RFD
                                    179 	.globl _RFIRQF1
                                    180 	.globl _PSBANK
                                    181 	.globl _FMAP
                                    182 	.globl _MEMCTR
                                    183 	.globl __XPAGE
                                    184 	.globl _MPAGE
                                    185 	.globl _PMUX
                                    186 	.globl _P2DIR
                                    187 	.globl _P1DIR
                                    188 	.globl _P0DIR
                                    189 	.globl _P2INP
                                    190 	.globl _P1INP
                                    191 	.globl _P2SEL
                                    192 	.globl _P1SEL
                                    193 	.globl _P0SEL
                                    194 	.globl _APCFG
                                    195 	.globl _PERCFG
                                    196 	.globl _P0INP
                                    197 	.globl _P2IEN
                                    198 	.globl _P1IEN
                                    199 	.globl _P0IEN
                                    200 	.globl _PICTL
                                    201 	.globl _P2IFG
                                    202 	.globl _P1IFG
                                    203 	.globl _P0IFG
                                    204 	.globl _DMAREQ
                                    205 	.globl _DMAARM
                                    206 	.globl _DMA0CFGH
                                    207 	.globl _DMA0CFGL
                                    208 	.globl _DMA1CFGH
                                    209 	.globl _DMA1CFGL
                                    210 	.globl _DMAIRQ
                                    211 	.globl _ENCCS
                                    212 	.globl _ENCDO
                                    213 	.globl _ENCDI
                                    214 	.globl _RNDH
                                    215 	.globl _RNDL
                                    216 	.globl _ADCH
                                    217 	.globl _ADCL
                                    218 	.globl _ADCCON3
                                    219 	.globl _ADCCON2
                                    220 	.globl _ADCCON1
                                    221 	.globl _B
                                    222 	.globl _IRCON2
                                    223 	.globl _ACC
                                    224 	.globl _PSW
                                    225 	.globl _IRCON
                                    226 	.globl _IP1
                                    227 	.globl _IEN1
                                    228 	.globl _IP0
                                    229 	.globl _IEN0
                                    230 	.globl _P2
                                    231 	.globl _S1CON
                                    232 	.globl _IEN2
                                    233 	.globl _S0CON
                                    234 	.globl _DPS
                                    235 	.globl _P1
                                    236 	.globl _TCON
                                    237 	.globl _PCON
                                    238 	.globl _DPH1
                                    239 	.globl _DPL1
                                    240 	.globl _DPH0
                                    241 	.globl _DPL0
                                    242 	.globl _SP
                                    243 	.globl _P0
                                    244 	.globl _X_IEEE_ADDR
                                    245 	.globl _X_INFOPAGE
                                    246 	.globl _X_P2DIR
                                    247 	.globl _X_P1DIR
                                    248 	.globl _X_P0DIR
                                    249 	.globl _X_U1GCR
                                    250 	.globl _X_U1UCR
                                    251 	.globl _X_U1BAUD
                                    252 	.globl _X_U1DBUF
                                    253 	.globl _X_U1CSR
                                    254 	.globl _X_P2INP
                                    255 	.globl _X_P1INP
                                    256 	.globl _X_P2SEL
                                    257 	.globl _X_P1SEL
                                    258 	.globl _X_P0SEL
                                    259 	.globl _X_APCFG
                                    260 	.globl _X_PERCFG
                                    261 	.globl _X_T4CC1
                                    262 	.globl _X_T4CCTL1
                                    263 	.globl _X_T4CC0
                                    264 	.globl _X_T4CCTL0
                                    265 	.globl _X_T4CTL
                                    266 	.globl _X_T4CNT
                                    267 	.globl _X_RFIRQF0
                                    268 	.globl _X_T1CCTL2
                                    269 	.globl _X_T1CCTL1
                                    270 	.globl _X_T1CCTL0
                                    271 	.globl _X_T1CTL
                                    272 	.globl _X_T1CNTH
                                    273 	.globl _X_T1CNTL
                                    274 	.globl _X_RFST
                                    275 	.globl _X_T1CC2H
                                    276 	.globl _X_T1CC2L
                                    277 	.globl _X_T1CC1H
                                    278 	.globl _X_T1CC1L
                                    279 	.globl _X_T1CC0H
                                    280 	.globl _X_T1CC0L
                                    281 	.globl _X_RFD
                                    282 	.globl _X_TIMIF
                                    283 	.globl _X_DMAREQ
                                    284 	.globl _X_DMAARM
                                    285 	.globl _X_DMA0CFGH
                                    286 	.globl _X_DMA0CFGL
                                    287 	.globl _X_DMA1CFGH
                                    288 	.globl _X_DMA1CFGL
                                    289 	.globl _X_DMAIRQ
                                    290 	.globl _X_T3CC1
                                    291 	.globl _X_T3CCTL1
                                    292 	.globl _X_T3CC0
                                    293 	.globl _X_T3CCTL0
                                    294 	.globl _X_T3CTL
                                    295 	.globl _X_T3CNT
                                    296 	.globl _X_WDCTL
                                    297 	.globl _X_MEMCTR
                                    298 	.globl _X_CLKCONCMD
                                    299 	.globl _X_U0GCR
                                    300 	.globl _X_U0UCR
                                    301 	.globl _X_T2MSEL
                                    302 	.globl _X_U0BAUD
                                    303 	.globl _X_U0DBUF
                                    304 	.globl _X_RFERRF
                                    305 	.globl _X_SLEEPCMD
                                    306 	.globl _X_RNDH
                                    307 	.globl _X_RNDL
                                    308 	.globl _X_ADCH
                                    309 	.globl _X_ADCL
                                    310 	.globl _X_ADCCON3
                                    311 	.globl _X_ADCCON2
                                    312 	.globl _X_ADCCON1
                                    313 	.globl _X_ENCCS
                                    314 	.globl _X_ENCDO
                                    315 	.globl _X_ENCDI
                                    316 	.globl _X_T1STAT
                                    317 	.globl _X_PMUX
                                    318 	.globl _X_STLOAD
                                    319 	.globl _X_P2IEN
                                    320 	.globl _X_P0IEN
                                    321 	.globl _X_T2IRQM
                                    322 	.globl _X_T2MOVF2
                                    323 	.globl _X_T2MOVF1
                                    324 	.globl _X_T2MOVF0
                                    325 	.globl _X_T2M1
                                    326 	.globl _X_T2M0
                                    327 	.globl _X_T2IRQF
                                    328 	.globl _X_P2
                                    329 	.globl _X_PSBANK
                                    330 	.globl _X_FMAP
                                    331 	.globl _X_CLKCONSTA
                                    332 	.globl _X_SLEEPSTA
                                    333 	.globl _X_T2EVTCFG
                                    334 	.globl _X_ST2
                                    335 	.globl _X_ST1
                                    336 	.globl _X_ST0
                                    337 	.globl _X_T2CTRL
                                    338 	.globl _X__XPAGE
                                    339 	.globl _X_MPAGE
                                    340 	.globl _X_RFIRQF1
                                    341 	.globl _X_P1
                                    342 	.globl _X_P0INP
                                    343 	.globl _X_P1IEN
                                    344 	.globl _X_PICTL
                                    345 	.globl _X_P2IFG
                                    346 	.globl _X_P1IFG
                                    347 	.globl _X_P0IFG
                                    348 	.globl _X_U0CSR
                                    349 	.globl _X_P0
                                    350 	.globl _USBF5
                                    351 	.globl _USBF4
                                    352 	.globl _USBF3
                                    353 	.globl _USBF2
                                    354 	.globl _USBF1
                                    355 	.globl _USBF0
                                    356 	.globl _USBCNTH
                                    357 	.globl _USBCNTL
                                    358 	.globl _USBCNT0
                                    359 	.globl _USBCSOH
                                    360 	.globl _USBCSOL
                                    361 	.globl _USBMAXO
                                    362 	.globl _USBCSIH
                                    363 	.globl _USBCSIL
                                    364 	.globl _USBCS0
                                    365 	.globl _USBMAXI
                                    366 	.globl _USBCTRL
                                    367 	.globl _USBINDEX
                                    368 	.globl _USBFRMH
                                    369 	.globl _USBFRML
                                    370 	.globl _USBCIE
                                    371 	.globl _USBOIE
                                    372 	.globl _USBIIE
                                    373 	.globl _USBCIF
                                    374 	.globl _USBOIF
                                    375 	.globl _USBIIF
                                    376 	.globl _USBPOW
                                    377 	.globl _USBADDR
                                    378 	.globl _CSPT
                                    379 	.globl _CSPZ
                                    380 	.globl _CSPY
                                    381 	.globl _CSPX
                                    382 	.globl _CSPSTAT
                                    383 	.globl _CSPCTRL
                                    384 	.globl _CSPPROG23
                                    385 	.globl _CSPPROG22
                                    386 	.globl _CSPPROG21
                                    387 	.globl _CSPPROG20
                                    388 	.globl _CSPPROG19
                                    389 	.globl _CSPPROG18
                                    390 	.globl _CSPPROG17
                                    391 	.globl _CSPPROG16
                                    392 	.globl _CSPPROG15
                                    393 	.globl _CSPPROG14
                                    394 	.globl _CSPPROG13
                                    395 	.globl _CSPPROG12
                                    396 	.globl _CSPPROG11
                                    397 	.globl _CSPPROG10
                                    398 	.globl _CSPPROG9
                                    399 	.globl _CSPPROG8
                                    400 	.globl _CSPPROG7
                                    401 	.globl _CSPPROG6
                                    402 	.globl _CSPPROG5
                                    403 	.globl _CSPPROG4
                                    404 	.globl _CSPPROG3
                                    405 	.globl _CSPPROG2
                                    406 	.globl _CSPPROG1
                                    407 	.globl _CSPPROG0
                                    408 	.globl _RFC_OBS_CTRL2
                                    409 	.globl _RFC_OBS_CTRL1
                                    410 	.globl _RFC_OBS_CTRL0
                                    411 	.globl _TXFILTCFG
                                    412 	.globl _PTEST1
                                    413 	.globl _PTEST0
                                    414 	.globl _ATEST
                                    415 	.globl _DACTEST2
                                    416 	.globl _DACTEST1
                                    417 	.globl _DACTEST0
                                    418 	.globl _MDMTEST1
                                    419 	.globl _MDMTEST0
                                    420 	.globl _ADCTEST2
                                    421 	.globl _ADCTEST1
                                    422 	.globl _ADCTEST0
                                    423 	.globl _AGCCTRL3
                                    424 	.globl _AGCCTRL2
                                    425 	.globl _AGCCTRL1
                                    426 	.globl _AGCCTRL0
                                    427 	.globl _FSCAL3
                                    428 	.globl _FSCAL2
                                    429 	.globl _FSCAL1
                                    430 	.globl _FSCAL0
                                    431 	.globl _FSCTRL
                                    432 	.globl _RXCTRL
                                    433 	.globl _FREQEST
                                    434 	.globl _MDMCTRL1
                                    435 	.globl _MDMCTRL0
                                    436 	.globl _RFRND
                                    437 	.globl _RFERRM
                                    438 	.globl _RFIRQM1
                                    439 	.globl _RFIRQM0
                                    440 	.globl _TXLAST_PTR
                                    441 	.globl _TXFIRST_PTR
                                    442 	.globl _RXP1_PTR
                                    443 	.globl _RXLAST_PTR
                                    444 	.globl _RXFIRST_PTR
                                    445 	.globl _TXFIFOCNT
                                    446 	.globl _RXFIFOCNT
                                    447 	.globl _RXFIRST
                                    448 	.globl _RSSISTAT
                                    449 	.globl _RSSI
                                    450 	.globl _CCACTRL1
                                    451 	.globl _CCACTRL0
                                    452 	.globl _FSMCTRL
                                    453 	.globl _FIFOPCTRL
                                    454 	.globl _FSMSTAT1
                                    455 	.globl _FSMSTAT0
                                    456 	.globl _TXCTRL
                                    457 	.globl _TXPOWER
                                    458 	.globl _FREQCTRL
                                    459 	.globl _FREQTUNE
                                    460 	.globl _RXMASKCLR
                                    461 	.globl _RXMASKSET
                                    462 	.globl _RXENABLE
                                    463 	.globl _FRMCTRL1
                                    464 	.globl _FRMCTRL0
                                    465 	.globl _SRCEXTEN2
                                    466 	.globl _SRCEXTEN1
                                    467 	.globl _SRCEXTEN0
                                    468 	.globl _SRCSHORTEN2
                                    469 	.globl _SRCSHORTEN1
                                    470 	.globl _SRCSHORTEN0
                                    471 	.globl _SRCMATCH
                                    472 	.globl _FRMFILT1
                                    473 	.globl _FRMFILT0
                                    474 	.globl _SHORT_ADDR1
                                    475 	.globl _SHORT_ADDR0
                                    476 	.globl _PAN_ID1
                                    477 	.globl _PAN_ID0
                                    478 	.globl _EXT_ADDR7
                                    479 	.globl _EXT_ADDR6
                                    480 	.globl _EXT_ADDR5
                                    481 	.globl _EXT_ADDR4
                                    482 	.globl _EXT_ADDR3
                                    483 	.globl _EXT_ADDR2
                                    484 	.globl _EXT_ADDR1
                                    485 	.globl _EXT_ADDR0
                                    486 	.globl _SRCSHORTPENDEN2
                                    487 	.globl _SRCSHORTPENDEN1
                                    488 	.globl _SRCSHORTPENDEN0
                                    489 	.globl _SRCEXTPENDEN2
                                    490 	.globl _SRCEXTPENDEN1
                                    491 	.globl _SRCEXTPENDEN0
                                    492 	.globl _SRCRESINDEX
                                    493 	.globl _SRCRESMASK2
                                    494 	.globl _SRCRESMASK1
                                    495 	.globl _SRCRESMASK0
                                    496 	.globl _SRC_ADDR_TABLE
                                    497 	.globl _TXFIFO
                                    498 	.globl _RXFIFO
                                    499 	.globl _RFCORE_RAM
                                    500 	.globl _CMPCTL
                                    501 	.globl _OPAMPS
                                    502 	.globl _OPAMPC
                                    503 	.globl _STCV2
                                    504 	.globl _STCV1
                                    505 	.globl _STCV0
                                    506 	.globl _STCS
                                    507 	.globl _STCC
                                    508 	.globl _T1CC4H
                                    509 	.globl _T1CC4L
                                    510 	.globl _T1CC3H
                                    511 	.globl _T1CC3L
                                    512 	.globl _XX_T1CC2H
                                    513 	.globl _XX_T1CC2L
                                    514 	.globl _XX_T1CC1H
                                    515 	.globl _XX_T1CC1L
                                    516 	.globl _XX_T1CC0H
                                    517 	.globl _XX_T1CC0L
                                    518 	.globl _T1CCTL4
                                    519 	.globl _T1CCTL3
                                    520 	.globl _XX_T1CCTL2
                                    521 	.globl _XX_T1CCTL1
                                    522 	.globl _XX_T1CCTL0
                                    523 	.globl _CLD
                                    524 	.globl _IRCTL
                                    525 	.globl _CHIPINFO1
                                    526 	.globl _CHIPINFO0
                                    527 	.globl _FWDATA
                                    528 	.globl _FADDRH
                                    529 	.globl _FADDRL
                                    530 	.globl _FCTL
                                    531 	.globl _IVCTRL
                                    532 	.globl _BATTMON
                                    533 	.globl _SRCRC
                                    534 	.globl _DBGDATA
                                    535 	.globl _TESTREG0
                                    536 	.globl _CHIPID
                                    537 	.globl _CHVER
                                    538 	.globl _OBSSEL5
                                    539 	.globl _OBSSEL4
                                    540 	.globl _OBSSEL3
                                    541 	.globl _OBSSEL2
                                    542 	.globl _OBSSEL1
                                    543 	.globl _OBSSEL0
                                    544 	.globl _I2CIO
                                    545 	.globl _I2CWC
                                    546 	.globl _I2CADDR
                                    547 	.globl _I2CDATA
                                    548 	.globl _I2CSTAT
                                    549 	.globl _I2CCFG
                                    550 	.globl _OPAMPMC
                                    551 	.globl _MONMUX
                                    552 	.globl _rudolph2_open
                                    553 	.globl _rudolph2_close
                                    554 	.globl _rudolph2_send
                                    555 	.globl _rudolph2_stop
                                    556 ;--------------------------------------------------------
                                    557 ; special function registers
                                    558 ;--------------------------------------------------------
                                    559 	.area RSEG    (ABS,DATA)
      000000                        560 	.org 0x0000
                           000080   561 _P0	=	0x0080
                           000081   562 _SP	=	0x0081
                           000082   563 _DPL0	=	0x0082
                           000083   564 _DPH0	=	0x0083
                           000084   565 _DPL1	=	0x0084
                           000085   566 _DPH1	=	0x0085
                           000087   567 _PCON	=	0x0087
                           000088   568 _TCON	=	0x0088
                           000090   569 _P1	=	0x0090
                           000092   570 _DPS	=	0x0092
                           000098   571 _S0CON	=	0x0098
                           00009A   572 _IEN2	=	0x009a
                           00009B   573 _S1CON	=	0x009b
                           0000A0   574 _P2	=	0x00a0
                           0000A8   575 _IEN0	=	0x00a8
                           0000A9   576 _IP0	=	0x00a9
                           0000B8   577 _IEN1	=	0x00b8
                           0000B9   578 _IP1	=	0x00b9
                           0000C0   579 _IRCON	=	0x00c0
                           0000D0   580 _PSW	=	0x00d0
                           0000E0   581 _ACC	=	0x00e0
                           0000E8   582 _IRCON2	=	0x00e8
                           0000F0   583 _B	=	0x00f0
                           0000B4   584 _ADCCON1	=	0x00b4
                           0000B5   585 _ADCCON2	=	0x00b5
                           0000B6   586 _ADCCON3	=	0x00b6
                           0000BA   587 _ADCL	=	0x00ba
                           0000BB   588 _ADCH	=	0x00bb
                           0000BC   589 _RNDL	=	0x00bc
                           0000BD   590 _RNDH	=	0x00bd
                           0000B1   591 _ENCDI	=	0x00b1
                           0000B2   592 _ENCDO	=	0x00b2
                           0000B3   593 _ENCCS	=	0x00b3
                           0000D1   594 _DMAIRQ	=	0x00d1
                           0000D2   595 _DMA1CFGL	=	0x00d2
                           0000D3   596 _DMA1CFGH	=	0x00d3
                           0000D4   597 _DMA0CFGL	=	0x00d4
                           0000D5   598 _DMA0CFGH	=	0x00d5
                           0000D6   599 _DMAARM	=	0x00d6
                           0000D7   600 _DMAREQ	=	0x00d7
                           000089   601 _P0IFG	=	0x0089
                           00008A   602 _P1IFG	=	0x008a
                           00008B   603 _P2IFG	=	0x008b
                           00008C   604 _PICTL	=	0x008c
                           0000AB   605 _P0IEN	=	0x00ab
                           00008D   606 _P1IEN	=	0x008d
                           0000AC   607 _P2IEN	=	0x00ac
                           00008F   608 _P0INP	=	0x008f
                           0000F1   609 _PERCFG	=	0x00f1
                           0000F2   610 _APCFG	=	0x00f2
                           0000F3   611 _P0SEL	=	0x00f3
                           0000F4   612 _P1SEL	=	0x00f4
                           0000F5   613 _P2SEL	=	0x00f5
                           0000F6   614 _P1INP	=	0x00f6
                           0000F7   615 _P2INP	=	0x00f7
                           0000FD   616 _P0DIR	=	0x00fd
                           0000FE   617 _P1DIR	=	0x00fe
                           0000FF   618 _P2DIR	=	0x00ff
                           0000AE   619 _PMUX	=	0x00ae
                           000093   620 _MPAGE	=	0x0093
                           000093   621 __XPAGE	=	0x0093
                           0000C7   622 _MEMCTR	=	0x00c7
                           00009F   623 _FMAP	=	0x009f
                           00009F   624 _PSBANK	=	0x009f
                           000091   625 _RFIRQF1	=	0x0091
                           0000D9   626 _RFD	=	0x00d9
                           0000E1   627 _RFST	=	0x00e1
                           0000E9   628 _RFIRQF0	=	0x00e9
                           0000BF   629 _RFERRF	=	0x00bf
                           000095   630 _ST0	=	0x0095
                           000096   631 _ST1	=	0x0096
                           000097   632 _ST2	=	0x0097
                           0000AD   633 _STLOAD	=	0x00ad
                           0000BE   634 _SLEEPCMD	=	0x00be
                           00009D   635 _SLEEPSTA	=	0x009d
                           0000C6   636 _CLKCONCMD	=	0x00c6
                           00009E   637 _CLKCONSTA	=	0x009e
                           0000DA   638 _T1CC0L	=	0x00da
                           0000DB   639 _T1CC0H	=	0x00db
                           0000DC   640 _T1CC1L	=	0x00dc
                           0000DD   641 _T1CC1H	=	0x00dd
                           0000DE   642 _T1CC2L	=	0x00de
                           0000DF   643 _T1CC2H	=	0x00df
                           0000E2   644 _T1CNTL	=	0x00e2
                           0000E3   645 _T1CNTH	=	0x00e3
                           0000E4   646 _T1CTL	=	0x00e4
                           0000E5   647 _T1CCTL0	=	0x00e5
                           0000E6   648 _T1CCTL1	=	0x00e6
                           0000E7   649 _T1CCTL2	=	0x00e7
                           0000AF   650 _T1STAT	=	0x00af
                           000094   651 _T2CTRL	=	0x0094
                           00009C   652 _T2EVTCFG	=	0x009c
                           0000A1   653 _T2IRQF	=	0x00a1
                           0000A2   654 _T2M0	=	0x00a2
                           0000A3   655 _T2M1	=	0x00a3
                           0000A4   656 _T2MOVF0	=	0x00a4
                           0000A5   657 _T2MOVF1	=	0x00a5
                           0000A6   658 _T2MOVF2	=	0x00a6
                           0000A7   659 _T2IRQM	=	0x00a7
                           0000C3   660 _T2MSEL	=	0x00c3
                           0000CA   661 _T3CNT	=	0x00ca
                           0000CB   662 _T3CTL	=	0x00cb
                           0000CC   663 _T3CCTL0	=	0x00cc
                           0000CD   664 _T3CC0	=	0x00cd
                           0000CE   665 _T3CCTL1	=	0x00ce
                           0000CF   666 _T3CC1	=	0x00cf
                           0000EA   667 _T4CNT	=	0x00ea
                           0000EB   668 _T4CTL	=	0x00eb
                           0000EC   669 _T4CCTL0	=	0x00ec
                           0000ED   670 _T4CC0	=	0x00ed
                           0000EE   671 _T4CCTL1	=	0x00ee
                           0000EF   672 _T4CC1	=	0x00ef
                           0000D8   673 _TIMIF	=	0x00d8
                           000086   674 _U0CSR	=	0x0086
                           0000C1   675 _U0DBUF	=	0x00c1
                           0000C2   676 _U0BAUD	=	0x00c2
                           0000C4   677 _U0UCR	=	0x00c4
                           0000C5   678 _U0GCR	=	0x00c5
                           0000F8   679 _U1CSR	=	0x00f8
                           0000F9   680 _U1DBUF	=	0x00f9
                           0000FA   681 _U1BAUD	=	0x00fa
                           0000FB   682 _U1UCR	=	0x00fb
                           0000FC   683 _U1GCR	=	0x00fc
                           0000C9   684 _WDCTL	=	0x00c9
                                    685 ;--------------------------------------------------------
                                    686 ; special function bits
                                    687 ;--------------------------------------------------------
                                    688 	.area RSEG    (ABS,DATA)
      000000                        689 	.org 0x0000
                           000087   690 _P0_7	=	0x0087
                           000086   691 _P0_6	=	0x0086
                           000085   692 _P0_5	=	0x0085
                           000084   693 _P0_4	=	0x0084
                           000083   694 _P0_3	=	0x0083
                           000082   695 _P0_2	=	0x0082
                           000081   696 _P0_1	=	0x0081
                           000080   697 _P0_0	=	0x0080
                           00008F   698 _URX1IF	=	0x008f
                           00008D   699 _ADCIF	=	0x008d
                           00008B   700 _URX0IF	=	0x008b
                           00008A   701 _IT1	=	0x008a
                           000089   702 _RFERRIF	=	0x0089
                           000088   703 _IT0	=	0x0088
                           000097   704 _P1_7	=	0x0097
                           000096   705 _P1_6	=	0x0096
                           000095   706 _P1_5	=	0x0095
                           000094   707 _P1_4	=	0x0094
                           000093   708 _P1_3	=	0x0093
                           000092   709 _P1_2	=	0x0092
                           000091   710 _P1_1	=	0x0091
                           000090   711 _P1_0	=	0x0090
                           000099   712 _ENCIF_1	=	0x0099
                           000098   713 _ENCIF_0	=	0x0098
                           0000A7   714 _P2_7	=	0x00a7
                           0000A6   715 _P2_6	=	0x00a6
                           0000A5   716 _P2_5	=	0x00a5
                           0000A4   717 _P2_4	=	0x00a4
                           0000A3   718 _P2_3	=	0x00a3
                           0000A2   719 _P2_2	=	0x00a2
                           0000A1   720 _P2_1	=	0x00a1
                           0000A0   721 _P2_0	=	0x00a0
                           0000AF   722 _EA	=	0x00af
                           0000AD   723 _STIE	=	0x00ad
                           0000AC   724 _ENCIE	=	0x00ac
                           0000AB   725 _URX1IE	=	0x00ab
                           0000AA   726 _URX0IE	=	0x00aa
                           0000A9   727 _ADCIE	=	0x00a9
                           0000A8   728 _RFERRIE	=	0x00a8
                           0000BD   729 _P0IE	=	0x00bd
                           0000BC   730 _T4IE	=	0x00bc
                           0000BB   731 _T3IE	=	0x00bb
                           0000BA   732 _T2IE	=	0x00ba
                           0000B9   733 _T1IE	=	0x00b9
                           0000B8   734 _DMAIE	=	0x00b8
                           0000C7   735 _STIF	=	0x00c7
                           0000C5   736 _P0IF	=	0x00c5
                           0000C4   737 _T4IF	=	0x00c4
                           0000C3   738 _T3IF	=	0x00c3
                           0000C2   739 _T2IF	=	0x00c2
                           0000C1   740 _T1IF	=	0x00c1
                           0000C0   741 _DMAIF	=	0x00c0
                           0000D7   742 _CY	=	0x00d7
                           0000D6   743 _AC	=	0x00d6
                           0000D5   744 _F0	=	0x00d5
                           0000D4   745 _RS1	=	0x00d4
                           0000D3   746 _RS0	=	0x00d3
                           0000D2   747 _OV	=	0x00d2
                           0000D1   748 _F1	=	0x00d1
                           0000D0   749 _P	=	0x00d0
                           0000E7   750 _ACC_7	=	0x00e7
                           0000E6   751 _ACC_6	=	0x00e6
                           0000E5   752 _ACC_5	=	0x00e5
                           0000E4   753 _ACC_4	=	0x00e4
                           0000E3   754 _ACC_3	=	0x00e3
                           0000E2   755 _ACC_2	=	0x00e2
                           0000E1   756 _ACC_1	=	0x00e1
                           0000E0   757 _ACC_0	=	0x00e0
                           0000EC   758 _WDTIF	=	0x00ec
                           0000EB   759 _P1IF	=	0x00eb
                           0000EA   760 _UTX1IF	=	0x00ea
                           0000E9   761 _UTX0IF	=	0x00e9
                           0000E8   762 _P2IF	=	0x00e8
                           0000F7   763 _B_7	=	0x00f7
                           0000F6   764 _B_6	=	0x00f6
                           0000F5   765 _B_5	=	0x00f5
                           0000F4   766 _B_4	=	0x00f4
                           0000F3   767 _B_3	=	0x00f3
                           0000F2   768 _B_2	=	0x00f2
                           0000F1   769 _B_1	=	0x00f1
                           0000F0   770 _B_0	=	0x00f0
                           0000DE   771 _OVFIM	=	0x00de
                           0000DD   772 _T4CH1IF	=	0x00dd
                           0000DC   773 _T4CH0IF	=	0x00dc
                           0000DB   774 _T4OVFIF	=	0x00db
                           0000DA   775 _T3CH1IF	=	0x00da
                           0000D9   776 _T3CH0IF	=	0x00d9
                           0000D8   777 _T3OVFIF	=	0x00d8
                           0000FF   778 _MODE	=	0x00ff
                           0000FE   779 _RE	=	0x00fe
                           0000FD   780 _SLAVE	=	0x00fd
                           0000FC   781 _FE	=	0x00fc
                           0000FB   782 _ERR	=	0x00fb
                           0000FA   783 _RX_BYTE	=	0x00fa
                           0000F9   784 _TX_BYTE	=	0x00f9
                           0000F8   785 _ACTIVE	=	0x00f8
                                    786 ;--------------------------------------------------------
                                    787 ; overlayable register banks
                                    788 ;--------------------------------------------------------
                                    789 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        790 	.ds 8
                                    791 ;--------------------------------------------------------
                                    792 ; internal ram data
                                    793 ;--------------------------------------------------------
                                    794 	.area DSEG    (DATA)
                                    795 ;--------------------------------------------------------
                                    796 ; overlayable items in internal ram 
                                    797 ;--------------------------------------------------------
                                    798 ;--------------------------------------------------------
                                    799 ; indirectly addressable internal ram data
                                    800 ;--------------------------------------------------------
                                    801 	.area ISEG    (DATA)
                                    802 ;--------------------------------------------------------
                                    803 ; absolute internal ram data
                                    804 ;--------------------------------------------------------
                                    805 	.area IABS    (ABS,DATA)
                                    806 	.area IABS    (ABS,DATA)
                                    807 ;--------------------------------------------------------
                                    808 ; bit data
                                    809 ;--------------------------------------------------------
                                    810 	.area BSEG    (BIT)
                                    811 ;--------------------------------------------------------
                                    812 ; paged external ram data
                                    813 ;--------------------------------------------------------
                                    814 	.area PSEG    (PAG,XDATA)
                                    815 ;--------------------------------------------------------
                                    816 ; external ram data
                                    817 ;--------------------------------------------------------
                                    818 	.area XSEG    (XDATA)
                           0061A6   819 _MONMUX	=	0x61a6
                           0061A6   820 _OPAMPMC	=	0x61a6
                           006230   821 _I2CCFG	=	0x6230
                           006231   822 _I2CSTAT	=	0x6231
                           006232   823 _I2CDATA	=	0x6232
                           006233   824 _I2CADDR	=	0x6233
                           006234   825 _I2CWC	=	0x6234
                           006235   826 _I2CIO	=	0x6235
                           006243   827 _OBSSEL0	=	0x6243
                           006244   828 _OBSSEL1	=	0x6244
                           006245   829 _OBSSEL2	=	0x6245
                           006246   830 _OBSSEL3	=	0x6246
                           006247   831 _OBSSEL4	=	0x6247
                           006248   832 _OBSSEL5	=	0x6248
                           006249   833 _CHVER	=	0x6249
                           00624A   834 _CHIPID	=	0x624a
                           00624B   835 _TESTREG0	=	0x624b
                           006260   836 _DBGDATA	=	0x6260
                           006262   837 _SRCRC	=	0x6262
                           006264   838 _BATTMON	=	0x6264
                           006265   839 _IVCTRL	=	0x6265
                           006270   840 _FCTL	=	0x6270
                           006271   841 _FADDRL	=	0x6271
                           006272   842 _FADDRH	=	0x6272
                           006273   843 _FWDATA	=	0x6273
                           006276   844 _CHIPINFO0	=	0x6276
                           006277   845 _CHIPINFO1	=	0x6277
                           006281   846 _IRCTL	=	0x6281
                           006290   847 _CLD	=	0x6290
                           0062A0   848 _XX_T1CCTL0	=	0x62a0
                           0062A1   849 _XX_T1CCTL1	=	0x62a1
                           0062A2   850 _XX_T1CCTL2	=	0x62a2
                           0062A3   851 _T1CCTL3	=	0x62a3
                           0062A4   852 _T1CCTL4	=	0x62a4
                           0062A6   853 _XX_T1CC0L	=	0x62a6
                           0062A7   854 _XX_T1CC0H	=	0x62a7
                           0062A8   855 _XX_T1CC1L	=	0x62a8
                           0062A9   856 _XX_T1CC1H	=	0x62a9
                           0062AA   857 _XX_T1CC2L	=	0x62aa
                           0062AB   858 _XX_T1CC2H	=	0x62ab
                           0062AC   859 _T1CC3L	=	0x62ac
                           0062AD   860 _T1CC3H	=	0x62ad
                           0062AE   861 _T1CC4L	=	0x62ae
                           0062AF   862 _T1CC4H	=	0x62af
                           0062B0   863 _STCC	=	0x62b0
                           0062B1   864 _STCS	=	0x62b1
                           0062B2   865 _STCV0	=	0x62b2
                           0062B3   866 _STCV1	=	0x62b3
                           0062B4   867 _STCV2	=	0x62b4
                           0062C0   868 _OPAMPC	=	0x62c0
                           0062C1   869 _OPAMPS	=	0x62c1
                           0062D0   870 _CMPCTL	=	0x62d0
                           006000   871 _RFCORE_RAM	=	0x6000
                           006000   872 _RXFIFO	=	0x6000
                           006080   873 _TXFIFO	=	0x6080
                           006100   874 _SRC_ADDR_TABLE	=	0x6100
                           006160   875 _SRCRESMASK0	=	0x6160
                           006161   876 _SRCRESMASK1	=	0x6161
                           006162   877 _SRCRESMASK2	=	0x6162
                           006163   878 _SRCRESINDEX	=	0x6163
                           006164   879 _SRCEXTPENDEN0	=	0x6164
                           006165   880 _SRCEXTPENDEN1	=	0x6165
                           006166   881 _SRCEXTPENDEN2	=	0x6166
                           006167   882 _SRCSHORTPENDEN0	=	0x6167
                           006168   883 _SRCSHORTPENDEN1	=	0x6168
                           006169   884 _SRCSHORTPENDEN2	=	0x6169
                           00616A   885 _EXT_ADDR0	=	0x616a
                           00616B   886 _EXT_ADDR1	=	0x616b
                           00616C   887 _EXT_ADDR2	=	0x616c
                           00616D   888 _EXT_ADDR3	=	0x616d
                           00616E   889 _EXT_ADDR4	=	0x616e
                           00616F   890 _EXT_ADDR5	=	0x616f
                           006170   891 _EXT_ADDR6	=	0x6170
                           006171   892 _EXT_ADDR7	=	0x6171
                           006172   893 _PAN_ID0	=	0x6172
                           006173   894 _PAN_ID1	=	0x6173
                           006174   895 _SHORT_ADDR0	=	0x6174
                           006175   896 _SHORT_ADDR1	=	0x6175
                           006180   897 _FRMFILT0	=	0x6180
                           006181   898 _FRMFILT1	=	0x6181
                           006182   899 _SRCMATCH	=	0x6182
                           006183   900 _SRCSHORTEN0	=	0x6183
                           006184   901 _SRCSHORTEN1	=	0x6184
                           006185   902 _SRCSHORTEN2	=	0x6185
                           006186   903 _SRCEXTEN0	=	0x6186
                           006187   904 _SRCEXTEN1	=	0x6187
                           006188   905 _SRCEXTEN2	=	0x6188
                           006189   906 _FRMCTRL0	=	0x6189
                           00618A   907 _FRMCTRL1	=	0x618a
                           00618B   908 _RXENABLE	=	0x618b
                           00618C   909 _RXMASKSET	=	0x618c
                           00618D   910 _RXMASKCLR	=	0x618d
                           00618E   911 _FREQTUNE	=	0x618e
                           00618F   912 _FREQCTRL	=	0x618f
                           006190   913 _TXPOWER	=	0x6190
                           006191   914 _TXCTRL	=	0x6191
                           006192   915 _FSMSTAT0	=	0x6192
                           006193   916 _FSMSTAT1	=	0x6193
                           006194   917 _FIFOPCTRL	=	0x6194
                           006195   918 _FSMCTRL	=	0x6195
                           006196   919 _CCACTRL0	=	0x6196
                           006197   920 _CCACTRL1	=	0x6197
                           006198   921 _RSSI	=	0x6198
                           006199   922 _RSSISTAT	=	0x6199
                           00619A   923 _RXFIRST	=	0x619a
                           00619B   924 _RXFIFOCNT	=	0x619b
                           00619C   925 _TXFIFOCNT	=	0x619c
                           00619D   926 _RXFIRST_PTR	=	0x619d
                           00619E   927 _RXLAST_PTR	=	0x619e
                           00619F   928 _RXP1_PTR	=	0x619f
                           0061A1   929 _TXFIRST_PTR	=	0x61a1
                           0061A2   930 _TXLAST_PTR	=	0x61a2
                           0061A3   931 _RFIRQM0	=	0x61a3
                           0061A4   932 _RFIRQM1	=	0x61a4
                           0061A5   933 _RFERRM	=	0x61a5
                           0061A7   934 _RFRND	=	0x61a7
                           0061A8   935 _MDMCTRL0	=	0x61a8
                           0061A9   936 _MDMCTRL1	=	0x61a9
                           0061AA   937 _FREQEST	=	0x61aa
                           0061AB   938 _RXCTRL	=	0x61ab
                           0061AC   939 _FSCTRL	=	0x61ac
                           0061AD   940 _FSCAL0	=	0x61ad
                           0061AE   941 _FSCAL1	=	0x61ae
                           0061AF   942 _FSCAL2	=	0x61af
                           0061B0   943 _FSCAL3	=	0x61b0
                           0061B1   944 _AGCCTRL0	=	0x61b1
                           0061B2   945 _AGCCTRL1	=	0x61b2
                           0061B3   946 _AGCCTRL2	=	0x61b3
                           0061B4   947 _AGCCTRL3	=	0x61b4
                           0061B5   948 _ADCTEST0	=	0x61b5
                           0061B6   949 _ADCTEST1	=	0x61b6
                           0061B7   950 _ADCTEST2	=	0x61b7
                           0061B8   951 _MDMTEST0	=	0x61b8
                           0061B9   952 _MDMTEST1	=	0x61b9
                           0061BA   953 _DACTEST0	=	0x61ba
                           0061BB   954 _DACTEST1	=	0x61bb
                           0061BC   955 _DACTEST2	=	0x61bc
                           0061BD   956 _ATEST	=	0x61bd
                           0061BE   957 _PTEST0	=	0x61be
                           0061BF   958 _PTEST1	=	0x61bf
                           0061FA   959 _TXFILTCFG	=	0x61fa
                           0061EB   960 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   961 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   962 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   963 _CSPPROG0	=	0x61c0
                           0061C1   964 _CSPPROG1	=	0x61c1
                           0061C2   965 _CSPPROG2	=	0x61c2
                           0061C3   966 _CSPPROG3	=	0x61c3
                           0061C4   967 _CSPPROG4	=	0x61c4
                           0061C5   968 _CSPPROG5	=	0x61c5
                           0061C6   969 _CSPPROG6	=	0x61c6
                           0061C7   970 _CSPPROG7	=	0x61c7
                           0061C8   971 _CSPPROG8	=	0x61c8
                           0061C9   972 _CSPPROG9	=	0x61c9
                           0061CA   973 _CSPPROG10	=	0x61ca
                           0061CB   974 _CSPPROG11	=	0x61cb
                           0061CC   975 _CSPPROG12	=	0x61cc
                           0061CD   976 _CSPPROG13	=	0x61cd
                           0061CE   977 _CSPPROG14	=	0x61ce
                           0061CF   978 _CSPPROG15	=	0x61cf
                           0061D0   979 _CSPPROG16	=	0x61d0
                           0061D1   980 _CSPPROG17	=	0x61d1
                           0061D2   981 _CSPPROG18	=	0x61d2
                           0061D3   982 _CSPPROG19	=	0x61d3
                           0061D4   983 _CSPPROG20	=	0x61d4
                           0061D5   984 _CSPPROG21	=	0x61d5
                           0061D6   985 _CSPPROG22	=	0x61d6
                           0061D7   986 _CSPPROG23	=	0x61d7
                           0061E0   987 _CSPCTRL	=	0x61e0
                           0061E1   988 _CSPSTAT	=	0x61e1
                           0061E2   989 _CSPX	=	0x61e2
                           0061E3   990 _CSPY	=	0x61e3
                           0061E4   991 _CSPZ	=	0x61e4
                           0061E5   992 _CSPT	=	0x61e5
                           006200   993 _USBADDR	=	0x6200
                           006201   994 _USBPOW	=	0x6201
                           006202   995 _USBIIF	=	0x6202
                           006204   996 _USBOIF	=	0x6204
                           006206   997 _USBCIF	=	0x6206
                           006207   998 _USBIIE	=	0x6207
                           006209   999 _USBOIE	=	0x6209
                           00620B  1000 _USBCIE	=	0x620b
                           00620C  1001 _USBFRML	=	0x620c
                           00620D  1002 _USBFRMH	=	0x620d
                           00620E  1003 _USBINDEX	=	0x620e
                           00620F  1004 _USBCTRL	=	0x620f
                           006210  1005 _USBMAXI	=	0x6210
                           006211  1006 _USBCS0	=	0x6211
                           006211  1007 _USBCSIL	=	0x6211
                           006212  1008 _USBCSIH	=	0x6212
                           006213  1009 _USBMAXO	=	0x6213
                           006214  1010 _USBCSOL	=	0x6214
                           006215  1011 _USBCSOH	=	0x6215
                           006216  1012 _USBCNT0	=	0x6216
                           006216  1013 _USBCNTL	=	0x6216
                           006217  1014 _USBCNTH	=	0x6217
                           006220  1015 _USBF0	=	0x6220
                           006222  1016 _USBF1	=	0x6222
                           006224  1017 _USBF2	=	0x6224
                           006226  1018 _USBF3	=	0x6226
                           006228  1019 _USBF4	=	0x6228
                           00622A  1020 _USBF5	=	0x622a
                           007080  1021 _X_P0	=	0x7080
                           007086  1022 _X_U0CSR	=	0x7086
                           007089  1023 _X_P0IFG	=	0x7089
                           00708A  1024 _X_P1IFG	=	0x708a
                           00708B  1025 _X_P2IFG	=	0x708b
                           00708C  1026 _X_PICTL	=	0x708c
                           00708D  1027 _X_P1IEN	=	0x708d
                           00708F  1028 _X_P0INP	=	0x708f
                           007090  1029 _X_P1	=	0x7090
                           007091  1030 _X_RFIRQF1	=	0x7091
                           007093  1031 _X_MPAGE	=	0x7093
                           007093  1032 _X__XPAGE	=	0x7093
                           007094  1033 _X_T2CTRL	=	0x7094
                           007095  1034 _X_ST0	=	0x7095
                           007096  1035 _X_ST1	=	0x7096
                           007097  1036 _X_ST2	=	0x7097
                           00709C  1037 _X_T2EVTCFG	=	0x709c
                           00709D  1038 _X_SLEEPSTA	=	0x709d
                           00709E  1039 _X_CLKCONSTA	=	0x709e
                           00709F  1040 _X_FMAP	=	0x709f
                           00709F  1041 _X_PSBANK	=	0x709f
                           0070A0  1042 _X_P2	=	0x70a0
                           0070A1  1043 _X_T2IRQF	=	0x70a1
                           0070A2  1044 _X_T2M0	=	0x70a2
                           0070A3  1045 _X_T2M1	=	0x70a3
                           0070A4  1046 _X_T2MOVF0	=	0x70a4
                           0070A5  1047 _X_T2MOVF1	=	0x70a5
                           0070A6  1048 _X_T2MOVF2	=	0x70a6
                           0070A7  1049 _X_T2IRQM	=	0x70a7
                           0070AB  1050 _X_P0IEN	=	0x70ab
                           0070AC  1051 _X_P2IEN	=	0x70ac
                           0070AD  1052 _X_STLOAD	=	0x70ad
                           0070AE  1053 _X_PMUX	=	0x70ae
                           0070AF  1054 _X_T1STAT	=	0x70af
                           0070B1  1055 _X_ENCDI	=	0x70b1
                           0070B2  1056 _X_ENCDO	=	0x70b2
                           0070B3  1057 _X_ENCCS	=	0x70b3
                           0070B4  1058 _X_ADCCON1	=	0x70b4
                           0070B5  1059 _X_ADCCON2	=	0x70b5
                           0070B6  1060 _X_ADCCON3	=	0x70b6
                           0070BA  1061 _X_ADCL	=	0x70ba
                           0070BB  1062 _X_ADCH	=	0x70bb
                           0070BC  1063 _X_RNDL	=	0x70bc
                           0070BD  1064 _X_RNDH	=	0x70bd
                           0070BE  1065 _X_SLEEPCMD	=	0x70be
                           0070BF  1066 _X_RFERRF	=	0x70bf
                           0070C1  1067 _X_U0DBUF	=	0x70c1
                           0070C2  1068 _X_U0BAUD	=	0x70c2
                           0070C3  1069 _X_T2MSEL	=	0x70c3
                           0070C4  1070 _X_U0UCR	=	0x70c4
                           0070C5  1071 _X_U0GCR	=	0x70c5
                           0070C6  1072 _X_CLKCONCMD	=	0x70c6
                           0070C7  1073 _X_MEMCTR	=	0x70c7
                           0070C9  1074 _X_WDCTL	=	0x70c9
                           0070CA  1075 _X_T3CNT	=	0x70ca
                           0070CB  1076 _X_T3CTL	=	0x70cb
                           0070CC  1077 _X_T3CCTL0	=	0x70cc
                           0070CD  1078 _X_T3CC0	=	0x70cd
                           0070CE  1079 _X_T3CCTL1	=	0x70ce
                           0070CF  1080 _X_T3CC1	=	0x70cf
                           0070D1  1081 _X_DMAIRQ	=	0x70d1
                           0070D2  1082 _X_DMA1CFGL	=	0x70d2
                           0070D3  1083 _X_DMA1CFGH	=	0x70d3
                           0070D4  1084 _X_DMA0CFGL	=	0x70d4
                           0070D5  1085 _X_DMA0CFGH	=	0x70d5
                           0070D6  1086 _X_DMAARM	=	0x70d6
                           0070D7  1087 _X_DMAREQ	=	0x70d7
                           0070D8  1088 _X_TIMIF	=	0x70d8
                           0070D9  1089 _X_RFD	=	0x70d9
                           0070DA  1090 _X_T1CC0L	=	0x70da
                           0070DB  1091 _X_T1CC0H	=	0x70db
                           0070DC  1092 _X_T1CC1L	=	0x70dc
                           0070DD  1093 _X_T1CC1H	=	0x70dd
                           0070DE  1094 _X_T1CC2L	=	0x70de
                           0070DF  1095 _X_T1CC2H	=	0x70df
                           0070E1  1096 _X_RFST	=	0x70e1
                           0070E2  1097 _X_T1CNTL	=	0x70e2
                           0070E3  1098 _X_T1CNTH	=	0x70e3
                           0070E4  1099 _X_T1CTL	=	0x70e4
                           0070E5  1100 _X_T1CCTL0	=	0x70e5
                           0070E6  1101 _X_T1CCTL1	=	0x70e6
                           0070E7  1102 _X_T1CCTL2	=	0x70e7
                           0070E9  1103 _X_RFIRQF0	=	0x70e9
                           0070EA  1104 _X_T4CNT	=	0x70ea
                           0070EB  1105 _X_T4CTL	=	0x70eb
                           0070EC  1106 _X_T4CCTL0	=	0x70ec
                           0070ED  1107 _X_T4CC0	=	0x70ed
                           0070EE  1108 _X_T4CCTL1	=	0x70ee
                           0070EF  1109 _X_T4CC1	=	0x70ef
                           0070F1  1110 _X_PERCFG	=	0x70f1
                           0070F2  1111 _X_APCFG	=	0x70f2
                           0070F3  1112 _X_P0SEL	=	0x70f3
                           0070F4  1113 _X_P1SEL	=	0x70f4
                           0070F5  1114 _X_P2SEL	=	0x70f5
                           0070F6  1115 _X_P1INP	=	0x70f6
                           0070F7  1116 _X_P2INP	=	0x70f7
                           0070F8  1117 _X_U1CSR	=	0x70f8
                           0070F9  1118 _X_U1DBUF	=	0x70f9
                           0070FA  1119 _X_U1BAUD	=	0x70fa
                           0070FB  1120 _X_U1UCR	=	0x70fb
                           0070FC  1121 _X_U1GCR	=	0x70fc
                           0070FD  1122 _X_P0DIR	=	0x70fd
                           0070FE  1123 _X_P1DIR	=	0x70fe
                           0070FF  1124 _X_P2DIR	=	0x70ff
                           007800  1125 _X_INFOPAGE	=	0x7800
                           00780C  1126 _X_IEEE_ADDR	=	0x780c
                                   1127 ;--------------------------------------------------------
                                   1128 ; absolute external ram data
                                   1129 ;--------------------------------------------------------
                                   1130 	.area XABS    (ABS,XDATA)
                                   1131 ;--------------------------------------------------------
                                   1132 ; external initialized ram data
                                   1133 ;--------------------------------------------------------
                                   1134 	.area XISEG   (XDATA)
                                   1135 	.area HOME    (CODE)
                                   1136 	.area GSINIT0 (CODE)
                                   1137 	.area GSINIT1 (CODE)
                                   1138 	.area GSINIT2 (CODE)
                                   1139 	.area GSINIT3 (CODE)
                                   1140 	.area GSINIT4 (CODE)
                                   1141 	.area GSINIT5 (CODE)
                                   1142 	.area GSINIT  (CODE)
                                   1143 	.area GSFINAL (CODE)
                                   1144 	.area CSEG    (CODE)
                                   1145 ;--------------------------------------------------------
                                   1146 ; global & static initialisations
                                   1147 ;--------------------------------------------------------
                                   1148 	.area HOME    (CODE)
                                   1149 	.area GSINIT  (CODE)
                                   1150 	.area GSFINAL (CODE)
                                   1151 	.area GSINIT  (CODE)
                                   1152 ;--------------------------------------------------------
                                   1153 ; Home
                                   1154 ;--------------------------------------------------------
                                   1155 	.area HOME    (CODE)
                                   1156 	.area HOME    (CODE)
                                   1157 ;--------------------------------------------------------
                                   1158 ; code
                                   1159 ;--------------------------------------------------------
                                   1160 	.area CSEG    (CODE)
                                   1161 ;------------------------------------------------------------
                                   1162 ;Allocation info for local variables in function 'read_data'
                                   1163 ;------------------------------------------------------------
                                   1164 ;dataptr                   Allocated to stack - sp -7
                                   1165 ;chunk                     Allocated to stack - sp -9
                                   1166 ;c                         Allocated to stack - sp -2
                                   1167 ;len                       Allocated to registers r3 r4 
                                   1168 ;------------------------------------------------------------
                                   1169 ;	../contiki-sensinode/core/net/rime/rudolph2.c:96: read_data(struct rudolph2_conn *c, uint8_t *dataptr, int chunk)
                                   1170 ;	-----------------------------------------
                                   1171 ;	 function read_data
                                   1172 ;	-----------------------------------------
      000000                       1173 _read_data:
                           000007  1174 	ar7 = 0x07
                           000006  1175 	ar6 = 0x06
                           000005  1176 	ar5 = 0x05
                           000004  1177 	ar4 = 0x04
                           000003  1178 	ar3 = 0x03
                           000002  1179 	ar2 = 0x02
                           000001  1180 	ar1 = 0x01
                           000000  1181 	ar0 = 0x00
      000000 C0 82            [24] 1182 	push	dpl
      000002 C0 83            [24] 1183 	push	dph
      000004 C0 F0            [24] 1184 	push	b
                                   1185 ;	../contiki-sensinode/core/net/rime/rudolph2.c:98: int len = 0;
      000006 7B 00            [12] 1186 	mov	r3,#0x00
      000008 7C 00            [12] 1187 	mov	r4,#0x00
                                   1188 ;	../contiki-sensinode/core/net/rime/rudolph2.c:100: if(c->cb->read_chunk) {
      00000A A8 81            [24] 1189 	mov	r0,sp
      00000C 18               [12] 1190 	dec	r0
      00000D 18               [12] 1191 	dec	r0
      00000E 74 28            [12] 1192 	mov	a,#0x28
      000010 26               [12] 1193 	add	a,@r0
      000011 FA               [12] 1194 	mov	r2,a
      000012 E4               [12] 1195 	clr	a
      000013 08               [12] 1196 	inc	r0
      000014 36               [12] 1197 	addc	a,@r0
      000015 FE               [12] 1198 	mov	r6,a
      000016 08               [12] 1199 	inc	r0
      000017 86 07            [24] 1200 	mov	ar7,@r0
      000019 8A 82            [24] 1201 	mov	dpl,r2
      00001B 8E 83            [24] 1202 	mov	dph,r6
      00001D 8F F0            [24] 1203 	mov	b,r7
      00001F 12r00r00         [24] 1204 	lcall	__gptrget
      000022 FA               [12] 1205 	mov	r2,a
      000023 A3               [24] 1206 	inc	dptr
      000024 12r00r00         [24] 1207 	lcall	__gptrget
      000027 FE               [12] 1208 	mov	r6,a
      000028 A3               [24] 1209 	inc	dptr
      000029 12r00r00         [24] 1210 	lcall	__gptrget
      00002C FF               [12] 1211 	mov	r7,a
      00002D 74 02            [12] 1212 	mov	a,#0x02
      00002F 2A               [12] 1213 	add	a,r2
      000030 FA               [12] 1214 	mov	r2,a
      000031 E4               [12] 1215 	clr	a
      000032 3E               [12] 1216 	addc	a,r6
      000033 FE               [12] 1217 	mov	r6,a
      000034 8A 82            [24] 1218 	mov	dpl,r2
      000036 8E 83            [24] 1219 	mov	dph,r6
      000038 8F F0            [24] 1220 	mov	b,r7
      00003A 12r00r00         [24] 1221 	lcall	__gptrget
      00003D FE               [12] 1222 	mov	r6,a
      00003E A3               [24] 1223 	inc	dptr
      00003F 12r00r00         [24] 1224 	lcall	__gptrget
      000042 FF               [12] 1225 	mov	r7,a
      000043 4E               [12] 1226 	orl	a,r6
      000044 60 59            [24] 1227 	jz	00102$
                                   1228 ;	../contiki-sensinode/core/net/rime/rudolph2.c:101: len = c->cb->read_chunk(c, chunk * RUDOLPH2_DATASIZE,
      000046 E5 81            [12] 1229 	mov	a,sp
      000048 24 F7            [12] 1230 	add	a,#0xf7
      00004A F8               [12] 1231 	mov	r0,a
      00004B 86 02            [24] 1232 	mov	ar2,@r0
      00004D 08               [12] 1233 	inc	r0
      00004E E6               [12] 1234 	mov	a,@r0
      00004F 54 03            [12] 1235 	anl	a,#0x03
      000051 A2 E0            [12] 1236 	mov	c,acc.0
      000053 CA               [12] 1237 	xch	a,r2
      000054 13               [12] 1238 	rrc	a
      000055 CA               [12] 1239 	xch	a,r2
      000056 13               [12] 1240 	rrc	a
      000057 A2 E0            [12] 1241 	mov	c,acc.0
      000059 CA               [12] 1242 	xch	a,r2
      00005A 13               [12] 1243 	rrc	a
      00005B CA               [12] 1244 	xch	a,r2
      00005C 13               [12] 1245 	rrc	a
      00005D CA               [12] 1246 	xch	a,r2
      00005E FD               [12] 1247 	mov	r5,a
      00005F 74 40            [12] 1248 	mov	a,#0x40
      000061 C0 E0            [24] 1249 	push	acc
      000063 E4               [12] 1250 	clr	a
      000064 C0 E0            [24] 1251 	push	acc
      000066 E5 81            [12] 1252 	mov	a,sp
      000068 24 F7            [12] 1253 	add	a,#0xf7
      00006A F8               [12] 1254 	mov	r0,a
      00006B E6               [12] 1255 	mov	a,@r0
      00006C C0 E0            [24] 1256 	push	acc
      00006E 08               [12] 1257 	inc	r0
      00006F E6               [12] 1258 	mov	a,@r0
      000070 C0 E0            [24] 1259 	push	acc
      000072 08               [12] 1260 	inc	r0
      000073 E6               [12] 1261 	mov	a,@r0
      000074 C0 E0            [24] 1262 	push	acc
      000076 C0 02            [24] 1263 	push	ar2
      000078 C0 05            [24] 1264 	push	ar5
      00007A 12r00r7F         [24] 1265 	lcall	00109$
      00007D 80 12            [24] 1266 	sjmp	00110$
      00007F                       1267 00109$:
      00007F C0 06            [24] 1268 	push	ar6
      000081 C0 07            [24] 1269 	push	ar7
      000083 E5 81            [12] 1270 	mov	a,sp
      000085 24 F3            [12] 1271 	add	a,#0xf3
      000087 F8               [12] 1272 	mov	r0,a
      000088 86 82            [24] 1273 	mov	dpl,@r0
      00008A 08               [12] 1274 	inc	r0
      00008B 86 83            [24] 1275 	mov	dph,@r0
      00008D 08               [12] 1276 	inc	r0
      00008E 86 F0            [24] 1277 	mov	b,@r0
      000090 22               [24] 1278 	ret
      000091                       1279 00110$:
      000091 AE 82            [24] 1280 	mov	r6,dpl
      000093 AF 83            [24] 1281 	mov	r7,dph
      000095 E5 81            [12] 1282 	mov	a,sp
      000097 24 F9            [12] 1283 	add	a,#0xf9
      000099 F5 81            [12] 1284 	mov	sp,a
      00009B 8E 03            [24] 1285 	mov	ar3,r6
      00009D 8F 04            [24] 1286 	mov	ar4,r7
      00009F                       1287 00102$:
                                   1288 ;	../contiki-sensinode/core/net/rime/rudolph2.c:104: return len;
      00009F 8B 82            [24] 1289 	mov	dpl,r3
      0000A1 8C 83            [24] 1290 	mov	dph,r4
      0000A3 15 81            [12] 1291 	dec	sp
      0000A5 15 81            [12] 1292 	dec	sp
      0000A7 15 81            [12] 1293 	dec	sp
      0000A9 22               [24] 1294 	ret
                                   1295 ;------------------------------------------------------------
                                   1296 ;Allocation info for local variables in function 'format_data'
                                   1297 ;------------------------------------------------------------
                                   1298 ;chunk                     Allocated to stack - sp -9
                                   1299 ;c                         Allocated to stack - sp -5
                                   1300 ;hdr                       Allocated to stack - sp -2
                                   1301 ;len                       Allocated to registers r6 r7 
                                   1302 ;------------------------------------------------------------
                                   1303 ;	../contiki-sensinode/core/net/rime/rudolph2.c:108: format_data(struct rudolph2_conn *c, int chunk)
                                   1304 ;	-----------------------------------------
                                   1305 ;	 function format_data
                                   1306 ;	-----------------------------------------
      0000AA                       1307 _format_data:
      0000AA C0 82            [24] 1308 	push	dpl
      0000AC C0 83            [24] 1309 	push	dph
      0000AE C0 F0            [24] 1310 	push	b
      0000B0 05 81            [12] 1311 	inc	sp
      0000B2 05 81            [12] 1312 	inc	sp
      0000B4 05 81            [12] 1313 	inc	sp
                                   1314 ;	../contiki-sensinode/core/net/rime/rudolph2.c:113: packetbuf_clear();
      0000B6 12r00r00         [24] 1315 	lcall	_packetbuf_clear
                                   1316 ;	../contiki-sensinode/core/net/rime/rudolph2.c:114: hdr = packetbuf_dataptr();
      0000B9 12r00r00         [24] 1317 	lcall	_packetbuf_dataptr
      0000BC AA 82            [24] 1318 	mov	r2,dpl
      0000BE AB 83            [24] 1319 	mov	r3,dph
      0000C0 AC F0            [24] 1320 	mov	r4,b
      0000C2 A8 81            [24] 1321 	mov	r0,sp
      0000C4 18               [12] 1322 	dec	r0
      0000C5 18               [12] 1323 	dec	r0
      0000C6 A6 02            [24] 1324 	mov	@r0,ar2
      0000C8 08               [12] 1325 	inc	r0
      0000C9 A6 03            [24] 1326 	mov	@r0,ar3
      0000CB 08               [12] 1327 	inc	r0
      0000CC A6 04            [24] 1328 	mov	@r0,ar4
                                   1329 ;	../contiki-sensinode/core/net/rime/rudolph2.c:115: hdr->type = TYPE_DATA;
      0000CE A8 81            [24] 1330 	mov	r0,sp
      0000D0 18               [12] 1331 	dec	r0
      0000D1 18               [12] 1332 	dec	r0
      0000D2 86 82            [24] 1333 	mov	dpl,@r0
      0000D4 08               [12] 1334 	inc	r0
      0000D5 86 83            [24] 1335 	mov	dph,@r0
      0000D7 08               [12] 1336 	inc	r0
      0000D8 86 F0            [24] 1337 	mov	b,@r0
      0000DA E4               [12] 1338 	clr	a
      0000DB 12r00r00         [24] 1339 	lcall	__gptrput
                                   1340 ;	../contiki-sensinode/core/net/rime/rudolph2.c:116: hdr->hops_from_base = c->hops_from_base;
      0000DE A8 81            [24] 1341 	mov	r0,sp
      0000E0 18               [12] 1342 	dec	r0
      0000E1 18               [12] 1343 	dec	r0
      0000E2 04               [12] 1344 	inc	a
      0000E3 26               [12] 1345 	add	a,@r0
      0000E4 FD               [12] 1346 	mov	r5,a
      0000E5 E4               [12] 1347 	clr	a
      0000E6 08               [12] 1348 	inc	r0
      0000E7 36               [12] 1349 	addc	a,@r0
      0000E8 FE               [12] 1350 	mov	r6,a
      0000E9 08               [12] 1351 	inc	r0
      0000EA 86 07            [24] 1352 	mov	ar7,@r0
      0000EC E5 81            [12] 1353 	mov	a,sp
      0000EE 24 FB            [12] 1354 	add	a,#0xfb
      0000F0 F8               [12] 1355 	mov	r0,a
      0000F1 74 46            [12] 1356 	mov	a,#0x46
      0000F3 26               [12] 1357 	add	a,@r0
      0000F4 FA               [12] 1358 	mov	r2,a
      0000F5 E4               [12] 1359 	clr	a
      0000F6 08               [12] 1360 	inc	r0
      0000F7 36               [12] 1361 	addc	a,@r0
      0000F8 FB               [12] 1362 	mov	r3,a
      0000F9 08               [12] 1363 	inc	r0
      0000FA 86 04            [24] 1364 	mov	ar4,@r0
      0000FC 8A 82            [24] 1365 	mov	dpl,r2
      0000FE 8B 83            [24] 1366 	mov	dph,r3
      000100 8C F0            [24] 1367 	mov	b,r4
      000102 12r00r00         [24] 1368 	lcall	__gptrget
      000105 8D 82            [24] 1369 	mov	dpl,r5
      000107 8E 83            [24] 1370 	mov	dph,r6
      000109 8F F0            [24] 1371 	mov	b,r7
      00010B 12r00r00         [24] 1372 	lcall	__gptrput
                                   1373 ;	../contiki-sensinode/core/net/rime/rudolph2.c:117: hdr->version = c->version;
      00010E A8 81            [24] 1374 	mov	r0,sp
      000110 18               [12] 1375 	dec	r0
      000111 18               [12] 1376 	dec	r0
      000112 74 02            [12] 1377 	mov	a,#0x02
      000114 26               [12] 1378 	add	a,@r0
      000115 FD               [12] 1379 	mov	r5,a
      000116 E4               [12] 1380 	clr	a
      000117 08               [12] 1381 	inc	r0
      000118 36               [12] 1382 	addc	a,@r0
      000119 FE               [12] 1383 	mov	r6,a
      00011A 08               [12] 1384 	inc	r0
      00011B 86 07            [24] 1385 	mov	ar7,@r0
      00011D E5 81            [12] 1386 	mov	a,sp
      00011F 24 FB            [12] 1387 	add	a,#0xfb
      000121 F8               [12] 1388 	mov	r0,a
      000122 74 44            [12] 1389 	mov	a,#0x44
      000124 26               [12] 1390 	add	a,@r0
      000125 FA               [12] 1391 	mov	r2,a
      000126 E4               [12] 1392 	clr	a
      000127 08               [12] 1393 	inc	r0
      000128 36               [12] 1394 	addc	a,@r0
      000129 FB               [12] 1395 	mov	r3,a
      00012A 08               [12] 1396 	inc	r0
      00012B 86 04            [24] 1397 	mov	ar4,@r0
      00012D 8A 82            [24] 1398 	mov	dpl,r2
      00012F 8B 83            [24] 1399 	mov	dph,r3
      000131 8C F0            [24] 1400 	mov	b,r4
      000133 12r00r00         [24] 1401 	lcall	__gptrget
      000136 FA               [12] 1402 	mov	r2,a
      000137 A3               [24] 1403 	inc	dptr
      000138 12r00r00         [24] 1404 	lcall	__gptrget
      00013B FB               [12] 1405 	mov	r3,a
      00013C 8D 82            [24] 1406 	mov	dpl,r5
      00013E 8E 83            [24] 1407 	mov	dph,r6
      000140 8F F0            [24] 1408 	mov	b,r7
      000142 EA               [12] 1409 	mov	a,r2
      000143 12r00r00         [24] 1410 	lcall	__gptrput
      000146 A3               [24] 1411 	inc	dptr
      000147 EB               [12] 1412 	mov	a,r3
      000148 12r00r00         [24] 1413 	lcall	__gptrput
                                   1414 ;	../contiki-sensinode/core/net/rime/rudolph2.c:118: hdr->chunk = chunk;
      00014B A8 81            [24] 1415 	mov	r0,sp
      00014D 18               [12] 1416 	dec	r0
      00014E 18               [12] 1417 	dec	r0
      00014F 74 04            [12] 1418 	mov	a,#0x04
      000151 26               [12] 1419 	add	a,@r0
      000152 FD               [12] 1420 	mov	r5,a
      000153 E4               [12] 1421 	clr	a
      000154 08               [12] 1422 	inc	r0
      000155 36               [12] 1423 	addc	a,@r0
      000156 FE               [12] 1424 	mov	r6,a
      000157 08               [12] 1425 	inc	r0
      000158 86 07            [24] 1426 	mov	ar7,@r0
      00015A 8D 82            [24] 1427 	mov	dpl,r5
      00015C 8E 83            [24] 1428 	mov	dph,r6
      00015E 8F F0            [24] 1429 	mov	b,r7
      000160 E5 81            [12] 1430 	mov	a,sp
      000162 24 F7            [12] 1431 	add	a,#0xf7
      000164 F8               [12] 1432 	mov	r0,a
      000165 E6               [12] 1433 	mov	a,@r0
      000166 12r00r00         [24] 1434 	lcall	__gptrput
      000169 A3               [24] 1435 	inc	dptr
      00016A 08               [12] 1436 	inc	r0
      00016B E6               [12] 1437 	mov	a,@r0
      00016C 12r00r00         [24] 1438 	lcall	__gptrput
                                   1439 ;	../contiki-sensinode/core/net/rime/rudolph2.c:119: len = read_data(c, (uint8_t *)hdr + sizeof(struct rudolph2_hdr), chunk);
      00016F A8 81            [24] 1440 	mov	r0,sp
      000171 18               [12] 1441 	dec	r0
      000172 18               [12] 1442 	dec	r0
      000173 86 02            [24] 1443 	mov	ar2,@r0
      000175 08               [12] 1444 	inc	r0
      000176 86 03            [24] 1445 	mov	ar3,@r0
      000178 08               [12] 1446 	inc	r0
      000179 86 04            [24] 1447 	mov	ar4,@r0
      00017B 74 06            [12] 1448 	mov	a,#0x06
      00017D 2A               [12] 1449 	add	a,r2
      00017E FA               [12] 1450 	mov	r2,a
      00017F E4               [12] 1451 	clr	a
      000180 3B               [12] 1452 	addc	a,r3
      000181 FB               [12] 1453 	mov	r3,a
      000182 E5 81            [12] 1454 	mov	a,sp
      000184 24 F7            [12] 1455 	add	a,#0xf7
      000186 F8               [12] 1456 	mov	r0,a
      000187 E6               [12] 1457 	mov	a,@r0
      000188 C0 E0            [24] 1458 	push	acc
      00018A 08               [12] 1459 	inc	r0
      00018B E6               [12] 1460 	mov	a,@r0
      00018C C0 E0            [24] 1461 	push	acc
      00018E C0 02            [24] 1462 	push	ar2
      000190 C0 03            [24] 1463 	push	ar3
      000192 C0 04            [24] 1464 	push	ar4
      000194 E5 81            [12] 1465 	mov	a,sp
      000196 24 F6            [12] 1466 	add	a,#0xf6
      000198 F8               [12] 1467 	mov	r0,a
      000199 86 82            [24] 1468 	mov	dpl,@r0
      00019B 08               [12] 1469 	inc	r0
      00019C 86 83            [24] 1470 	mov	dph,@r0
      00019E 08               [12] 1471 	inc	r0
      00019F 86 F0            [24] 1472 	mov	b,@r0
      0001A1 12r00r00         [24] 1473 	lcall	_read_data
      0001A4 AE 82            [24] 1474 	mov	r6,dpl
      0001A6 AF 83            [24] 1475 	mov	r7,dph
      0001A8 E5 81            [12] 1476 	mov	a,sp
      0001AA 24 FB            [12] 1477 	add	a,#0xfb
      0001AC F5 81            [12] 1478 	mov	sp,a
                                   1479 ;	../contiki-sensinode/core/net/rime/rudolph2.c:120: packetbuf_set_datalen(sizeof(struct rudolph2_hdr) + len);
      0001AE 74 06            [12] 1480 	mov	a,#0x06
      0001B0 2E               [12] 1481 	add	a,r6
      0001B1 FC               [12] 1482 	mov	r4,a
      0001B2 E4               [12] 1483 	clr	a
      0001B3 3F               [12] 1484 	addc	a,r7
      0001B4 FD               [12] 1485 	mov	r5,a
      0001B5 8C 82            [24] 1486 	mov	dpl,r4
      0001B7 8D 83            [24] 1487 	mov	dph,r5
      0001B9 C0 07            [24] 1488 	push	ar7
      0001BB C0 06            [24] 1489 	push	ar6
      0001BD 12r00r00         [24] 1490 	lcall	_packetbuf_set_datalen
      0001C0 D0 06            [24] 1491 	pop	ar6
      0001C2 D0 07            [24] 1492 	pop	ar7
                                   1493 ;	../contiki-sensinode/core/net/rime/rudolph2.c:122: return len;
      0001C4 8E 82            [24] 1494 	mov	dpl,r6
      0001C6 8F 83            [24] 1495 	mov	dph,r7
      0001C8 E5 81            [12] 1496 	mov	a,sp
      0001CA 24 FA            [12] 1497 	add	a,#0xFA
      0001CC F5 81            [12] 1498 	mov	sp,a
      0001CE 22               [24] 1499 	ret
                                   1500 ;------------------------------------------------------------
                                   1501 ;Allocation info for local variables in function 'write_data'
                                   1502 ;------------------------------------------------------------
                                   1503 ;chunk                     Allocated to stack - sp -6
                                   1504 ;data                      Allocated to stack - sp -9
                                   1505 ;datalen                   Allocated to stack - sp -11
                                   1506 ;c                         Allocated to stack - sp -2
                                   1507 ;------------------------------------------------------------
                                   1508 ;	../contiki-sensinode/core/net/rime/rudolph2.c:126: write_data(struct rudolph2_conn *c, int chunk, uint8_t *data, int datalen)
                                   1509 ;	-----------------------------------------
                                   1510 ;	 function write_data
                                   1511 ;	-----------------------------------------
      0001CF                       1512 _write_data:
      0001CF C0 82            [24] 1513 	push	dpl
      0001D1 C0 83            [24] 1514 	push	dph
      0001D3 C0 F0            [24] 1515 	push	b
                                   1516 ;	../contiki-sensinode/core/net/rime/rudolph2.c:129: if(c->flags & FLAG_IS_STOPPED) {
      0001D5 A8 81            [24] 1517 	mov	r0,sp
      0001D7 18               [12] 1518 	dec	r0
      0001D8 18               [12] 1519 	dec	r0
      0001D9 74 48            [12] 1520 	mov	a,#0x48
      0001DB 26               [12] 1521 	add	a,@r0
      0001DC FA               [12] 1522 	mov	r2,a
      0001DD E4               [12] 1523 	clr	a
      0001DE 08               [12] 1524 	inc	r0
      0001DF 36               [12] 1525 	addc	a,@r0
      0001E0 FB               [12] 1526 	mov	r3,a
      0001E1 08               [12] 1527 	inc	r0
      0001E2 86 04            [24] 1528 	mov	ar4,@r0
      0001E4 8A 82            [24] 1529 	mov	dpl,r2
      0001E6 8B 83            [24] 1530 	mov	dph,r3
      0001E8 8C F0            [24] 1531 	mov	b,r4
      0001EA 12r00r00         [24] 1532 	lcall	__gptrget
      0001ED FA               [12] 1533 	mov	r2,a
      0001EE 30 E2 03         [24] 1534 	jnb	acc.2,00102$
                                   1535 ;	../contiki-sensinode/core/net/rime/rudolph2.c:130: return;
      0001F1 02r03rB8         [24] 1536 	ljmp	00108$
      0001F4                       1537 00102$:
                                   1538 ;	../contiki-sensinode/core/net/rime/rudolph2.c:133: if(chunk == 0) {
      0001F4 E5 81            [12] 1539 	mov	a,sp
      0001F6 24 FA            [12] 1540 	add	a,#0xfa
      0001F8 F8               [12] 1541 	mov	r0,a
      0001F9 E6               [12] 1542 	mov	a,@r0
      0001FA 08               [12] 1543 	inc	r0
      0001FB 46               [12] 1544 	orl	a,@r0
      0001FC 70 77            [24] 1545 	jnz	00104$
                                   1546 ;	../contiki-sensinode/core/net/rime/rudolph2.c:134: c->cb->write_chunk(c, 0, RUDOLPH2_FLAG_NEWFILE, data, 0);
      0001FE A8 81            [24] 1547 	mov	r0,sp
      000200 18               [12] 1548 	dec	r0
      000201 18               [12] 1549 	dec	r0
      000202 74 28            [12] 1550 	mov	a,#0x28
      000204 26               [12] 1551 	add	a,@r0
      000205 FA               [12] 1552 	mov	r2,a
      000206 E4               [12] 1553 	clr	a
      000207 08               [12] 1554 	inc	r0
      000208 36               [12] 1555 	addc	a,@r0
      000209 FB               [12] 1556 	mov	r3,a
      00020A 08               [12] 1557 	inc	r0
      00020B 86 04            [24] 1558 	mov	ar4,@r0
      00020D 8A 82            [24] 1559 	mov	dpl,r2
      00020F 8B 83            [24] 1560 	mov	dph,r3
      000211 8C F0            [24] 1561 	mov	b,r4
      000213 12r00r00         [24] 1562 	lcall	__gptrget
      000216 FA               [12] 1563 	mov	r2,a
      000217 A3               [24] 1564 	inc	dptr
      000218 12r00r00         [24] 1565 	lcall	__gptrget
      00021B FB               [12] 1566 	mov	r3,a
      00021C A3               [24] 1567 	inc	dptr
      00021D 12r00r00         [24] 1568 	lcall	__gptrget
      000220 FC               [12] 1569 	mov	r4,a
      000221 8A 82            [24] 1570 	mov	dpl,r2
      000223 8B 83            [24] 1571 	mov	dph,r3
      000225 8C F0            [24] 1572 	mov	b,r4
      000227 12r00r00         [24] 1573 	lcall	__gptrget
      00022A FA               [12] 1574 	mov	r2,a
      00022B A3               [24] 1575 	inc	dptr
      00022C 12r00r00         [24] 1576 	lcall	__gptrget
      00022F FB               [12] 1577 	mov	r3,a
      000230 C0 03            [24] 1578 	push	ar3
      000232 C0 02            [24] 1579 	push	ar2
      000234 E4               [12] 1580 	clr	a
      000235 C0 E0            [24] 1581 	push	acc
      000237 C0 E0            [24] 1582 	push	acc
      000239 E5 81            [12] 1583 	mov	a,sp
      00023B 24 F3            [12] 1584 	add	a,#0xf3
      00023D F8               [12] 1585 	mov	r0,a
      00023E E6               [12] 1586 	mov	a,@r0
      00023F C0 E0            [24] 1587 	push	acc
      000241 08               [12] 1588 	inc	r0
      000242 E6               [12] 1589 	mov	a,@r0
      000243 C0 E0            [24] 1590 	push	acc
      000245 08               [12] 1591 	inc	r0
      000246 E6               [12] 1592 	mov	a,@r0
      000247 C0 E0            [24] 1593 	push	acc
      000249 74 01            [12] 1594 	mov	a,#0x01
      00024B C0 E0            [24] 1595 	push	acc
      00024D E4               [12] 1596 	clr	a
      00024E C0 E0            [24] 1597 	push	acc
      000250 C0 E0            [24] 1598 	push	acc
      000252 C0 E0            [24] 1599 	push	acc
      000254 12r02r59         [24] 1600 	lcall	00121$
      000257 80 12            [24] 1601 	sjmp	00122$
      000259                       1602 00121$:
      000259 C0 02            [24] 1603 	push	ar2
      00025B C0 03            [24] 1604 	push	ar3
      00025D E5 81            [12] 1605 	mov	a,sp
      00025F 24 EF            [12] 1606 	add	a,#0xef
      000261 F8               [12] 1607 	mov	r0,a
      000262 86 82            [24] 1608 	mov	dpl,@r0
      000264 08               [12] 1609 	inc	r0
      000265 86 83            [24] 1610 	mov	dph,@r0
      000267 08               [12] 1611 	inc	r0
      000268 86 F0            [24] 1612 	mov	b,@r0
      00026A 22               [24] 1613 	ret
      00026B                       1614 00122$:
      00026B E5 81            [12] 1615 	mov	a,sp
      00026D 24 F7            [12] 1616 	add	a,#0xf7
      00026F F5 81            [12] 1617 	mov	sp,a
      000271 D0 02            [24] 1618 	pop	ar2
      000273 D0 03            [24] 1619 	pop	ar3
      000275                       1620 00104$:
                                   1621 ;	../contiki-sensinode/core/net/rime/rudolph2.c:142: if(datalen < RUDOLPH2_DATASIZE) {
      000275 E5 81            [12] 1622 	mov	a,sp
      000277 24 F5            [12] 1623 	add	a,#0xf5
      000279 F8               [12] 1624 	mov	r0,a
      00027A C3               [12] 1625 	clr	c
      00027B E6               [12] 1626 	mov	a,@r0
      00027C 94 40            [12] 1627 	subb	a,#0x40
      00027E 08               [12] 1628 	inc	r0
      00027F E6               [12] 1629 	mov	a,@r0
      000280 64 80            [12] 1630 	xrl	a,#0x80
      000282 94 80            [12] 1631 	subb	a,#0x80
      000284 40 03            [24] 1632 	jc	00123$
      000286 02r03r23         [24] 1633 	ljmp	00106$
      000289                       1634 00123$:
                                   1635 ;	../contiki-sensinode/core/net/rime/rudolph2.c:146: c->cb->write_chunk(c, chunk * RUDOLPH2_DATASIZE,
      000289 A8 81            [24] 1636 	mov	r0,sp
      00028B 18               [12] 1637 	dec	r0
      00028C 18               [12] 1638 	dec	r0
      00028D 74 28            [12] 1639 	mov	a,#0x28
      00028F 26               [12] 1640 	add	a,@r0
      000290 FA               [12] 1641 	mov	r2,a
      000291 E4               [12] 1642 	clr	a
      000292 08               [12] 1643 	inc	r0
      000293 36               [12] 1644 	addc	a,@r0
      000294 FB               [12] 1645 	mov	r3,a
      000295 08               [12] 1646 	inc	r0
      000296 86 04            [24] 1647 	mov	ar4,@r0
      000298 8A 82            [24] 1648 	mov	dpl,r2
      00029A 8B 83            [24] 1649 	mov	dph,r3
      00029C 8C F0            [24] 1650 	mov	b,r4
      00029E 12r00r00         [24] 1651 	lcall	__gptrget
      0002A1 FA               [12] 1652 	mov	r2,a
      0002A2 A3               [24] 1653 	inc	dptr
      0002A3 12r00r00         [24] 1654 	lcall	__gptrget
      0002A6 FB               [12] 1655 	mov	r3,a
      0002A7 A3               [24] 1656 	inc	dptr
      0002A8 12r00r00         [24] 1657 	lcall	__gptrget
      0002AB FC               [12] 1658 	mov	r4,a
      0002AC 8A 82            [24] 1659 	mov	dpl,r2
      0002AE 8B 83            [24] 1660 	mov	dph,r3
      0002B0 8C F0            [24] 1661 	mov	b,r4
      0002B2 12r00r00         [24] 1662 	lcall	__gptrget
      0002B5 FA               [12] 1663 	mov	r2,a
      0002B6 A3               [24] 1664 	inc	dptr
      0002B7 12r00r00         [24] 1665 	lcall	__gptrget
      0002BA FB               [12] 1666 	mov	r3,a
      0002BB E5 81            [12] 1667 	mov	a,sp
      0002BD 24 FA            [12] 1668 	add	a,#0xfa
      0002BF F8               [12] 1669 	mov	r0,a
      0002C0 86 04            [24] 1670 	mov	ar4,@r0
      0002C2 08               [12] 1671 	inc	r0
      0002C3 E6               [12] 1672 	mov	a,@r0
      0002C4 54 03            [12] 1673 	anl	a,#0x03
      0002C6 A2 E0            [12] 1674 	mov	c,acc.0
      0002C8 CC               [12] 1675 	xch	a,r4
      0002C9 13               [12] 1676 	rrc	a
      0002CA CC               [12] 1677 	xch	a,r4
      0002CB 13               [12] 1678 	rrc	a
      0002CC A2 E0            [12] 1679 	mov	c,acc.0
      0002CE CC               [12] 1680 	xch	a,r4
      0002CF 13               [12] 1681 	rrc	a
      0002D0 CC               [12] 1682 	xch	a,r4
      0002D1 13               [12] 1683 	rrc	a
      0002D2 CC               [12] 1684 	xch	a,r4
      0002D3 FF               [12] 1685 	mov	r7,a
      0002D4 C0 03            [24] 1686 	push	ar3
      0002D6 C0 02            [24] 1687 	push	ar2
      0002D8 E5 81            [12] 1688 	mov	a,sp
      0002DA 24 F3            [12] 1689 	add	a,#0xf3
      0002DC F8               [12] 1690 	mov	r0,a
      0002DD E6               [12] 1691 	mov	a,@r0
      0002DE C0 E0            [24] 1692 	push	acc
      0002E0 08               [12] 1693 	inc	r0
      0002E1 E6               [12] 1694 	mov	a,@r0
      0002E2 C0 E0            [24] 1695 	push	acc
      0002E4 E5 81            [12] 1696 	mov	a,sp
      0002E6 24 F3            [12] 1697 	add	a,#0xf3
      0002E8 F8               [12] 1698 	mov	r0,a
      0002E9 E6               [12] 1699 	mov	a,@r0
      0002EA C0 E0            [24] 1700 	push	acc
      0002EC 08               [12] 1701 	inc	r0
      0002ED E6               [12] 1702 	mov	a,@r0
      0002EE C0 E0            [24] 1703 	push	acc
      0002F0 08               [12] 1704 	inc	r0
      0002F1 E6               [12] 1705 	mov	a,@r0
      0002F2 C0 E0            [24] 1706 	push	acc
      0002F4 74 02            [12] 1707 	mov	a,#0x02
      0002F6 C0 E0            [24] 1708 	push	acc
      0002F8 E4               [12] 1709 	clr	a
      0002F9 C0 E0            [24] 1710 	push	acc
      0002FB C0 04            [24] 1711 	push	ar4
      0002FD C0 07            [24] 1712 	push	ar7
      0002FF 12r03r04         [24] 1713 	lcall	00124$
      000302 80 12            [24] 1714 	sjmp	00125$
      000304                       1715 00124$:
      000304 C0 02            [24] 1716 	push	ar2
      000306 C0 03            [24] 1717 	push	ar3
      000308 E5 81            [12] 1718 	mov	a,sp
      00030A 24 EF            [12] 1719 	add	a,#0xef
      00030C F8               [12] 1720 	mov	r0,a
      00030D 86 82            [24] 1721 	mov	dpl,@r0
      00030F 08               [12] 1722 	inc	r0
      000310 86 83            [24] 1723 	mov	dph,@r0
      000312 08               [12] 1724 	inc	r0
      000313 86 F0            [24] 1725 	mov	b,@r0
      000315 22               [24] 1726 	ret
      000316                       1727 00125$:
      000316 E5 81            [12] 1728 	mov	a,sp
      000318 24 F7            [12] 1729 	add	a,#0xf7
      00031A F5 81            [12] 1730 	mov	sp,a
      00031C D0 02            [24] 1731 	pop	ar2
      00031E D0 03            [24] 1732 	pop	ar3
      000320 02r03rB8         [24] 1733 	ljmp	00108$
      000323                       1734 00106$:
                                   1735 ;	../contiki-sensinode/core/net/rime/rudolph2.c:149: c->cb->write_chunk(c, chunk * RUDOLPH2_DATASIZE,
      000323 A8 81            [24] 1736 	mov	r0,sp
      000325 18               [12] 1737 	dec	r0
      000326 18               [12] 1738 	dec	r0
      000327 74 28            [12] 1739 	mov	a,#0x28
      000329 26               [12] 1740 	add	a,@r0
      00032A FD               [12] 1741 	mov	r5,a
      00032B E4               [12] 1742 	clr	a
      00032C 08               [12] 1743 	inc	r0
      00032D 36               [12] 1744 	addc	a,@r0
      00032E FE               [12] 1745 	mov	r6,a
      00032F 08               [12] 1746 	inc	r0
      000330 86 07            [24] 1747 	mov	ar7,@r0
      000332 8D 82            [24] 1748 	mov	dpl,r5
      000334 8E 83            [24] 1749 	mov	dph,r6
      000336 8F F0            [24] 1750 	mov	b,r7
      000338 12r00r00         [24] 1751 	lcall	__gptrget
      00033B FD               [12] 1752 	mov	r5,a
      00033C A3               [24] 1753 	inc	dptr
      00033D 12r00r00         [24] 1754 	lcall	__gptrget
      000340 FE               [12] 1755 	mov	r6,a
      000341 A3               [24] 1756 	inc	dptr
      000342 12r00r00         [24] 1757 	lcall	__gptrget
      000345 FF               [12] 1758 	mov	r7,a
      000346 8D 82            [24] 1759 	mov	dpl,r5
      000348 8E 83            [24] 1760 	mov	dph,r6
      00034A 8F F0            [24] 1761 	mov	b,r7
      00034C 12r00r00         [24] 1762 	lcall	__gptrget
      00034F FD               [12] 1763 	mov	r5,a
      000350 A3               [24] 1764 	inc	dptr
      000351 12r00r00         [24] 1765 	lcall	__gptrget
      000354 FE               [12] 1766 	mov	r6,a
      000355 E5 81            [12] 1767 	mov	a,sp
      000357 24 FA            [12] 1768 	add	a,#0xfa
      000359 F8               [12] 1769 	mov	r0,a
      00035A 86 04            [24] 1770 	mov	ar4,@r0
      00035C 08               [12] 1771 	inc	r0
      00035D E6               [12] 1772 	mov	a,@r0
      00035E 54 03            [12] 1773 	anl	a,#0x03
      000360 A2 E0            [12] 1774 	mov	c,acc.0
      000362 CC               [12] 1775 	xch	a,r4
      000363 13               [12] 1776 	rrc	a
      000364 CC               [12] 1777 	xch	a,r4
      000365 13               [12] 1778 	rrc	a
      000366 A2 E0            [12] 1779 	mov	c,acc.0
      000368 CC               [12] 1780 	xch	a,r4
      000369 13               [12] 1781 	rrc	a
      00036A CC               [12] 1782 	xch	a,r4
      00036B 13               [12] 1783 	rrc	a
      00036C CC               [12] 1784 	xch	a,r4
      00036D FF               [12] 1785 	mov	r7,a
      00036E C0 06            [24] 1786 	push	ar6
      000370 C0 05            [24] 1787 	push	ar5
      000372 E5 81            [12] 1788 	mov	a,sp
      000374 24 F3            [12] 1789 	add	a,#0xf3
      000376 F8               [12] 1790 	mov	r0,a
      000377 E6               [12] 1791 	mov	a,@r0
      000378 C0 E0            [24] 1792 	push	acc
      00037A 08               [12] 1793 	inc	r0
      00037B E6               [12] 1794 	mov	a,@r0
      00037C C0 E0            [24] 1795 	push	acc
      00037E E5 81            [12] 1796 	mov	a,sp
      000380 24 F3            [12] 1797 	add	a,#0xf3
      000382 F8               [12] 1798 	mov	r0,a
      000383 E6               [12] 1799 	mov	a,@r0
      000384 C0 E0            [24] 1800 	push	acc
      000386 08               [12] 1801 	inc	r0
      000387 E6               [12] 1802 	mov	a,@r0
      000388 C0 E0            [24] 1803 	push	acc
      00038A 08               [12] 1804 	inc	r0
      00038B E6               [12] 1805 	mov	a,@r0
      00038C C0 E0            [24] 1806 	push	acc
      00038E E4               [12] 1807 	clr	a
      00038F C0 E0            [24] 1808 	push	acc
      000391 C0 E0            [24] 1809 	push	acc
      000393 C0 04            [24] 1810 	push	ar4
      000395 C0 07            [24] 1811 	push	ar7
      000397 12r03r9C         [24] 1812 	lcall	00126$
      00039A 80 12            [24] 1813 	sjmp	00127$
      00039C                       1814 00126$:
      00039C C0 05            [24] 1815 	push	ar5
      00039E C0 06            [24] 1816 	push	ar6
      0003A0 E5 81            [12] 1817 	mov	a,sp
      0003A2 24 EF            [12] 1818 	add	a,#0xef
      0003A4 F8               [12] 1819 	mov	r0,a
      0003A5 86 82            [24] 1820 	mov	dpl,@r0
      0003A7 08               [12] 1821 	inc	r0
      0003A8 86 83            [24] 1822 	mov	dph,@r0
      0003AA 08               [12] 1823 	inc	r0
      0003AB 86 F0            [24] 1824 	mov	b,@r0
      0003AD 22               [24] 1825 	ret
      0003AE                       1826 00127$:
      0003AE E5 81            [12] 1827 	mov	a,sp
      0003B0 24 F7            [12] 1828 	add	a,#0xf7
      0003B2 F5 81            [12] 1829 	mov	sp,a
      0003B4 D0 05            [24] 1830 	pop	ar5
      0003B6 D0 06            [24] 1831 	pop	ar6
      0003B8                       1832 00108$:
      0003B8 15 81            [12] 1833 	dec	sp
      0003BA 15 81            [12] 1834 	dec	sp
      0003BC 15 81            [12] 1835 	dec	sp
      0003BE 22               [24] 1836 	ret
                                   1837 ;------------------------------------------------------------
                                   1838 ;Allocation info for local variables in function 'send_data'
                                   1839 ;------------------------------------------------------------
                                   1840 ;interval                  Allocated to stack - sp -3
                                   1841 ;c                         Allocated to registers r5 r6 r7 
                                   1842 ;len                       Allocated to registers r3 r4 
                                   1843 ;------------------------------------------------------------
                                   1844 ;	../contiki-sensinode/core/net/rime/rudolph2.c:155: send_data(struct rudolph2_conn *c, clock_time_t interval)
                                   1845 ;	-----------------------------------------
                                   1846 ;	 function send_data
                                   1847 ;	-----------------------------------------
      0003BF                       1848 _send_data:
      0003BF AD 82            [24] 1849 	mov	r5,dpl
      0003C1 AE 83            [24] 1850 	mov	r6,dph
      0003C3 AF F0            [24] 1851 	mov	r7,b
                                   1852 ;	../contiki-sensinode/core/net/rime/rudolph2.c:159: len = format_data(c, c->snd_nxt);
      0003C5 74 40            [12] 1853 	mov	a,#0x40
      0003C7 2D               [12] 1854 	add	a,r5
      0003C8 FA               [12] 1855 	mov	r2,a
      0003C9 E4               [12] 1856 	clr	a
      0003CA 3E               [12] 1857 	addc	a,r6
      0003CB FB               [12] 1858 	mov	r3,a
      0003CC 8F 04            [24] 1859 	mov	ar4,r7
      0003CE 8A 82            [24] 1860 	mov	dpl,r2
      0003D0 8B 83            [24] 1861 	mov	dph,r3
      0003D2 8C F0            [24] 1862 	mov	b,r4
      0003D4 12r00r00         [24] 1863 	lcall	__gptrget
      0003D7 FA               [12] 1864 	mov	r2,a
      0003D8 A3               [24] 1865 	inc	dptr
      0003D9 12r00r00         [24] 1866 	lcall	__gptrget
      0003DC FB               [12] 1867 	mov	r3,a
      0003DD C0 07            [24] 1868 	push	ar7
      0003DF C0 06            [24] 1869 	push	ar6
      0003E1 C0 05            [24] 1870 	push	ar5
      0003E3 C0 02            [24] 1871 	push	ar2
      0003E5 C0 03            [24] 1872 	push	ar3
      0003E7 8D 82            [24] 1873 	mov	dpl,r5
      0003E9 8E 83            [24] 1874 	mov	dph,r6
      0003EB 8F F0            [24] 1875 	mov	b,r7
      0003ED 12r00rAA         [24] 1876 	lcall	_format_data
      0003F0 AB 82            [24] 1877 	mov	r3,dpl
      0003F2 AC 83            [24] 1878 	mov	r4,dph
      0003F4 15 81            [12] 1879 	dec	sp
      0003F6 15 81            [12] 1880 	dec	sp
      0003F8 D0 05            [24] 1881 	pop	ar5
      0003FA D0 06            [24] 1882 	pop	ar6
      0003FC D0 07            [24] 1883 	pop	ar7
                                   1884 ;	../contiki-sensinode/core/net/rime/rudolph2.c:160: polite_send(&c->c, interval, POLITE_HEADER);
      0003FE C0 04            [24] 1885 	push	ar4
      000400 C0 03            [24] 1886 	push	ar3
      000402 74 01            [12] 1887 	mov	a,#0x01
      000404 C0 E0            [24] 1888 	push	acc
      000406 E5 81            [12] 1889 	mov	a,sp
      000408 24 FA            [12] 1890 	add	a,#0xfa
      00040A F8               [12] 1891 	mov	r0,a
      00040B E6               [12] 1892 	mov	a,@r0
      00040C C0 E0            [24] 1893 	push	acc
      00040E 08               [12] 1894 	inc	r0
      00040F E6               [12] 1895 	mov	a,@r0
      000410 C0 E0            [24] 1896 	push	acc
      000412 8D 82            [24] 1897 	mov	dpl,r5
      000414 8E 83            [24] 1898 	mov	dph,r6
      000416 8F F0            [24] 1899 	mov	b,r7
      000418 12r00r00         [24] 1900 	lcall	_polite_send
      00041B 15 81            [12] 1901 	dec	sp
      00041D 15 81            [12] 1902 	dec	sp
      00041F 15 81            [12] 1903 	dec	sp
      000421 D0 03            [24] 1904 	pop	ar3
      000423 D0 04            [24] 1905 	pop	ar4
                                   1906 ;	../contiki-sensinode/core/net/rime/rudolph2.c:165: return len;
      000425 8B 82            [24] 1907 	mov	dpl,r3
      000427 8C 83            [24] 1908 	mov	dph,r4
      000429 22               [24] 1909 	ret
                                   1910 ;------------------------------------------------------------
                                   1911 ;Allocation info for local variables in function 'send_nack'
                                   1912 ;------------------------------------------------------------
                                   1913 ;c                         Allocated to stack - sp -5
                                   1914 ;hdr                       Allocated to stack - sp -2
                                   1915 ;------------------------------------------------------------
                                   1916 ;	../contiki-sensinode/core/net/rime/rudolph2.c:169: send_nack(struct rudolph2_conn *c)
                                   1917 ;	-----------------------------------------
                                   1918 ;	 function send_nack
                                   1919 ;	-----------------------------------------
      00042A                       1920 _send_nack:
      00042A C0 82            [24] 1921 	push	dpl
      00042C C0 83            [24] 1922 	push	dph
      00042E C0 F0            [24] 1923 	push	b
      000430 05 81            [12] 1924 	inc	sp
      000432 05 81            [12] 1925 	inc	sp
      000434 05 81            [12] 1926 	inc	sp
                                   1927 ;	../contiki-sensinode/core/net/rime/rudolph2.c:172: packetbuf_clear();
      000436 12r00r00         [24] 1928 	lcall	_packetbuf_clear
                                   1929 ;	../contiki-sensinode/core/net/rime/rudolph2.c:173: packetbuf_hdralloc(sizeof(struct rudolph2_hdr));
      000439 90 00 06         [24] 1930 	mov	dptr,#0x0006
      00043C 12r00r00         [24] 1931 	lcall	_packetbuf_hdralloc
                                   1932 ;	../contiki-sensinode/core/net/rime/rudolph2.c:174: hdr = packetbuf_hdrptr();
      00043F 12r00r00         [24] 1933 	lcall	_packetbuf_hdrptr
      000442 AA 82            [24] 1934 	mov	r2,dpl
      000444 AB 83            [24] 1935 	mov	r3,dph
      000446 AC F0            [24] 1936 	mov	r4,b
      000448 A8 81            [24] 1937 	mov	r0,sp
      00044A 18               [12] 1938 	dec	r0
      00044B 18               [12] 1939 	dec	r0
      00044C A6 02            [24] 1940 	mov	@r0,ar2
      00044E 08               [12] 1941 	inc	r0
      00044F A6 03            [24] 1942 	mov	@r0,ar3
      000451 08               [12] 1943 	inc	r0
      000452 A6 04            [24] 1944 	mov	@r0,ar4
                                   1945 ;	../contiki-sensinode/core/net/rime/rudolph2.c:176: hdr->hops_from_base = c->hops_from_base;
      000454 A8 81            [24] 1946 	mov	r0,sp
      000456 18               [12] 1947 	dec	r0
      000457 18               [12] 1948 	dec	r0
      000458 74 01            [12] 1949 	mov	a,#0x01
      00045A 26               [12] 1950 	add	a,@r0
      00045B FD               [12] 1951 	mov	r5,a
      00045C E4               [12] 1952 	clr	a
      00045D 08               [12] 1953 	inc	r0
      00045E 36               [12] 1954 	addc	a,@r0
      00045F FE               [12] 1955 	mov	r6,a
      000460 08               [12] 1956 	inc	r0
      000461 86 07            [24] 1957 	mov	ar7,@r0
      000463 E5 81            [12] 1958 	mov	a,sp
      000465 24 FB            [12] 1959 	add	a,#0xfb
      000467 F8               [12] 1960 	mov	r0,a
      000468 74 46            [12] 1961 	mov	a,#0x46
      00046A 26               [12] 1962 	add	a,@r0
      00046B FA               [12] 1963 	mov	r2,a
      00046C E4               [12] 1964 	clr	a
      00046D 08               [12] 1965 	inc	r0
      00046E 36               [12] 1966 	addc	a,@r0
      00046F FB               [12] 1967 	mov	r3,a
      000470 08               [12] 1968 	inc	r0
      000471 86 04            [24] 1969 	mov	ar4,@r0
      000473 8A 82            [24] 1970 	mov	dpl,r2
      000475 8B 83            [24] 1971 	mov	dph,r3
      000477 8C F0            [24] 1972 	mov	b,r4
      000479 12r00r00         [24] 1973 	lcall	__gptrget
      00047C 8D 82            [24] 1974 	mov	dpl,r5
      00047E 8E 83            [24] 1975 	mov	dph,r6
      000480 8F F0            [24] 1976 	mov	b,r7
      000482 12r00r00         [24] 1977 	lcall	__gptrput
                                   1978 ;	../contiki-sensinode/core/net/rime/rudolph2.c:177: hdr->type = TYPE_NACK;
      000485 A8 81            [24] 1979 	mov	r0,sp
      000487 18               [12] 1980 	dec	r0
      000488 18               [12] 1981 	dec	r0
      000489 86 82            [24] 1982 	mov	dpl,@r0
      00048B 08               [12] 1983 	inc	r0
      00048C 86 83            [24] 1984 	mov	dph,@r0
      00048E 08               [12] 1985 	inc	r0
      00048F 86 F0            [24] 1986 	mov	b,@r0
      000491 74 01            [12] 1987 	mov	a,#0x01
      000493 12r00r00         [24] 1988 	lcall	__gptrput
                                   1989 ;	../contiki-sensinode/core/net/rime/rudolph2.c:178: hdr->version = c->version;
      000496 A8 81            [24] 1990 	mov	r0,sp
      000498 18               [12] 1991 	dec	r0
      000499 18               [12] 1992 	dec	r0
      00049A 04               [12] 1993 	inc	a
      00049B 26               [12] 1994 	add	a,@r0
      00049C FD               [12] 1995 	mov	r5,a
      00049D E4               [12] 1996 	clr	a
      00049E 08               [12] 1997 	inc	r0
      00049F 36               [12] 1998 	addc	a,@r0
      0004A0 FE               [12] 1999 	mov	r6,a
      0004A1 08               [12] 2000 	inc	r0
      0004A2 86 07            [24] 2001 	mov	ar7,@r0
      0004A4 E5 81            [12] 2002 	mov	a,sp
      0004A6 24 FB            [12] 2003 	add	a,#0xfb
      0004A8 F8               [12] 2004 	mov	r0,a
      0004A9 74 44            [12] 2005 	mov	a,#0x44
      0004AB 26               [12] 2006 	add	a,@r0
      0004AC FA               [12] 2007 	mov	r2,a
      0004AD E4               [12] 2008 	clr	a
      0004AE 08               [12] 2009 	inc	r0
      0004AF 36               [12] 2010 	addc	a,@r0
      0004B0 FB               [12] 2011 	mov	r3,a
      0004B1 08               [12] 2012 	inc	r0
      0004B2 86 04            [24] 2013 	mov	ar4,@r0
      0004B4 8A 82            [24] 2014 	mov	dpl,r2
      0004B6 8B 83            [24] 2015 	mov	dph,r3
      0004B8 8C F0            [24] 2016 	mov	b,r4
      0004BA 12r00r00         [24] 2017 	lcall	__gptrget
      0004BD FA               [12] 2018 	mov	r2,a
      0004BE A3               [24] 2019 	inc	dptr
      0004BF 12r00r00         [24] 2020 	lcall	__gptrget
      0004C2 FB               [12] 2021 	mov	r3,a
      0004C3 8D 82            [24] 2022 	mov	dpl,r5
      0004C5 8E 83            [24] 2023 	mov	dph,r6
      0004C7 8F F0            [24] 2024 	mov	b,r7
      0004C9 EA               [12] 2025 	mov	a,r2
      0004CA 12r00r00         [24] 2026 	lcall	__gptrput
      0004CD A3               [24] 2027 	inc	dptr
      0004CE EB               [12] 2028 	mov	a,r3
      0004CF 12r00r00         [24] 2029 	lcall	__gptrput
                                   2030 ;	../contiki-sensinode/core/net/rime/rudolph2.c:179: hdr->chunk = c->rcv_nxt;
      0004D2 A8 81            [24] 2031 	mov	r0,sp
      0004D4 18               [12] 2032 	dec	r0
      0004D5 18               [12] 2033 	dec	r0
      0004D6 74 04            [12] 2034 	mov	a,#0x04
      0004D8 26               [12] 2035 	add	a,@r0
      0004D9 FD               [12] 2036 	mov	r5,a
      0004DA E4               [12] 2037 	clr	a
      0004DB 08               [12] 2038 	inc	r0
      0004DC 36               [12] 2039 	addc	a,@r0
      0004DD FE               [12] 2040 	mov	r6,a
      0004DE 08               [12] 2041 	inc	r0
      0004DF 86 07            [24] 2042 	mov	ar7,@r0
      0004E1 E5 81            [12] 2043 	mov	a,sp
      0004E3 24 FB            [12] 2044 	add	a,#0xfb
      0004E5 F8               [12] 2045 	mov	r0,a
      0004E6 74 42            [12] 2046 	mov	a,#0x42
      0004E8 26               [12] 2047 	add	a,@r0
      0004E9 FA               [12] 2048 	mov	r2,a
      0004EA E4               [12] 2049 	clr	a
      0004EB 08               [12] 2050 	inc	r0
      0004EC 36               [12] 2051 	addc	a,@r0
      0004ED FB               [12] 2052 	mov	r3,a
      0004EE 08               [12] 2053 	inc	r0
      0004EF 86 04            [24] 2054 	mov	ar4,@r0
      0004F1 8A 82            [24] 2055 	mov	dpl,r2
      0004F3 8B 83            [24] 2056 	mov	dph,r3
      0004F5 8C F0            [24] 2057 	mov	b,r4
      0004F7 12r00r00         [24] 2058 	lcall	__gptrget
      0004FA FA               [12] 2059 	mov	r2,a
      0004FB A3               [24] 2060 	inc	dptr
      0004FC 12r00r00         [24] 2061 	lcall	__gptrget
      0004FF FB               [12] 2062 	mov	r3,a
      000500 8D 82            [24] 2063 	mov	dpl,r5
      000502 8E 83            [24] 2064 	mov	dph,r6
      000504 8F F0            [24] 2065 	mov	b,r7
      000506 EA               [12] 2066 	mov	a,r2
      000507 12r00r00         [24] 2067 	lcall	__gptrput
      00050A A3               [24] 2068 	inc	dptr
      00050B EB               [12] 2069 	mov	a,r3
      00050C 12r00r00         [24] 2070 	lcall	__gptrput
                                   2071 ;	../contiki-sensinode/core/net/rime/rudolph2.c:184: polite_send(&c->c, NACK_TIMEOUT, POLITE_HEADER);
      00050F 74 01            [12] 2072 	mov	a,#0x01
      000511 C0 E0            [24] 2073 	push	acc
      000513 74 20            [12] 2074 	mov	a,#0x20
      000515 C0 E0            [24] 2075 	push	acc
      000517 E4               [12] 2076 	clr	a
      000518 C0 E0            [24] 2077 	push	acc
      00051A E5 81            [12] 2078 	mov	a,sp
      00051C 24 F8            [12] 2079 	add	a,#0xf8
      00051E F8               [12] 2080 	mov	r0,a
      00051F 86 82            [24] 2081 	mov	dpl,@r0
      000521 08               [12] 2082 	inc	r0
      000522 86 83            [24] 2083 	mov	dph,@r0
      000524 08               [12] 2084 	inc	r0
      000525 86 F0            [24] 2085 	mov	b,@r0
      000527 12r00r00         [24] 2086 	lcall	_polite_send
      00052A 15 81            [12] 2087 	dec	sp
      00052C 15 81            [12] 2088 	dec	sp
      00052E 15 81            [12] 2089 	dec	sp
      000530 E5 81            [12] 2090 	mov	a,sp
      000532 24 FA            [12] 2091 	add	a,#0xFA
      000534 F5 81            [12] 2092 	mov	sp,a
      000536 22               [24] 2093 	ret
                                   2094 ;------------------------------------------------------------
                                   2095 ;Allocation info for local variables in function 'sent'
                                   2096 ;------------------------------------------------------------
                                   2097 ;polite                    Allocated to registers 
                                   2098 ;------------------------------------------------------------
                                   2099 ;	../contiki-sensinode/core/net/rime/rudolph2.c:218: sent(struct polite_conn *polite)
                                   2100 ;	-----------------------------------------
                                   2101 ;	 function sent
                                   2102 ;	-----------------------------------------
      000537                       2103 _sent:
                                   2104 ;	../contiki-sensinode/core/net/rime/rudolph2.c:231: }
      000537 22               [24] 2105 	ret
                                   2106 ;------------------------------------------------------------
                                   2107 ;Allocation info for local variables in function 'dropped'
                                   2108 ;------------------------------------------------------------
                                   2109 ;polite                    Allocated to registers 
                                   2110 ;------------------------------------------------------------
                                   2111 ;	../contiki-sensinode/core/net/rime/rudolph2.c:234: dropped(struct polite_conn *polite)
                                   2112 ;	-----------------------------------------
                                   2113 ;	 function dropped
                                   2114 ;	-----------------------------------------
      000538                       2115 _dropped:
                                   2116 ;	../contiki-sensinode/core/net/rime/rudolph2.c:245: }
      000538 22               [24] 2117 	ret
                                   2118 ;------------------------------------------------------------
                                   2119 ;Allocation info for local variables in function 'timed_send'
                                   2120 ;------------------------------------------------------------
                                   2121 ;ptr                       Allocated to registers r5 r6 r7 
                                   2122 ;c                         Allocated to stack - sp -4
                                   2123 ;interval                  Allocated to stack - sp -1
                                   2124 ;len                       Allocated to registers r6 r5 
                                   2125 ;sloc0                     Allocated to stack - sp +1
                                   2126 ;sloc1                     Allocated to stack - sp -7
                                   2127 ;sloc2                     Allocated to stack - sp -9
                                   2128 ;------------------------------------------------------------
                                   2129 ;	../contiki-sensinode/core/net/rime/rudolph2.c:248: timed_send(void *ptr)
                                   2130 ;	-----------------------------------------
                                   2131 ;	 function timed_send
                                   2132 ;	-----------------------------------------
      000539                       2133 _timed_send:
      000539 E5 81            [12] 2134 	mov	a,sp
      00053B 24 0A            [12] 2135 	add	a,#0x0A
      00053D F5 81            [12] 2136 	mov	sp,a
      00053F AD 82            [24] 2137 	mov	r5,dpl
      000541 AE 83            [24] 2138 	mov	r6,dph
      000543 AF F0            [24] 2139 	mov	r7,b
                                   2140 ;	../contiki-sensinode/core/net/rime/rudolph2.c:250: struct rudolph2_conn *c = (struct rudolph2_conn *)ptr;
      000545 E5 81            [12] 2141 	mov	a,sp
      000547 24 FC            [12] 2142 	add	a,#0xfc
      000549 F8               [12] 2143 	mov	r0,a
      00054A A6 05            [24] 2144 	mov	@r0,ar5
      00054C 08               [12] 2145 	inc	r0
      00054D A6 06            [24] 2146 	mov	@r0,ar6
      00054F 08               [12] 2147 	inc	r0
      000550 A6 07            [24] 2148 	mov	@r0,ar7
                                   2149 ;	../contiki-sensinode/core/net/rime/rudolph2.c:254: if((c->flags & FLAG_IS_STOPPED) == 0 &&
      000552 E5 81            [12] 2150 	mov	a,sp
      000554 24 FC            [12] 2151 	add	a,#0xfc
      000556 F8               [12] 2152 	mov	r0,a
      000557 74 48            [12] 2153 	mov	a,#0x48
      000559 26               [12] 2154 	add	a,@r0
      00055A FA               [12] 2155 	mov	r2,a
      00055B E4               [12] 2156 	clr	a
      00055C 08               [12] 2157 	inc	r0
      00055D 36               [12] 2158 	addc	a,@r0
      00055E FB               [12] 2159 	mov	r3,a
      00055F 08               [12] 2160 	inc	r0
      000560 86 04            [24] 2161 	mov	ar4,@r0
      000562 8A 82            [24] 2162 	mov	dpl,r2
      000564 8B 83            [24] 2163 	mov	dph,r3
      000566 8C F0            [24] 2164 	mov	b,r4
      000568 12r00r00         [24] 2165 	lcall	__gptrget
      00056B FF               [12] 2166 	mov	r7,a
      00056C 30 E2 03         [24] 2167 	jnb	acc.2,00137$
      00056F 02r07r0A         [24] 2168 	ljmp	00114$
      000572                       2169 00137$:
                                   2170 ;	../contiki-sensinode/core/net/rime/rudolph2.c:255: (c->flags & FLAG_LAST_RECEIVED)) {
      000572 EF               [12] 2171 	mov	a,r7
      000573 20 E1 03         [24] 2172 	jb	acc.1,00138$
      000576 02r07r0A         [24] 2173 	ljmp	00114$
      000579                       2174 00138$:
                                   2175 ;	../contiki-sensinode/core/net/rime/rudolph2.c:263: if(c->flags & FLAG_LAST_SENT) {
      000579 EF               [12] 2176 	mov	a,r7
      00057A 30 E0 0A         [24] 2177 	jnb	acc.0,00102$
                                   2178 ;	../contiki-sensinode/core/net/rime/rudolph2.c:264: interval = STEADY_INTERVAL;
      00057D A8 81            [24] 2179 	mov	r0,sp
      00057F 18               [12] 2180 	dec	r0
      000580 76 00            [12] 2181 	mov	@r0,#0x00
      000582 08               [12] 2182 	inc	r0
      000583 76 08            [12] 2183 	mov	@r0,#0x08
      000585 80 08            [24] 2184 	sjmp	00103$
      000587                       2185 00102$:
                                   2186 ;	../contiki-sensinode/core/net/rime/rudolph2.c:266: interval = SEND_INTERVAL;
      000587 A8 81            [24] 2187 	mov	r0,sp
      000589 18               [12] 2188 	dec	r0
      00058A 76 40            [12] 2189 	mov	@r0,#0x40
      00058C 08               [12] 2190 	inc	r0
      00058D 76 00            [12] 2191 	mov	@r0,#0x00
      00058F                       2192 00103$:
                                   2193 ;	../contiki-sensinode/core/net/rime/rudolph2.c:270: len = send_data(c, interval);
      00058F C0 04            [24] 2194 	push	ar4
      000591 C0 03            [24] 2195 	push	ar3
      000593 C0 02            [24] 2196 	push	ar2
      000595 E5 81            [12] 2197 	mov	a,sp
      000597 24 FC            [12] 2198 	add	a,#0xfc
      000599 F8               [12] 2199 	mov	r0,a
      00059A E6               [12] 2200 	mov	a,@r0
      00059B C0 E0            [24] 2201 	push	acc
      00059D 08               [12] 2202 	inc	r0
      00059E E6               [12] 2203 	mov	a,@r0
      00059F C0 E0            [24] 2204 	push	acc
      0005A1 E5 81            [12] 2205 	mov	a,sp
      0005A3 24 F7            [12] 2206 	add	a,#0xf7
      0005A5 F8               [12] 2207 	mov	r0,a
      0005A6 86 82            [24] 2208 	mov	dpl,@r0
      0005A8 08               [12] 2209 	inc	r0
      0005A9 86 83            [24] 2210 	mov	dph,@r0
      0005AB 08               [12] 2211 	inc	r0
      0005AC 86 F0            [24] 2212 	mov	b,@r0
      0005AE 12r03rBF         [24] 2213 	lcall	_send_data
      0005B1 AE 82            [24] 2214 	mov	r6,dpl
      0005B3 AF 83            [24] 2215 	mov	r7,dph
      0005B5 15 81            [12] 2216 	dec	sp
      0005B7 15 81            [12] 2217 	dec	sp
      0005B9 D0 02            [24] 2218 	pop	ar2
      0005BB D0 03            [24] 2219 	pop	ar3
      0005BD D0 04            [24] 2220 	pop	ar4
      0005BF 8F 05            [24] 2221 	mov	ar5,r7
                                   2222 ;	../contiki-sensinode/core/net/rime/rudolph2.c:272: if(len < RUDOLPH2_DATASIZE) {
      0005C1 C3               [12] 2223 	clr	c
      0005C2 EE               [12] 2224 	mov	a,r6
      0005C3 94 40            [12] 2225 	subb	a,#0x40
      0005C5 ED               [12] 2226 	mov	a,r5
      0005C6 64 80            [12] 2227 	xrl	a,#0x80
      0005C8 94 80            [12] 2228 	subb	a,#0x80
      0005CA 50 19            [24] 2229 	jnc	00105$
                                   2230 ;	../contiki-sensinode/core/net/rime/rudolph2.c:273: c->flags |= FLAG_LAST_SENT;
      0005CC 8A 82            [24] 2231 	mov	dpl,r2
      0005CE 8B 83            [24] 2232 	mov	dph,r3
      0005D0 8C F0            [24] 2233 	mov	b,r4
      0005D2 12r00r00         [24] 2234 	lcall	__gptrget
      0005D5 FF               [12] 2235 	mov	r7,a
      0005D6 43 07 01         [24] 2236 	orl	ar7,#0x01
      0005D9 8A 82            [24] 2237 	mov	dpl,r2
      0005DB 8B 83            [24] 2238 	mov	dph,r3
      0005DD 8C F0            [24] 2239 	mov	b,r4
      0005DF EF               [12] 2240 	mov	a,r7
      0005E0 12r00r00         [24] 2241 	lcall	__gptrput
      0005E3 80 17            [24] 2242 	sjmp	00106$
      0005E5                       2243 00105$:
                                   2244 ;	../contiki-sensinode/core/net/rime/rudolph2.c:275: c->flags &= ~FLAG_LAST_SENT;
      0005E5 8A 82            [24] 2245 	mov	dpl,r2
      0005E7 8B 83            [24] 2246 	mov	dph,r3
      0005E9 8C F0            [24] 2247 	mov	b,r4
      0005EB 12r00r00         [24] 2248 	lcall	__gptrget
      0005EE FF               [12] 2249 	mov	r7,a
      0005EF 53 07 FE         [24] 2250 	anl	ar7,#0xFE
      0005F2 8A 82            [24] 2251 	mov	dpl,r2
      0005F4 8B 83            [24] 2252 	mov	dph,r3
      0005F6 8C F0            [24] 2253 	mov	b,r4
      0005F8 EF               [12] 2254 	mov	a,r7
      0005F9 12r00r00         [24] 2255 	lcall	__gptrput
                                   2256 ;	../contiki-sensinode/core/net/rime/rudolph2.c:284: ctimer_set(&c->t, interval, timed_send, c);
                                   2257 ;	../contiki-sensinode/core/net/rime/rudolph2.c:275: c->flags &= ~FLAG_LAST_SENT;
      0005FC                       2258 00106$:
                                   2259 ;	../contiki-sensinode/core/net/rime/rudolph2.c:278: if(c->nacks == 0 &&
      0005FC E5 81            [12] 2260 	mov	a,sp
      0005FE 24 FC            [12] 2261 	add	a,#0xfc
      000600 F8               [12] 2262 	mov	r0,a
      000601 74 47            [12] 2263 	mov	a,#0x47
      000603 26               [12] 2264 	add	a,@r0
      000604 FA               [12] 2265 	mov	r2,a
      000605 E4               [12] 2266 	clr	a
      000606 08               [12] 2267 	inc	r0
      000607 36               [12] 2268 	addc	a,@r0
      000608 FB               [12] 2269 	mov	r3,a
      000609 08               [12] 2270 	inc	r0
      00060A 86 04            [24] 2271 	mov	ar4,@r0
      00060C 8A 82            [24] 2272 	mov	dpl,r2
      00060E 8B 83            [24] 2273 	mov	dph,r3
      000610 8C F0            [24] 2274 	mov	b,r4
      000612 12r00r00         [24] 2275 	lcall	__gptrget
      000615 60 03            [24] 2276 	jz	00141$
      000617 02r06rBA         [24] 2277 	ljmp	00108$
      00061A                       2278 00141$:
                                   2279 ;	../contiki-sensinode/core/net/rime/rudolph2.c:279: len == RUDOLPH2_DATASIZE &&
      00061A BE 40 05         [24] 2280 	cjne	r6,#0x40,00142$
      00061D BD 00 02         [24] 2281 	cjne	r5,#0x00,00142$
      000620 80 03            [24] 2282 	sjmp	00143$
      000622                       2283 00142$:
      000622 02r06rBA         [24] 2284 	ljmp	00108$
      000625                       2285 00143$:
                                   2286 ;	../contiki-sensinode/core/net/rime/rudolph2.c:280: c->snd_nxt + 1 < c->rcv_nxt) {
      000625 C0 02            [24] 2287 	push	ar2
      000627 C0 03            [24] 2288 	push	ar3
      000629 C0 04            [24] 2289 	push	ar4
      00062B E5 81            [12] 2290 	mov	a,sp
      00062D 24 F9            [12] 2291 	add	a,#0xf9
      00062F F8               [12] 2292 	mov	r0,a
      000630 E5 81            [12] 2293 	mov	a,sp
      000632 24 F6            [12] 2294 	add	a,#0xf6
      000634 F9               [12] 2295 	mov	r1,a
      000635 74 40            [12] 2296 	mov	a,#0x40
      000637 26               [12] 2297 	add	a,@r0
      000638 F7               [12] 2298 	mov	@r1,a
      000639 E4               [12] 2299 	clr	a
      00063A 08               [12] 2300 	inc	r0
      00063B 36               [12] 2301 	addc	a,@r0
      00063C 09               [12] 2302 	inc	r1
      00063D F7               [12] 2303 	mov	@r1,a
      00063E 08               [12] 2304 	inc	r0
      00063F 09               [12] 2305 	inc	r1
      000640 E6               [12] 2306 	mov	a,@r0
      000641 F7               [12] 2307 	mov	@r1,a
      000642 E5 81            [12] 2308 	mov	a,sp
      000644 24 F6            [12] 2309 	add	a,#0xf6
      000646 F8               [12] 2310 	mov	r0,a
      000647 86 82            [24] 2311 	mov	dpl,@r0
      000649 08               [12] 2312 	inc	r0
      00064A 86 83            [24] 2313 	mov	dph,@r0
      00064C 08               [12] 2314 	inc	r0
      00064D 86 F0            [24] 2315 	mov	b,@r0
      00064F E5 81            [12] 2316 	mov	a,sp
      000651 24 F4            [12] 2317 	add	a,#0xf4
      000653 F9               [12] 2318 	mov	r1,a
      000654 12r00r00         [24] 2319 	lcall	__gptrget
      000657 F7               [12] 2320 	mov	@r1,a
      000658 A3               [24] 2321 	inc	dptr
      000659 12r00r00         [24] 2322 	lcall	__gptrget
      00065C 09               [12] 2323 	inc	r1
      00065D F7               [12] 2324 	mov	@r1,a
      00065E E5 81            [12] 2325 	mov	a,sp
      000660 24 F4            [12] 2326 	add	a,#0xf4
      000662 F8               [12] 2327 	mov	r0,a
      000663 74 01            [12] 2328 	mov	a,#0x01
      000665 26               [12] 2329 	add	a,@r0
      000666 FB               [12] 2330 	mov	r3,a
      000667 E4               [12] 2331 	clr	a
      000668 08               [12] 2332 	inc	r0
      000669 36               [12] 2333 	addc	a,@r0
      00066A FC               [12] 2334 	mov	r4,a
      00066B E5 81            [12] 2335 	mov	a,sp
      00066D 24 F9            [12] 2336 	add	a,#0xf9
      00066F F8               [12] 2337 	mov	r0,a
      000670 74 42            [12] 2338 	mov	a,#0x42
      000672 26               [12] 2339 	add	a,@r0
      000673 FA               [12] 2340 	mov	r2,a
      000674 E4               [12] 2341 	clr	a
      000675 08               [12] 2342 	inc	r0
      000676 36               [12] 2343 	addc	a,@r0
      000677 FE               [12] 2344 	mov	r6,a
      000678 08               [12] 2345 	inc	r0
      000679 86 07            [24] 2346 	mov	ar7,@r0
      00067B 8A 82            [24] 2347 	mov	dpl,r2
      00067D 8E 83            [24] 2348 	mov	dph,r6
      00067F 8F F0            [24] 2349 	mov	b,r7
      000681 12r00r00         [24] 2350 	lcall	__gptrget
      000684 FA               [12] 2351 	mov	r2,a
      000685 A3               [24] 2352 	inc	dptr
      000686 12r00r00         [24] 2353 	lcall	__gptrget
      000689 FE               [12] 2354 	mov	r6,a
      00068A C3               [12] 2355 	clr	c
      00068B EB               [12] 2356 	mov	a,r3
      00068C 9A               [12] 2357 	subb	a,r2
      00068D EC               [12] 2358 	mov	a,r4
      00068E 9E               [12] 2359 	subb	a,r6
      00068F D0 04            [24] 2360 	pop	ar4
      000691 D0 03            [24] 2361 	pop	ar3
      000693 D0 02            [24] 2362 	pop	ar2
      000695 50 23            [24] 2363 	jnc	00108$
                                   2364 ;	../contiki-sensinode/core/net/rime/rudolph2.c:281: c->snd_nxt++;
      000697 E5 81            [12] 2365 	mov	a,sp
      000699 24 F7            [12] 2366 	add	a,#0xf7
      00069B F8               [12] 2367 	mov	r0,a
      00069C 74 01            [12] 2368 	mov	a,#0x01
      00069E 26               [12] 2369 	add	a,@r0
      00069F FE               [12] 2370 	mov	r6,a
      0006A0 E4               [12] 2371 	clr	a
      0006A1 08               [12] 2372 	inc	r0
      0006A2 36               [12] 2373 	addc	a,@r0
      0006A3 FF               [12] 2374 	mov	r7,a
      0006A4 E5 81            [12] 2375 	mov	a,sp
      0006A6 24 F9            [12] 2376 	add	a,#0xf9
      0006A8 F8               [12] 2377 	mov	r0,a
      0006A9 86 82            [24] 2378 	mov	dpl,@r0
      0006AB 08               [12] 2379 	inc	r0
      0006AC 86 83            [24] 2380 	mov	dph,@r0
      0006AE 08               [12] 2381 	inc	r0
      0006AF 86 F0            [24] 2382 	mov	b,@r0
      0006B1 EE               [12] 2383 	mov	a,r6
      0006B2 12r00r00         [24] 2384 	lcall	__gptrput
      0006B5 A3               [24] 2385 	inc	dptr
      0006B6 EF               [12] 2386 	mov	a,r7
      0006B7 12r00r00         [24] 2387 	lcall	__gptrput
      0006BA                       2388 00108$:
                                   2389 ;	../contiki-sensinode/core/net/rime/rudolph2.c:283: c->nacks = 0;
      0006BA 8A 82            [24] 2390 	mov	dpl,r2
      0006BC 8B 83            [24] 2391 	mov	dph,r3
      0006BE 8C F0            [24] 2392 	mov	b,r4
      0006C0 E4               [12] 2393 	clr	a
      0006C1 12r00r00         [24] 2394 	lcall	__gptrput
                                   2395 ;	../contiki-sensinode/core/net/rime/rudolph2.c:284: ctimer_set(&c->t, interval, timed_send, c);
      0006C4 E5 81            [12] 2396 	mov	a,sp
      0006C6 24 FC            [12] 2397 	add	a,#0xfc
      0006C8 F8               [12] 2398 	mov	r0,a
      0006C9 86 05            [24] 2399 	mov	ar5,@r0
      0006CB 08               [12] 2400 	inc	r0
      0006CC 86 06            [24] 2401 	mov	ar6,@r0
      0006CE 08               [12] 2402 	inc	r0
      0006CF 86 07            [24] 2403 	mov	ar7,@r0
      0006D1 E5 81            [12] 2404 	mov	a,sp
      0006D3 24 FC            [12] 2405 	add	a,#0xfc
      0006D5 F8               [12] 2406 	mov	r0,a
      0006D6 74 2B            [12] 2407 	mov	a,#0x2B
      0006D8 26               [12] 2408 	add	a,@r0
      0006D9 FA               [12] 2409 	mov	r2,a
      0006DA E4               [12] 2410 	clr	a
      0006DB 08               [12] 2411 	inc	r0
      0006DC 36               [12] 2412 	addc	a,@r0
      0006DD FB               [12] 2413 	mov	r3,a
      0006DE 08               [12] 2414 	inc	r0
      0006DF 86 04            [24] 2415 	mov	ar4,@r0
      0006E1 C0 05            [24] 2416 	push	ar5
      0006E3 C0 06            [24] 2417 	push	ar6
      0006E5 C0 07            [24] 2418 	push	ar7
      0006E7 74r39            [12] 2419 	mov	a,#_timed_send
      0006E9 C0 E0            [24] 2420 	push	acc
      0006EB 74s05            [12] 2421 	mov	a,#(_timed_send >> 8)
      0006ED C0 E0            [24] 2422 	push	acc
      0006EF E5 81            [12] 2423 	mov	a,sp
      0006F1 24 FA            [12] 2424 	add	a,#0xfa
      0006F3 F8               [12] 2425 	mov	r0,a
      0006F4 E6               [12] 2426 	mov	a,@r0
      0006F5 C0 E0            [24] 2427 	push	acc
      0006F7 08               [12] 2428 	inc	r0
      0006F8 E6               [12] 2429 	mov	a,@r0
      0006F9 C0 E0            [24] 2430 	push	acc
      0006FB 8A 82            [24] 2431 	mov	dpl,r2
      0006FD 8B 83            [24] 2432 	mov	dph,r3
      0006FF 8C F0            [24] 2433 	mov	b,r4
      000701 12r00r00         [24] 2434 	lcall	_ctimer_set
      000704 E5 81            [12] 2435 	mov	a,sp
      000706 24 F9            [12] 2436 	add	a,#0xf9
      000708 F5 81            [12] 2437 	mov	sp,a
      00070A                       2438 00114$:
      00070A E5 81            [12] 2439 	mov	a,sp
      00070C 24 F6            [12] 2440 	add	a,#0xF6
      00070E F5 81            [12] 2441 	mov	sp,a
      000710 22               [24] 2442 	ret
                                   2443 ;------------------------------------------------------------
                                   2444 ;Allocation info for local variables in function 'recv'
                                   2445 ;------------------------------------------------------------
                                   2446 ;polite                    Allocated to registers r5 r6 r7 
                                   2447 ;c                         Allocated to stack - sp -2
                                   2448 ;hdr                       Allocated to stack - sp -5
                                   2449 ;len                       Allocated to registers r4 r3 
                                   2450 ;sloc0                     Allocated to stack - sp -13
                                   2451 ;sloc1                     Allocated to stack - sp +1
                                   2452 ;sloc2                     Allocated to stack - sp -10
                                   2453 ;sloc3                     Allocated to stack - sp -8
                                   2454 ;------------------------------------------------------------
                                   2455 ;	../contiki-sensinode/core/net/rime/rudolph2.c:289: recv(struct polite_conn *polite)
                                   2456 ;	-----------------------------------------
                                   2457 ;	 function recv
                                   2458 ;	-----------------------------------------
      000711                       2459 _recv:
      000711 E5 81            [12] 2460 	mov	a,sp
      000713 24 0E            [12] 2461 	add	a,#0x0E
      000715 F5 81            [12] 2462 	mov	sp,a
      000717 AD 82            [24] 2463 	mov	r5,dpl
      000719 AE 83            [24] 2464 	mov	r6,dph
      00071B AF F0            [24] 2465 	mov	r7,b
                                   2466 ;	../contiki-sensinode/core/net/rime/rudolph2.c:291: struct rudolph2_conn *c = (struct rudolph2_conn *)polite;
      00071D A8 81            [24] 2467 	mov	r0,sp
      00071F 18               [12] 2468 	dec	r0
      000720 18               [12] 2469 	dec	r0
      000721 A6 05            [24] 2470 	mov	@r0,ar5
      000723 08               [12] 2471 	inc	r0
      000724 A6 06            [24] 2472 	mov	@r0,ar6
      000726 08               [12] 2473 	inc	r0
      000727 A6 07            [24] 2474 	mov	@r0,ar7
                                   2475 ;	../contiki-sensinode/core/net/rime/rudolph2.c:292: struct rudolph2_hdr *hdr = packetbuf_dataptr();
      000729 12r00r00         [24] 2476 	lcall	_packetbuf_dataptr
      00072C AA 82            [24] 2477 	mov	r2,dpl
      00072E AB 83            [24] 2478 	mov	r3,dph
      000730 AC F0            [24] 2479 	mov	r4,b
      000732 E5 81            [12] 2480 	mov	a,sp
      000734 24 FB            [12] 2481 	add	a,#0xfb
      000736 F8               [12] 2482 	mov	r0,a
      000737 A6 02            [24] 2483 	mov	@r0,ar2
      000739 08               [12] 2484 	inc	r0
      00073A A6 03            [24] 2485 	mov	@r0,ar3
      00073C 08               [12] 2486 	inc	r0
      00073D A6 04            [24] 2487 	mov	@r0,ar4
                                   2488 ;	../contiki-sensinode/core/net/rime/rudolph2.c:297: if(hdr->type == TYPE_NACK && hdr->hops_from_base > c->hops_from_base) {
      00073F E5 81            [12] 2489 	mov	a,sp
      000741 24 FB            [12] 2490 	add	a,#0xfb
      000743 F8               [12] 2491 	mov	r0,a
      000744 86 82            [24] 2492 	mov	dpl,@r0
      000746 08               [12] 2493 	inc	r0
      000747 86 83            [24] 2494 	mov	dph,@r0
      000749 08               [12] 2495 	inc	r0
      00074A 86 F0            [24] 2496 	mov	b,@r0
      00074C 12r00r00         [24] 2497 	lcall	__gptrget
      00074F FF               [12] 2498 	mov	r7,a
      000750 BF 01 02         [24] 2499 	cjne	r7,#0x01,00173$
      000753 80 03            [24] 2500 	sjmp	00174$
      000755                       2501 00173$:
      000755 02r08rD0         [24] 2502 	ljmp	00129$
      000758                       2503 00174$:
      000758 C0 07            [24] 2504 	push	ar7
      00075A E5 81            [12] 2505 	mov	a,sp
      00075C 24 FA            [12] 2506 	add	a,#0xfa
      00075E F8               [12] 2507 	mov	r0,a
      00075F 74 01            [12] 2508 	mov	a,#0x01
      000761 26               [12] 2509 	add	a,@r0
      000762 FD               [12] 2510 	mov	r5,a
      000763 E4               [12] 2511 	clr	a
      000764 08               [12] 2512 	inc	r0
      000765 36               [12] 2513 	addc	a,@r0
      000766 FE               [12] 2514 	mov	r6,a
      000767 08               [12] 2515 	inc	r0
      000768 86 07            [24] 2516 	mov	ar7,@r0
      00076A 8D 82            [24] 2517 	mov	dpl,r5
      00076C 8E 83            [24] 2518 	mov	dph,r6
      00076E 8F F0            [24] 2519 	mov	b,r7
      000770 12r00r00         [24] 2520 	lcall	__gptrget
      000773 FD               [12] 2521 	mov	r5,a
      000774 E5 81            [12] 2522 	mov	a,sp
      000776 24 FD            [12] 2523 	add	a,#0xfd
      000778 F8               [12] 2524 	mov	r0,a
      000779 74 46            [12] 2525 	mov	a,#0x46
      00077B 26               [12] 2526 	add	a,@r0
      00077C FC               [12] 2527 	mov	r4,a
      00077D E4               [12] 2528 	clr	a
      00077E 08               [12] 2529 	inc	r0
      00077F 36               [12] 2530 	addc	a,@r0
      000780 FE               [12] 2531 	mov	r6,a
      000781 08               [12] 2532 	inc	r0
      000782 86 07            [24] 2533 	mov	ar7,@r0
      000784 8C 82            [24] 2534 	mov	dpl,r4
      000786 8E 83            [24] 2535 	mov	dph,r6
      000788 8F F0            [24] 2536 	mov	b,r7
      00078A 12r00r00         [24] 2537 	lcall	__gptrget
      00078D FC               [12] 2538 	mov	r4,a
      00078E C3               [12] 2539 	clr	c
      00078F 9D               [12] 2540 	subb	a,r5
      000790 D0 07            [24] 2541 	pop	ar7
      000792 40 03            [24] 2542 	jc	00175$
      000794 02r08rD0         [24] 2543 	ljmp	00129$
      000797                       2544 00175$:
                                   2545 ;	../contiki-sensinode/core/net/rime/rudolph2.c:298: c->nacks++;
      000797 A8 81            [24] 2546 	mov	r0,sp
      000799 18               [12] 2547 	dec	r0
      00079A 18               [12] 2548 	dec	r0
      00079B 74 47            [12] 2549 	mov	a,#0x47
      00079D 26               [12] 2550 	add	a,@r0
      00079E FC               [12] 2551 	mov	r4,a
      00079F E4               [12] 2552 	clr	a
      0007A0 08               [12] 2553 	inc	r0
      0007A1 36               [12] 2554 	addc	a,@r0
      0007A2 FD               [12] 2555 	mov	r5,a
      0007A3 08               [12] 2556 	inc	r0
      0007A4 86 06            [24] 2557 	mov	ar6,@r0
      0007A6 8C 82            [24] 2558 	mov	dpl,r4
      0007A8 8D 83            [24] 2559 	mov	dph,r5
      0007AA 8E F0            [24] 2560 	mov	b,r6
      0007AC 12r00r00         [24] 2561 	lcall	__gptrget
      0007AF FB               [12] 2562 	mov	r3,a
      0007B0 0B               [12] 2563 	inc	r3
      0007B1 8C 82            [24] 2564 	mov	dpl,r4
      0007B3 8D 83            [24] 2565 	mov	dph,r5
      0007B5 8E F0            [24] 2566 	mov	b,r6
      0007B7 EB               [12] 2567 	mov	a,r3
      0007B8 12r00r00         [24] 2568 	lcall	__gptrput
                                   2569 ;	../contiki-sensinode/core/net/rime/rudolph2.c:303: if(hdr->version == c->version) {
      0007BB E5 81            [12] 2570 	mov	a,sp
      0007BD 24 FB            [12] 2571 	add	a,#0xfb
      0007BF F8               [12] 2572 	mov	r0,a
      0007C0 74 02            [12] 2573 	mov	a,#0x02
      0007C2 26               [12] 2574 	add	a,@r0
      0007C3 FC               [12] 2575 	mov	r4,a
      0007C4 E4               [12] 2576 	clr	a
      0007C5 08               [12] 2577 	inc	r0
      0007C6 36               [12] 2578 	addc	a,@r0
      0007C7 FD               [12] 2579 	mov	r5,a
      0007C8 08               [12] 2580 	inc	r0
      0007C9 86 06            [24] 2581 	mov	ar6,@r0
      0007CB 8C 82            [24] 2582 	mov	dpl,r4
      0007CD 8D 83            [24] 2583 	mov	dph,r5
      0007CF 8E F0            [24] 2584 	mov	b,r6
      0007D1 12r00r00         [24] 2585 	lcall	__gptrget
      0007D4 FD               [12] 2586 	mov	r5,a
      0007D5 A3               [24] 2587 	inc	dptr
      0007D6 12r00r00         [24] 2588 	lcall	__gptrget
      0007D9 FE               [12] 2589 	mov	r6,a
      0007DA A8 81            [24] 2590 	mov	r0,sp
      0007DC 18               [12] 2591 	dec	r0
      0007DD 18               [12] 2592 	dec	r0
      0007DE 74 44            [12] 2593 	mov	a,#0x44
      0007E0 26               [12] 2594 	add	a,@r0
      0007E1 FA               [12] 2595 	mov	r2,a
      0007E2 E4               [12] 2596 	clr	a
      0007E3 08               [12] 2597 	inc	r0
      0007E4 36               [12] 2598 	addc	a,@r0
      0007E5 FB               [12] 2599 	mov	r3,a
      0007E6 08               [12] 2600 	inc	r0
      0007E7 86 04            [24] 2601 	mov	ar4,@r0
      0007E9 8A 82            [24] 2602 	mov	dpl,r2
      0007EB 8B 83            [24] 2603 	mov	dph,r3
      0007ED 8C F0            [24] 2604 	mov	b,r4
      0007EF 12r00r00         [24] 2605 	lcall	__gptrget
      0007F2 FB               [12] 2606 	mov	r3,a
      0007F3 A3               [24] 2607 	inc	dptr
      0007F4 12r00r00         [24] 2608 	lcall	__gptrget
      0007F7 FC               [12] 2609 	mov	r4,a
      0007F8 ED               [12] 2610 	mov	a,r5
      0007F9 B5 03 06         [24] 2611 	cjne	a,ar3,00176$
      0007FC EE               [12] 2612 	mov	a,r6
      0007FD B5 04 02         [24] 2613 	cjne	a,ar4,00176$
      000800 80 03            [24] 2614 	sjmp	00177$
      000802                       2615 00176$:
      000802 02r08r88         [24] 2616 	ljmp	00106$
      000805                       2617 00177$:
                                   2618 ;	../contiki-sensinode/core/net/rime/rudolph2.c:304: if(hdr->chunk < c->rcv_nxt) {
      000805 E5 81            [12] 2619 	mov	a,sp
      000807 24 FB            [12] 2620 	add	a,#0xfb
      000809 F8               [12] 2621 	mov	r0,a
      00080A 74 04            [12] 2622 	mov	a,#0x04
      00080C 26               [12] 2623 	add	a,@r0
      00080D FF               [12] 2624 	mov	r7,a
      00080E E4               [12] 2625 	clr	a
      00080F 08               [12] 2626 	inc	r0
      000810 36               [12] 2627 	addc	a,@r0
      000811 FE               [12] 2628 	mov	r6,a
      000812 08               [12] 2629 	inc	r0
      000813 86 05            [24] 2630 	mov	ar5,@r0
      000815 8F 82            [24] 2631 	mov	dpl,r7
      000817 8E 83            [24] 2632 	mov	dph,r6
      000819 8D F0            [24] 2633 	mov	b,r5
      00081B 12r00r00         [24] 2634 	lcall	__gptrget
      00081E FF               [12] 2635 	mov	r7,a
      00081F A3               [24] 2636 	inc	dptr
      000820 12r00r00         [24] 2637 	lcall	__gptrget
      000823 FE               [12] 2638 	mov	r6,a
      000824 A8 81            [24] 2639 	mov	r0,sp
      000826 18               [12] 2640 	dec	r0
      000827 18               [12] 2641 	dec	r0
      000828 74 42            [12] 2642 	mov	a,#0x42
      00082A 26               [12] 2643 	add	a,@r0
      00082B FD               [12] 2644 	mov	r5,a
      00082C E4               [12] 2645 	clr	a
      00082D 08               [12] 2646 	inc	r0
      00082E 36               [12] 2647 	addc	a,@r0
      00082F FC               [12] 2648 	mov	r4,a
      000830 08               [12] 2649 	inc	r0
      000831 86 03            [24] 2650 	mov	ar3,@r0
      000833 8D 82            [24] 2651 	mov	dpl,r5
      000835 8C 83            [24] 2652 	mov	dph,r4
      000837 8B F0            [24] 2653 	mov	b,r3
      000839 12r00r00         [24] 2654 	lcall	__gptrget
      00083C FD               [12] 2655 	mov	r5,a
      00083D A3               [24] 2656 	inc	dptr
      00083E 12r00r00         [24] 2657 	lcall	__gptrget
      000841 FC               [12] 2658 	mov	r4,a
      000842 C3               [12] 2659 	clr	c
      000843 EF               [12] 2660 	mov	a,r7
      000844 9D               [12] 2661 	subb	a,r5
      000845 EE               [12] 2662 	mov	a,r6
      000846 9C               [12] 2663 	subb	a,r4
      000847 40 03            [24] 2664 	jc	00178$
      000849 02r0Cr53         [24] 2665 	ljmp	00132$
      00084C                       2666 00178$:
                                   2667 ;	../contiki-sensinode/core/net/rime/rudolph2.c:305: c->snd_nxt = hdr->chunk;
      00084C A8 81            [24] 2668 	mov	r0,sp
      00084E 18               [12] 2669 	dec	r0
      00084F 18               [12] 2670 	dec	r0
      000850 74 40            [12] 2671 	mov	a,#0x40
      000852 26               [12] 2672 	add	a,@r0
      000853 FD               [12] 2673 	mov	r5,a
      000854 E4               [12] 2674 	clr	a
      000855 08               [12] 2675 	inc	r0
      000856 36               [12] 2676 	addc	a,@r0
      000857 FC               [12] 2677 	mov	r4,a
      000858 08               [12] 2678 	inc	r0
      000859 86 03            [24] 2679 	mov	ar3,@r0
      00085B 8D 82            [24] 2680 	mov	dpl,r5
      00085D 8C 83            [24] 2681 	mov	dph,r4
      00085F 8B F0            [24] 2682 	mov	b,r3
      000861 EF               [12] 2683 	mov	a,r7
      000862 12r00r00         [24] 2684 	lcall	__gptrput
      000865 A3               [24] 2685 	inc	dptr
      000866 EE               [12] 2686 	mov	a,r6
      000867 12r00r00         [24] 2687 	lcall	__gptrput
                                   2688 ;	../contiki-sensinode/core/net/rime/rudolph2.c:306: send_data(c, SEND_INTERVAL);
      00086A 74 40            [12] 2689 	mov	a,#0x40
      00086C C0 E0            [24] 2690 	push	acc
      00086E E4               [12] 2691 	clr	a
      00086F C0 E0            [24] 2692 	push	acc
      000871 E5 81            [12] 2693 	mov	a,sp
      000873 24 FC            [12] 2694 	add	a,#0xfc
      000875 F8               [12] 2695 	mov	r0,a
      000876 86 82            [24] 2696 	mov	dpl,@r0
      000878 08               [12] 2697 	inc	r0
      000879 86 83            [24] 2698 	mov	dph,@r0
      00087B 08               [12] 2699 	inc	r0
      00087C 86 F0            [24] 2700 	mov	b,@r0
      00087E 12r03rBF         [24] 2701 	lcall	_send_data
      000881 15 81            [12] 2702 	dec	sp
      000883 15 81            [12] 2703 	dec	sp
      000885 02r0Cr53         [24] 2704 	ljmp	00132$
      000888                       2705 00106$:
                                   2706 ;	../contiki-sensinode/core/net/rime/rudolph2.c:308: } else if(LT(hdr->version, c->version)) {
      000888 ED               [12] 2707 	mov	a,r5
      000889 C3               [12] 2708 	clr	c
      00088A 9B               [12] 2709 	subb	a,r3
      00088B FD               [12] 2710 	mov	r5,a
      00088C EE               [12] 2711 	mov	a,r6
      00088D 9C               [12] 2712 	subb	a,r4
      00088E FE               [12] 2713 	mov	r6,a
      00088F 20 E7 03         [24] 2714 	jb	acc.7,00179$
      000892 02r0Cr53         [24] 2715 	ljmp	00132$
      000895                       2716 00179$:
                                   2717 ;	../contiki-sensinode/core/net/rime/rudolph2.c:309: c->snd_nxt = 0;
      000895 A8 81            [24] 2718 	mov	r0,sp
      000897 18               [12] 2719 	dec	r0
      000898 18               [12] 2720 	dec	r0
      000899 74 40            [12] 2721 	mov	a,#0x40
      00089B 26               [12] 2722 	add	a,@r0
      00089C FC               [12] 2723 	mov	r4,a
      00089D E4               [12] 2724 	clr	a
      00089E 08               [12] 2725 	inc	r0
      00089F 36               [12] 2726 	addc	a,@r0
      0008A0 FD               [12] 2727 	mov	r5,a
      0008A1 08               [12] 2728 	inc	r0
      0008A2 86 06            [24] 2729 	mov	ar6,@r0
      0008A4 8C 82            [24] 2730 	mov	dpl,r4
      0008A6 8D 83            [24] 2731 	mov	dph,r5
      0008A8 8E F0            [24] 2732 	mov	b,r6
      0008AA E4               [12] 2733 	clr	a
      0008AB 12r00r00         [24] 2734 	lcall	__gptrput
      0008AE A3               [24] 2735 	inc	dptr
      0008AF 12r00r00         [24] 2736 	lcall	__gptrput
                                   2737 ;	../contiki-sensinode/core/net/rime/rudolph2.c:310: send_data(c, SEND_INTERVAL);
      0008B2 74 40            [12] 2738 	mov	a,#0x40
      0008B4 C0 E0            [24] 2739 	push	acc
      0008B6 E4               [12] 2740 	clr	a
      0008B7 C0 E0            [24] 2741 	push	acc
      0008B9 E5 81            [12] 2742 	mov	a,sp
      0008BB 24 FC            [12] 2743 	add	a,#0xfc
      0008BD F8               [12] 2744 	mov	r0,a
      0008BE 86 82            [24] 2745 	mov	dpl,@r0
      0008C0 08               [12] 2746 	inc	r0
      0008C1 86 83            [24] 2747 	mov	dph,@r0
      0008C3 08               [12] 2748 	inc	r0
      0008C4 86 F0            [24] 2749 	mov	b,@r0
      0008C6 12r03rBF         [24] 2750 	lcall	_send_data
      0008C9 15 81            [12] 2751 	dec	sp
      0008CB 15 81            [12] 2752 	dec	sp
      0008CD 02r0Cr53         [24] 2753 	ljmp	00132$
      0008D0                       2754 00129$:
                                   2755 ;	../contiki-sensinode/core/net/rime/rudolph2.c:312: } else if(hdr->type == TYPE_DATA) {
      0008D0 EF               [12] 2756 	mov	a,r7
      0008D1 60 03            [24] 2757 	jz	00180$
      0008D3 02r0Cr53         [24] 2758 	ljmp	00132$
      0008D6                       2759 00180$:
                                   2760 ;	../contiki-sensinode/core/net/rime/rudolph2.c:313: if(hdr->hops_from_base < c->hops_from_base) {
      0008D6 E5 81            [12] 2761 	mov	a,sp
      0008D8 24 FB            [12] 2762 	add	a,#0xfb
      0008DA F8               [12] 2763 	mov	r0,a
      0008DB 74 01            [12] 2764 	mov	a,#0x01
      0008DD 26               [12] 2765 	add	a,@r0
      0008DE FD               [12] 2766 	mov	r5,a
      0008DF E4               [12] 2767 	clr	a
      0008E0 08               [12] 2768 	inc	r0
      0008E1 36               [12] 2769 	addc	a,@r0
      0008E2 FE               [12] 2770 	mov	r6,a
      0008E3 08               [12] 2771 	inc	r0
      0008E4 86 07            [24] 2772 	mov	ar7,@r0
      0008E6 8D 82            [24] 2773 	mov	dpl,r5
      0008E8 8E 83            [24] 2774 	mov	dph,r6
      0008EA 8F F0            [24] 2775 	mov	b,r7
      0008EC 12r00r00         [24] 2776 	lcall	__gptrget
      0008EF FF               [12] 2777 	mov	r7,a
      0008F0 A8 81            [24] 2778 	mov	r0,sp
      0008F2 18               [12] 2779 	dec	r0
      0008F3 18               [12] 2780 	dec	r0
      0008F4 74 46            [12] 2781 	mov	a,#0x46
      0008F6 26               [12] 2782 	add	a,@r0
      0008F7 FC               [12] 2783 	mov	r4,a
      0008F8 E4               [12] 2784 	clr	a
      0008F9 08               [12] 2785 	inc	r0
      0008FA 36               [12] 2786 	addc	a,@r0
      0008FB FD               [12] 2787 	mov	r5,a
      0008FC 08               [12] 2788 	inc	r0
      0008FD 86 06            [24] 2789 	mov	ar6,@r0
      0008FF 8C 82            [24] 2790 	mov	dpl,r4
      000901 8D 83            [24] 2791 	mov	dph,r5
      000903 8E F0            [24] 2792 	mov	b,r6
      000905 12r00r00         [24] 2793 	lcall	__gptrget
      000908 FB               [12] 2794 	mov	r3,a
      000909 C3               [12] 2795 	clr	c
      00090A EF               [12] 2796 	mov	a,r7
      00090B 9B               [12] 2797 	subb	a,r3
      00090C 40 03            [24] 2798 	jc	00181$
      00090E 02r0Cr53         [24] 2799 	ljmp	00132$
      000911                       2800 00181$:
                                   2801 ;	../contiki-sensinode/core/net/rime/rudolph2.c:316: c->hops_from_base = hdr->hops_from_base + 1;
      000911 0F               [12] 2802 	inc	r7
      000912 8C 82            [24] 2803 	mov	dpl,r4
      000914 8D 83            [24] 2804 	mov	dph,r5
      000916 8E F0            [24] 2805 	mov	b,r6
      000918 EF               [12] 2806 	mov	a,r7
      000919 12r00r00         [24] 2807 	lcall	__gptrput
                                   2808 ;	../contiki-sensinode/core/net/rime/rudolph2.c:317: if(LT(c->version, hdr->version)) {
      00091C A8 81            [24] 2809 	mov	r0,sp
      00091E 18               [12] 2810 	dec	r0
      00091F 18               [12] 2811 	dec	r0
      000920 E5 81            [12] 2812 	mov	a,sp
      000922 24 F3            [12] 2813 	add	a,#0xf3
      000924 F9               [12] 2814 	mov	r1,a
      000925 74 44            [12] 2815 	mov	a,#0x44
      000927 26               [12] 2816 	add	a,@r0
      000928 F7               [12] 2817 	mov	@r1,a
      000929 E4               [12] 2818 	clr	a
      00092A 08               [12] 2819 	inc	r0
      00092B 36               [12] 2820 	addc	a,@r0
      00092C 09               [12] 2821 	inc	r1
      00092D F7               [12] 2822 	mov	@r1,a
      00092E 08               [12] 2823 	inc	r0
      00092F 09               [12] 2824 	inc	r1
      000930 E6               [12] 2825 	mov	a,@r0
      000931 F7               [12] 2826 	mov	@r1,a
      000932 E5 81            [12] 2827 	mov	a,sp
      000934 24 F3            [12] 2828 	add	a,#0xf3
      000936 F8               [12] 2829 	mov	r0,a
      000937 86 82            [24] 2830 	mov	dpl,@r0
      000939 08               [12] 2831 	inc	r0
      00093A 86 83            [24] 2832 	mov	dph,@r0
      00093C 08               [12] 2833 	inc	r0
      00093D 86 F0            [24] 2834 	mov	b,@r0
      00093F 12r00r00         [24] 2835 	lcall	__gptrget
      000942 FE               [12] 2836 	mov	r6,a
      000943 A3               [24] 2837 	inc	dptr
      000944 12r00r00         [24] 2838 	lcall	__gptrget
      000947 FD               [12] 2839 	mov	r5,a
      000948 E5 81            [12] 2840 	mov	a,sp
      00094A 24 FB            [12] 2841 	add	a,#0xfb
      00094C F8               [12] 2842 	mov	r0,a
      00094D 74 02            [12] 2843 	mov	a,#0x02
      00094F 26               [12] 2844 	add	a,@r0
      000950 FA               [12] 2845 	mov	r2,a
      000951 E4               [12] 2846 	clr	a
      000952 08               [12] 2847 	inc	r0
      000953 36               [12] 2848 	addc	a,@r0
      000954 FB               [12] 2849 	mov	r3,a
      000955 08               [12] 2850 	inc	r0
      000956 86 04            [24] 2851 	mov	ar4,@r0
      000958 8A 82            [24] 2852 	mov	dpl,r2
      00095A 8B 83            [24] 2853 	mov	dph,r3
      00095C 8C F0            [24] 2854 	mov	b,r4
      00095E 12r00r00         [24] 2855 	lcall	__gptrget
      000961 FB               [12] 2856 	mov	r3,a
      000962 A3               [24] 2857 	inc	dptr
      000963 12r00r00         [24] 2858 	lcall	__gptrget
      000966 FC               [12] 2859 	mov	r4,a
      000967 EE               [12] 2860 	mov	a,r6
      000968 C3               [12] 2861 	clr	c
      000969 9B               [12] 2862 	subb	a,r3
      00096A FA               [12] 2863 	mov	r2,a
      00096B ED               [12] 2864 	mov	a,r5
      00096C 9C               [12] 2865 	subb	a,r4
      00096D FF               [12] 2866 	mov	r7,a
      00096E 20 E7 03         [24] 2867 	jb	acc.7,00182$
      000971 02r0Ar72         [24] 2868 	ljmp	00122$
      000974                       2869 00182$:
                                   2870 ;	../contiki-sensinode/core/net/rime/rudolph2.c:321: c->version = hdr->version;
      000974 E5 81            [12] 2871 	mov	a,sp
      000976 24 F3            [12] 2872 	add	a,#0xf3
      000978 F8               [12] 2873 	mov	r0,a
      000979 86 82            [24] 2874 	mov	dpl,@r0
      00097B 08               [12] 2875 	inc	r0
      00097C 86 83            [24] 2876 	mov	dph,@r0
      00097E 08               [12] 2877 	inc	r0
      00097F 86 F0            [24] 2878 	mov	b,@r0
      000981 EB               [12] 2879 	mov	a,r3
      000982 12r00r00         [24] 2880 	lcall	__gptrput
      000985 A3               [24] 2881 	inc	dptr
      000986 EC               [12] 2882 	mov	a,r4
      000987 12r00r00         [24] 2883 	lcall	__gptrput
                                   2884 ;	../contiki-sensinode/core/net/rime/rudolph2.c:322: c->snd_nxt = c->rcv_nxt = 0;
      00098A A8 81            [24] 2885 	mov	r0,sp
      00098C 18               [12] 2886 	dec	r0
      00098D 18               [12] 2887 	dec	r0
      00098E 74 40            [12] 2888 	mov	a,#0x40
      000990 26               [12] 2889 	add	a,@r0
      000991 FD               [12] 2890 	mov	r5,a
      000992 E4               [12] 2891 	clr	a
      000993 08               [12] 2892 	inc	r0
      000994 36               [12] 2893 	addc	a,@r0
      000995 FC               [12] 2894 	mov	r4,a
      000996 08               [12] 2895 	inc	r0
      000997 86 03            [24] 2896 	mov	ar3,@r0
      000999 A8 81            [24] 2897 	mov	r0,sp
      00099B 18               [12] 2898 	dec	r0
      00099C 18               [12] 2899 	dec	r0
      00099D 74 42            [12] 2900 	mov	a,#0x42
      00099F 26               [12] 2901 	add	a,@r0
      0009A0 FA               [12] 2902 	mov	r2,a
      0009A1 E4               [12] 2903 	clr	a
      0009A2 08               [12] 2904 	inc	r0
      0009A3 36               [12] 2905 	addc	a,@r0
      0009A4 FE               [12] 2906 	mov	r6,a
      0009A5 08               [12] 2907 	inc	r0
      0009A6 86 07            [24] 2908 	mov	ar7,@r0
      0009A8 8A 82            [24] 2909 	mov	dpl,r2
      0009AA 8E 83            [24] 2910 	mov	dph,r6
      0009AC 8F F0            [24] 2911 	mov	b,r7
      0009AE E4               [12] 2912 	clr	a
      0009AF 12r00r00         [24] 2913 	lcall	__gptrput
      0009B2 A3               [24] 2914 	inc	dptr
      0009B3 12r00r00         [24] 2915 	lcall	__gptrput
      0009B6 8D 82            [24] 2916 	mov	dpl,r5
      0009B8 8C 83            [24] 2917 	mov	dph,r4
      0009BA 8B F0            [24] 2918 	mov	b,r3
      0009BC 12r00r00         [24] 2919 	lcall	__gptrput
      0009BF A3               [24] 2920 	inc	dptr
      0009C0 12r00r00         [24] 2921 	lcall	__gptrput
                                   2922 ;	../contiki-sensinode/core/net/rime/rudolph2.c:323: c->flags &= ~FLAG_LAST_RECEIVED;
      0009C3 A8 81            [24] 2923 	mov	r0,sp
      0009C5 18               [12] 2924 	dec	r0
      0009C6 18               [12] 2925 	dec	r0
      0009C7 74 48            [12] 2926 	mov	a,#0x48
      0009C9 26               [12] 2927 	add	a,@r0
      0009CA FD               [12] 2928 	mov	r5,a
      0009CB E4               [12] 2929 	clr	a
      0009CC 08               [12] 2930 	inc	r0
      0009CD 36               [12] 2931 	addc	a,@r0
      0009CE FE               [12] 2932 	mov	r6,a
      0009CF 08               [12] 2933 	inc	r0
      0009D0 86 07            [24] 2934 	mov	ar7,@r0
      0009D2 8D 82            [24] 2935 	mov	dpl,r5
      0009D4 8E 83            [24] 2936 	mov	dph,r6
      0009D6 8F F0            [24] 2937 	mov	b,r7
      0009D8 12r00r00         [24] 2938 	lcall	__gptrget
      0009DB FA               [12] 2939 	mov	r2,a
      0009DC 53 02 FD         [24] 2940 	anl	ar2,#0xFD
      0009DF 8D 82            [24] 2941 	mov	dpl,r5
      0009E1 8E 83            [24] 2942 	mov	dph,r6
      0009E3 8F F0            [24] 2943 	mov	b,r7
      0009E5 EA               [12] 2944 	mov	a,r2
      0009E6 12r00r00         [24] 2945 	lcall	__gptrput
                                   2946 ;	../contiki-sensinode/core/net/rime/rudolph2.c:324: c->flags &= ~FLAG_LAST_SENT;
      0009E9 8D 82            [24] 2947 	mov	dpl,r5
      0009EB 8E 83            [24] 2948 	mov	dph,r6
      0009ED 8F F0            [24] 2949 	mov	b,r7
      0009EF 12r00r00         [24] 2950 	lcall	__gptrget
      0009F2 FA               [12] 2951 	mov	r2,a
      0009F3 53 02 FE         [24] 2952 	anl	ar2,#0xFE
      0009F6 8D 82            [24] 2953 	mov	dpl,r5
      0009F8 8E 83            [24] 2954 	mov	dph,r6
      0009FA 8F F0            [24] 2955 	mov	b,r7
      0009FC EA               [12] 2956 	mov	a,r2
      0009FD 12r00r00         [24] 2957 	lcall	__gptrput
                                   2958 ;	../contiki-sensinode/core/net/rime/rudolph2.c:325: if(hdr->chunk != 0) {
      000A00 E5 81            [12] 2959 	mov	a,sp
      000A02 24 FB            [12] 2960 	add	a,#0xfb
      000A04 F8               [12] 2961 	mov	r0,a
      000A05 74 04            [12] 2962 	mov	a,#0x04
      000A07 26               [12] 2963 	add	a,@r0
      000A08 FD               [12] 2964 	mov	r5,a
      000A09 E4               [12] 2965 	clr	a
      000A0A 08               [12] 2966 	inc	r0
      000A0B 36               [12] 2967 	addc	a,@r0
      000A0C FE               [12] 2968 	mov	r6,a
      000A0D 08               [12] 2969 	inc	r0
      000A0E 86 07            [24] 2970 	mov	ar7,@r0
      000A10 8D 82            [24] 2971 	mov	dpl,r5
      000A12 8E 83            [24] 2972 	mov	dph,r6
      000A14 8F F0            [24] 2973 	mov	b,r7
      000A16 12r00r00         [24] 2974 	lcall	__gptrget
      000A19 FD               [12] 2975 	mov	r5,a
      000A1A A3               [24] 2976 	inc	dptr
      000A1B 12r00r00         [24] 2977 	lcall	__gptrget
      000A1E FE               [12] 2978 	mov	r6,a
      000A1F 4D               [12] 2979 	orl	a,r5
      000A20 60 12            [24] 2980 	jz	00109$
                                   2981 ;	../contiki-sensinode/core/net/rime/rudolph2.c:326: send_nack(c);
      000A22 A8 81            [24] 2982 	mov	r0,sp
      000A24 18               [12] 2983 	dec	r0
      000A25 18               [12] 2984 	dec	r0
      000A26 86 82            [24] 2985 	mov	dpl,@r0
      000A28 08               [12] 2986 	inc	r0
      000A29 86 83            [24] 2987 	mov	dph,@r0
      000A2B 08               [12] 2988 	inc	r0
      000A2C 86 F0            [24] 2989 	mov	b,@r0
      000A2E 12r04r2A         [24] 2990 	lcall	_send_nack
      000A31 02r0Cr53         [24] 2991 	ljmp	00132$
      000A34                       2992 00109$:
                                   2993 ;	../contiki-sensinode/core/net/rime/rudolph2.c:328: packetbuf_hdrreduce(sizeof(struct rudolph2_hdr));
      000A34 90 00 06         [24] 2994 	mov	dptr,#0x0006
      000A37 12r00r00         [24] 2995 	lcall	_packetbuf_hdrreduce
                                   2996 ;	../contiki-sensinode/core/net/rime/rudolph2.c:329: write_data(c, 0, packetbuf_dataptr(), packetbuf_totlen());
      000A3A 12r00r00         [24] 2997 	lcall	_packetbuf_totlen
      000A3D AE 82            [24] 2998 	mov	r6,dpl
      000A3F AC 83            [24] 2999 	mov	r4,dph
      000A41 C0 06            [24] 3000 	push	ar6
      000A43 C0 04            [24] 3001 	push	ar4
      000A45 12r00r00         [24] 3002 	lcall	_packetbuf_dataptr
      000A48 AA 82            [24] 3003 	mov	r2,dpl
      000A4A AD 83            [24] 3004 	mov	r5,dph
      000A4C AF F0            [24] 3005 	mov	r7,b
      000A4E C0 02            [24] 3006 	push	ar2
      000A50 C0 05            [24] 3007 	push	ar5
      000A52 C0 07            [24] 3008 	push	ar7
      000A54 E4               [12] 3009 	clr	a
      000A55 C0 E0            [24] 3010 	push	acc
      000A57 C0 E0            [24] 3011 	push	acc
      000A59 E5 81            [12] 3012 	mov	a,sp
      000A5B 24 F7            [12] 3013 	add	a,#0xf7
      000A5D F8               [12] 3014 	mov	r0,a
      000A5E 86 82            [24] 3015 	mov	dpl,@r0
      000A60 08               [12] 3016 	inc	r0
      000A61 86 83            [24] 3017 	mov	dph,@r0
      000A63 08               [12] 3018 	inc	r0
      000A64 86 F0            [24] 3019 	mov	b,@r0
      000A66 12r01rCF         [24] 3020 	lcall	_write_data
      000A69 E5 81            [12] 3021 	mov	a,sp
      000A6B 24 F9            [12] 3022 	add	a,#0xf9
      000A6D F5 81            [12] 3023 	mov	sp,a
      000A6F 02r0Cr53         [24] 3024 	ljmp	00132$
      000A72                       3025 00122$:
                                   3026 ;	../contiki-sensinode/core/net/rime/rudolph2.c:331: } else if(hdr->version == c->version) {
      000A72 EB               [12] 3027 	mov	a,r3
      000A73 B5 06 06         [24] 3028 	cjne	a,ar6,00184$
      000A76 EC               [12] 3029 	mov	a,r4
      000A77 B5 05 02         [24] 3030 	cjne	a,ar5,00184$
      000A7A 80 03            [24] 3031 	sjmp	00185$
      000A7C                       3032 00184$:
      000A7C 02r0Cr53         [24] 3033 	ljmp	00132$
      000A7F                       3034 00185$:
                                   3035 ;	../contiki-sensinode/core/net/rime/rudolph2.c:336: if(hdr->chunk == c->rcv_nxt) {
      000A7F E5 81            [12] 3036 	mov	a,sp
      000A81 24 FB            [12] 3037 	add	a,#0xfb
      000A83 F8               [12] 3038 	mov	r0,a
      000A84 E5 81            [12] 3039 	mov	a,sp
      000A86 24 F3            [12] 3040 	add	a,#0xf3
      000A88 F9               [12] 3041 	mov	r1,a
      000A89 74 04            [12] 3042 	mov	a,#0x04
      000A8B 26               [12] 3043 	add	a,@r0
      000A8C F7               [12] 3044 	mov	@r1,a
      000A8D E4               [12] 3045 	clr	a
      000A8E 08               [12] 3046 	inc	r0
      000A8F 36               [12] 3047 	addc	a,@r0
      000A90 09               [12] 3048 	inc	r1
      000A91 F7               [12] 3049 	mov	@r1,a
      000A92 08               [12] 3050 	inc	r0
      000A93 09               [12] 3051 	inc	r1
      000A94 E6               [12] 3052 	mov	a,@r0
      000A95 F7               [12] 3053 	mov	@r1,a
      000A96 E5 81            [12] 3054 	mov	a,sp
      000A98 24 F3            [12] 3055 	add	a,#0xf3
      000A9A F8               [12] 3056 	mov	r0,a
      000A9B 86 82            [24] 3057 	mov	dpl,@r0
      000A9D 08               [12] 3058 	inc	r0
      000A9E 86 83            [24] 3059 	mov	dph,@r0
      000AA0 08               [12] 3060 	inc	r0
      000AA1 86 F0            [24] 3061 	mov	b,@r0
      000AA3 12r00r00         [24] 3062 	lcall	__gptrget
      000AA6 FF               [12] 3063 	mov	r7,a
      000AA7 A3               [24] 3064 	inc	dptr
      000AA8 12r00r00         [24] 3065 	lcall	__gptrget
      000AAB FE               [12] 3066 	mov	r6,a
      000AAC A8 81            [24] 3067 	mov	r0,sp
      000AAE 18               [12] 3068 	dec	r0
      000AAF 18               [12] 3069 	dec	r0
      000AB0 74 42            [12] 3070 	mov	a,#0x42
      000AB2 26               [12] 3071 	add	a,@r0
      000AB3 FA               [12] 3072 	mov	r2,a
      000AB4 E4               [12] 3073 	clr	a
      000AB5 08               [12] 3074 	inc	r0
      000AB6 36               [12] 3075 	addc	a,@r0
      000AB7 FB               [12] 3076 	mov	r3,a
      000AB8 08               [12] 3077 	inc	r0
      000AB9 86 04            [24] 3078 	mov	ar4,@r0
      000ABB 8A 82            [24] 3079 	mov	dpl,r2
      000ABD 8B 83            [24] 3080 	mov	dph,r3
      000ABF 8C F0            [24] 3081 	mov	b,r4
      000AC1 12r00r00         [24] 3082 	lcall	__gptrget
      000AC4 FB               [12] 3083 	mov	r3,a
      000AC5 A3               [24] 3084 	inc	dptr
      000AC6 12r00r00         [24] 3085 	lcall	__gptrget
      000AC9 FC               [12] 3086 	mov	r4,a
      000ACA EF               [12] 3087 	mov	a,r7
      000ACB B5 03 06         [24] 3088 	cjne	a,ar3,00186$
      000ACE EE               [12] 3089 	mov	a,r6
      000ACF B5 04 02         [24] 3090 	cjne	a,ar4,00186$
      000AD2 80 03            [24] 3091 	sjmp	00187$
      000AD4                       3092 00186$:
      000AD4 02r0Cr3D         [24] 3093 	ljmp	00117$
      000AD7                       3094 00187$:
                                   3095 ;	../contiki-sensinode/core/net/rime/rudolph2.c:338: packetbuf_hdrreduce(sizeof(struct rudolph2_hdr));
      000AD7 90 00 06         [24] 3096 	mov	dptr,#0x0006
      000ADA 12r00r00         [24] 3097 	lcall	_packetbuf_hdrreduce
                                   3098 ;	../contiki-sensinode/core/net/rime/rudolph2.c:342: len = packetbuf_totlen();
      000ADD 12r00r00         [24] 3099 	lcall	_packetbuf_totlen
      000AE0 AF 82            [24] 3100 	mov	r7,dpl
      000AE2 AE 83            [24] 3101 	mov	r6,dph
      000AE4 8F 04            [24] 3102 	mov	ar4,r7
      000AE6 8E 03            [24] 3103 	mov	ar3,r6
                                   3104 ;	../contiki-sensinode/core/net/rime/rudolph2.c:343: write_data(c, hdr->chunk, packetbuf_dataptr(), packetbuf_totlen());
      000AE8 C0 04            [24] 3105 	push	ar4
      000AEA C0 03            [24] 3106 	push	ar3
      000AEC 12r00r00         [24] 3107 	lcall	_packetbuf_totlen
      000AEF C8               [12] 3108 	xch	a,r0
      000AF0 E5 81            [12] 3109 	mov	a,sp
      000AF2 24 F4            [12] 3110 	add	a,#0xf4
      000AF4 C8               [12] 3111 	xch	a,r0
      000AF5 A6 82            [24] 3112 	mov	@r0,dpl
      000AF7 08               [12] 3113 	inc	r0
      000AF8 A6 83            [24] 3114 	mov	@r0,dph
      000AFA 12r00r00         [24] 3115 	lcall	_packetbuf_dataptr
      000AFD AD 82            [24] 3116 	mov	r5,dpl
      000AFF AE 83            [24] 3117 	mov	r6,dph
      000B01 AF F0            [24] 3118 	mov	r7,b
      000B03 D0 03            [24] 3119 	pop	ar3
      000B05 D0 04            [24] 3120 	pop	ar4
      000B07 E5 81            [12] 3121 	mov	a,sp
      000B09 24 F8            [12] 3122 	add	a,#0xf8
      000B0B F8               [12] 3123 	mov	r0,a
      000B0C A6 05            [24] 3124 	mov	@r0,ar5
      000B0E 08               [12] 3125 	inc	r0
      000B0F A6 06            [24] 3126 	mov	@r0,ar6
      000B11 08               [12] 3127 	inc	r0
      000B12 A6 07            [24] 3128 	mov	@r0,ar7
      000B14 E5 81            [12] 3129 	mov	a,sp
      000B16 24 F3            [12] 3130 	add	a,#0xf3
      000B18 F8               [12] 3131 	mov	r0,a
      000B19 86 82            [24] 3132 	mov	dpl,@r0
      000B1B 08               [12] 3133 	inc	r0
      000B1C 86 83            [24] 3134 	mov	dph,@r0
      000B1E 08               [12] 3135 	inc	r0
      000B1F 86 F0            [24] 3136 	mov	b,@r0
      000B21 12r00r00         [24] 3137 	lcall	__gptrget
      000B24 FA               [12] 3138 	mov	r2,a
      000B25 A3               [24] 3139 	inc	dptr
      000B26 12r00r00         [24] 3140 	lcall	__gptrget
      000B29 FF               [12] 3141 	mov	r7,a
      000B2A C0 04            [24] 3142 	push	ar4
      000B2C C0 03            [24] 3143 	push	ar3
      000B2E E5 81            [12] 3144 	mov	a,sp
      000B30 24 F4            [12] 3145 	add	a,#0xf4
      000B32 F8               [12] 3146 	mov	r0,a
      000B33 E6               [12] 3147 	mov	a,@r0
      000B34 C0 E0            [24] 3148 	push	acc
      000B36 08               [12] 3149 	inc	r0
      000B37 E6               [12] 3150 	mov	a,@r0
      000B38 C0 E0            [24] 3151 	push	acc
      000B3A E5 81            [12] 3152 	mov	a,sp
      000B3C 24 F4            [12] 3153 	add	a,#0xf4
      000B3E F8               [12] 3154 	mov	r0,a
      000B3F E6               [12] 3155 	mov	a,@r0
      000B40 C0 E0            [24] 3156 	push	acc
      000B42 08               [12] 3157 	inc	r0
      000B43 E6               [12] 3158 	mov	a,@r0
      000B44 C0 E0            [24] 3159 	push	acc
      000B46 08               [12] 3160 	inc	r0
      000B47 E6               [12] 3161 	mov	a,@r0
      000B48 C0 E0            [24] 3162 	push	acc
      000B4A C0 02            [24] 3163 	push	ar2
      000B4C C0 07            [24] 3164 	push	ar7
      000B4E E5 81            [12] 3165 	mov	a,sp
      000B50 24 F5            [12] 3166 	add	a,#0xf5
      000B52 F8               [12] 3167 	mov	r0,a
      000B53 86 82            [24] 3168 	mov	dpl,@r0
      000B55 08               [12] 3169 	inc	r0
      000B56 86 83            [24] 3170 	mov	dph,@r0
      000B58 08               [12] 3171 	inc	r0
      000B59 86 F0            [24] 3172 	mov	b,@r0
      000B5B 12r01rCF         [24] 3173 	lcall	_write_data
      000B5E E5 81            [12] 3174 	mov	a,sp
      000B60 24 F9            [12] 3175 	add	a,#0xf9
      000B62 F5 81            [12] 3176 	mov	sp,a
      000B64 D0 03            [24] 3177 	pop	ar3
      000B66 D0 04            [24] 3178 	pop	ar4
                                   3179 ;	../contiki-sensinode/core/net/rime/rudolph2.c:344: c->rcv_nxt++;
      000B68 A8 81            [24] 3180 	mov	r0,sp
      000B6A 18               [12] 3181 	dec	r0
      000B6B 18               [12] 3182 	dec	r0
      000B6C E5 81            [12] 3183 	mov	a,sp
      000B6E 24 F8            [12] 3184 	add	a,#0xf8
      000B70 F9               [12] 3185 	mov	r1,a
      000B71 74 42            [12] 3186 	mov	a,#0x42
      000B73 26               [12] 3187 	add	a,@r0
      000B74 F7               [12] 3188 	mov	@r1,a
      000B75 E4               [12] 3189 	clr	a
      000B76 08               [12] 3190 	inc	r0
      000B77 36               [12] 3191 	addc	a,@r0
      000B78 09               [12] 3192 	inc	r1
      000B79 F7               [12] 3193 	mov	@r1,a
      000B7A 08               [12] 3194 	inc	r0
      000B7B 09               [12] 3195 	inc	r1
      000B7C E6               [12] 3196 	mov	a,@r0
      000B7D F7               [12] 3197 	mov	@r1,a
      000B7E E5 81            [12] 3198 	mov	a,sp
      000B80 24 F8            [12] 3199 	add	a,#0xf8
      000B82 F8               [12] 3200 	mov	r0,a
      000B83 86 82            [24] 3201 	mov	dpl,@r0
      000B85 08               [12] 3202 	inc	r0
      000B86 86 83            [24] 3203 	mov	dph,@r0
      000B88 08               [12] 3204 	inc	r0
      000B89 86 F0            [24] 3205 	mov	b,@r0
      000B8B 12r00r00         [24] 3206 	lcall	__gptrget
      000B8E FA               [12] 3207 	mov	r2,a
      000B8F A3               [24] 3208 	inc	dptr
      000B90 12r00r00         [24] 3209 	lcall	__gptrget
      000B93 FF               [12] 3210 	mov	r7,a
      000B94 0A               [12] 3211 	inc	r2
      000B95 BA 00 01         [24] 3212 	cjne	r2,#0x00,00188$
      000B98 0F               [12] 3213 	inc	r7
      000B99                       3214 00188$:
      000B99 E5 81            [12] 3215 	mov	a,sp
      000B9B 24 F8            [12] 3216 	add	a,#0xf8
      000B9D F8               [12] 3217 	mov	r0,a
      000B9E 86 82            [24] 3218 	mov	dpl,@r0
      000BA0 08               [12] 3219 	inc	r0
      000BA1 86 83            [24] 3220 	mov	dph,@r0
      000BA3 08               [12] 3221 	inc	r0
      000BA4 86 F0            [24] 3222 	mov	b,@r0
      000BA6 EA               [12] 3223 	mov	a,r2
      000BA7 12r00r00         [24] 3224 	lcall	__gptrput
      000BAA A3               [24] 3225 	inc	dptr
      000BAB EF               [12] 3226 	mov	a,r7
      000BAC 12r00r00         [24] 3227 	lcall	__gptrput
                                   3228 ;	../contiki-sensinode/core/net/rime/rudolph2.c:345: if(len < RUDOLPH2_DATASIZE) {
      000BAF C3               [12] 3229 	clr	c
      000BB0 EC               [12] 3230 	mov	a,r4
      000BB1 94 40            [12] 3231 	subb	a,#0x40
      000BB3 EB               [12] 3232 	mov	a,r3
      000BB4 64 80            [12] 3233 	xrl	a,#0x80
      000BB6 94 80            [12] 3234 	subb	a,#0x80
      000BB8 40 03            [24] 3235 	jc	00189$
      000BBA 02r0Cr53         [24] 3236 	ljmp	00132$
      000BBD                       3237 00189$:
                                   3238 ;	../contiki-sensinode/core/net/rime/rudolph2.c:346: c->flags |= FLAG_LAST_RECEIVED;
      000BBD A8 81            [24] 3239 	mov	r0,sp
      000BBF 18               [12] 3240 	dec	r0
      000BC0 18               [12] 3241 	dec	r0
      000BC1 74 48            [12] 3242 	mov	a,#0x48
      000BC3 26               [12] 3243 	add	a,@r0
      000BC4 FD               [12] 3244 	mov	r5,a
      000BC5 E4               [12] 3245 	clr	a
      000BC6 08               [12] 3246 	inc	r0
      000BC7 36               [12] 3247 	addc	a,@r0
      000BC8 FE               [12] 3248 	mov	r6,a
      000BC9 08               [12] 3249 	inc	r0
      000BCA 86 07            [24] 3250 	mov	ar7,@r0
      000BCC 8D 82            [24] 3251 	mov	dpl,r5
      000BCE 8E 83            [24] 3252 	mov	dph,r6
      000BD0 8F F0            [24] 3253 	mov	b,r7
      000BD2 12r00r00         [24] 3254 	lcall	__gptrget
      000BD5 FA               [12] 3255 	mov	r2,a
      000BD6 43 02 02         [24] 3256 	orl	ar2,#0x02
      000BD9 8D 82            [24] 3257 	mov	dpl,r5
      000BDB 8E 83            [24] 3258 	mov	dph,r6
      000BDD 8F F0            [24] 3259 	mov	b,r7
      000BDF EA               [12] 3260 	mov	a,r2
      000BE0 12r00r00         [24] 3261 	lcall	__gptrput
                                   3262 ;	../contiki-sensinode/core/net/rime/rudolph2.c:347: send_data(c, RESEND_INTERVAL);
      000BE3 E4               [12] 3263 	clr	a
      000BE4 C0 E0            [24] 3264 	push	acc
      000BE6 04               [12] 3265 	inc	a
      000BE7 C0 E0            [24] 3266 	push	acc
      000BE9 E5 81            [12] 3267 	mov	a,sp
      000BEB 24 FC            [12] 3268 	add	a,#0xfc
      000BED F8               [12] 3269 	mov	r0,a
      000BEE 86 82            [24] 3270 	mov	dpl,@r0
      000BF0 08               [12] 3271 	inc	r0
      000BF1 86 83            [24] 3272 	mov	dph,@r0
      000BF3 08               [12] 3273 	inc	r0
      000BF4 86 F0            [24] 3274 	mov	b,@r0
      000BF6 12r03rBF         [24] 3275 	lcall	_send_data
      000BF9 15 81            [12] 3276 	dec	sp
      000BFB 15 81            [12] 3277 	dec	sp
                                   3278 ;	../contiki-sensinode/core/net/rime/rudolph2.c:348: ctimer_set(&c->t, RESEND_INTERVAL, timed_send, c);
      000BFD A8 81            [24] 3279 	mov	r0,sp
      000BFF 18               [12] 3280 	dec	r0
      000C00 18               [12] 3281 	dec	r0
      000C01 86 05            [24] 3282 	mov	ar5,@r0
      000C03 08               [12] 3283 	inc	r0
      000C04 86 04            [24] 3284 	mov	ar4,@r0
      000C06 08               [12] 3285 	inc	r0
      000C07 86 03            [24] 3286 	mov	ar3,@r0
      000C09 A8 81            [24] 3287 	mov	r0,sp
      000C0B 18               [12] 3288 	dec	r0
      000C0C 18               [12] 3289 	dec	r0
      000C0D 74 2B            [12] 3290 	mov	a,#0x2B
      000C0F 26               [12] 3291 	add	a,@r0
      000C10 FA               [12] 3292 	mov	r2,a
      000C11 E4               [12] 3293 	clr	a
      000C12 08               [12] 3294 	inc	r0
      000C13 36               [12] 3295 	addc	a,@r0
      000C14 FE               [12] 3296 	mov	r6,a
      000C15 08               [12] 3297 	inc	r0
      000C16 86 07            [24] 3298 	mov	ar7,@r0
      000C18 C0 05            [24] 3299 	push	ar5
      000C1A C0 04            [24] 3300 	push	ar4
      000C1C C0 03            [24] 3301 	push	ar3
      000C1E 74r39            [12] 3302 	mov	a,#_timed_send
      000C20 C0 E0            [24] 3303 	push	acc
      000C22 74s05            [12] 3304 	mov	a,#(_timed_send >> 8)
      000C24 C0 E0            [24] 3305 	push	acc
      000C26 E4               [12] 3306 	clr	a
      000C27 C0 E0            [24] 3307 	push	acc
      000C29 04               [12] 3308 	inc	a
      000C2A C0 E0            [24] 3309 	push	acc
      000C2C 8A 82            [24] 3310 	mov	dpl,r2
      000C2E 8E 83            [24] 3311 	mov	dph,r6
      000C30 8F F0            [24] 3312 	mov	b,r7
      000C32 12r00r00         [24] 3313 	lcall	_ctimer_set
      000C35 E5 81            [12] 3314 	mov	a,sp
      000C37 24 F9            [12] 3315 	add	a,#0xf9
      000C39 F5 81            [12] 3316 	mov	sp,a
      000C3B 80 16            [24] 3317 	sjmp	00132$
      000C3D                       3318 00117$:
                                   3319 ;	../contiki-sensinode/core/net/rime/rudolph2.c:350: } else if(hdr->chunk > c->rcv_nxt) {
      000C3D C3               [12] 3320 	clr	c
      000C3E EB               [12] 3321 	mov	a,r3
      000C3F 9F               [12] 3322 	subb	a,r7
      000C40 EC               [12] 3323 	mov	a,r4
      000C41 9E               [12] 3324 	subb	a,r6
      000C42 50 0F            [24] 3325 	jnc	00132$
                                   3326 ;	../contiki-sensinode/core/net/rime/rudolph2.c:354: send_nack(c);
      000C44 A8 81            [24] 3327 	mov	r0,sp
      000C46 18               [12] 3328 	dec	r0
      000C47 18               [12] 3329 	dec	r0
      000C48 86 82            [24] 3330 	mov	dpl,@r0
      000C4A 08               [12] 3331 	inc	r0
      000C4B 86 83            [24] 3332 	mov	dph,@r0
      000C4D 08               [12] 3333 	inc	r0
      000C4E 86 F0            [24] 3334 	mov	b,@r0
      000C50 12r04r2A         [24] 3335 	lcall	_send_nack
                                   3336 ;	../contiki-sensinode/core/net/rime/rudolph2.c:355: } else if(hdr->chunk < c->rcv_nxt) {
      000C53                       3337 00132$:
      000C53 E5 81            [12] 3338 	mov	a,sp
      000C55 24 F2            [12] 3339 	add	a,#0xF2
      000C57 F5 81            [12] 3340 	mov	sp,a
      000C59 22               [24] 3341 	ret
                                   3342 ;------------------------------------------------------------
                                   3343 ;Allocation info for local variables in function 'rudolph2_open'
                                   3344 ;------------------------------------------------------------
                                   3345 ;channel                   Allocated to stack - sp -3
                                   3346 ;cb                        Allocated to stack - sp -6
                                   3347 ;c                         Allocated to registers r5 r6 r7 
                                   3348 ;------------------------------------------------------------
                                   3349 ;	../contiki-sensinode/core/net/rime/rudolph2.c:366: rudolph2_open(struct rudolph2_conn *c, uint16_t channel,
                                   3350 ;	-----------------------------------------
                                   3351 ;	 function rudolph2_open
                                   3352 ;	-----------------------------------------
      000C5A                       3353 _rudolph2_open:
      000C5A AD 82            [24] 3354 	mov	r5,dpl
      000C5C AE 83            [24] 3355 	mov	r6,dph
      000C5E AF F0            [24] 3356 	mov	r7,b
                                   3357 ;	../contiki-sensinode/core/net/rime/rudolph2.c:369: polite_open(&c->c, channel, &polite);
      000C60 C0 07            [24] 3358 	push	ar7
      000C62 C0 06            [24] 3359 	push	ar6
      000C64 C0 05            [24] 3360 	push	ar5
      000C66 74r00            [12] 3361 	mov	a,#_polite
      000C68 C0 E0            [24] 3362 	push	acc
      000C6A 74s00            [12] 3363 	mov	a,#(_polite >> 8)
      000C6C C0 E0            [24] 3364 	push	acc
      000C6E 74 80            [12] 3365 	mov	a,#0x80
      000C70 C0 E0            [24] 3366 	push	acc
      000C72 E5 81            [12] 3367 	mov	a,sp
      000C74 24 F7            [12] 3368 	add	a,#0xf7
      000C76 F8               [12] 3369 	mov	r0,a
      000C77 E6               [12] 3370 	mov	a,@r0
      000C78 C0 E0            [24] 3371 	push	acc
      000C7A 08               [12] 3372 	inc	r0
      000C7B E6               [12] 3373 	mov	a,@r0
      000C7C C0 E0            [24] 3374 	push	acc
      000C7E 8D 82            [24] 3375 	mov	dpl,r5
      000C80 8E 83            [24] 3376 	mov	dph,r6
      000C82 8F F0            [24] 3377 	mov	b,r7
      000C84 12r00r00         [24] 3378 	lcall	_polite_open
      000C87 E5 81            [12] 3379 	mov	a,sp
      000C89 24 FB            [12] 3380 	add	a,#0xfb
      000C8B F5 81            [12] 3381 	mov	sp,a
      000C8D D0 05            [24] 3382 	pop	ar5
      000C8F D0 06            [24] 3383 	pop	ar6
      000C91 D0 07            [24] 3384 	pop	ar7
                                   3385 ;	../contiki-sensinode/core/net/rime/rudolph2.c:370: c->cb = cb;
      000C93 74 28            [12] 3386 	mov	a,#0x28
      000C95 2D               [12] 3387 	add	a,r5
      000C96 FA               [12] 3388 	mov	r2,a
      000C97 E4               [12] 3389 	clr	a
      000C98 3E               [12] 3390 	addc	a,r6
      000C99 FB               [12] 3391 	mov	r3,a
      000C9A 8F 04            [24] 3392 	mov	ar4,r7
      000C9C 8A 82            [24] 3393 	mov	dpl,r2
      000C9E 8B 83            [24] 3394 	mov	dph,r3
      000CA0 8C F0            [24] 3395 	mov	b,r4
      000CA2 E5 81            [12] 3396 	mov	a,sp
      000CA4 24 FA            [12] 3397 	add	a,#0xfa
      000CA6 F8               [12] 3398 	mov	r0,a
      000CA7 E6               [12] 3399 	mov	a,@r0
      000CA8 12r00r00         [24] 3400 	lcall	__gptrput
      000CAB A3               [24] 3401 	inc	dptr
      000CAC 08               [12] 3402 	inc	r0
      000CAD E6               [12] 3403 	mov	a,@r0
      000CAE 12r00r00         [24] 3404 	lcall	__gptrput
      000CB1 A3               [24] 3405 	inc	dptr
      000CB2 08               [12] 3406 	inc	r0
      000CB3 E6               [12] 3407 	mov	a,@r0
      000CB4 12r00r00         [24] 3408 	lcall	__gptrput
                                   3409 ;	../contiki-sensinode/core/net/rime/rudolph2.c:371: c->version = 0;
      000CB7 74 44            [12] 3410 	mov	a,#0x44
      000CB9 2D               [12] 3411 	add	a,r5
      000CBA FA               [12] 3412 	mov	r2,a
      000CBB E4               [12] 3413 	clr	a
      000CBC 3E               [12] 3414 	addc	a,r6
      000CBD FB               [12] 3415 	mov	r3,a
      000CBE 8F 04            [24] 3416 	mov	ar4,r7
      000CC0 8A 82            [24] 3417 	mov	dpl,r2
      000CC2 8B 83            [24] 3418 	mov	dph,r3
      000CC4 8C F0            [24] 3419 	mov	b,r4
      000CC6 E4               [12] 3420 	clr	a
      000CC7 12r00r00         [24] 3421 	lcall	__gptrput
      000CCA A3               [24] 3422 	inc	dptr
      000CCB 12r00r00         [24] 3423 	lcall	__gptrput
                                   3424 ;	../contiki-sensinode/core/net/rime/rudolph2.c:372: c->hops_from_base = HOPS_MAX;
      000CCE 74 46            [12] 3425 	mov	a,#0x46
      000CD0 2D               [12] 3426 	add	a,r5
      000CD1 FD               [12] 3427 	mov	r5,a
      000CD2 E4               [12] 3428 	clr	a
      000CD3 3E               [12] 3429 	addc	a,r6
      000CD4 FE               [12] 3430 	mov	r6,a
      000CD5 8D 82            [24] 3431 	mov	dpl,r5
      000CD7 8E 83            [24] 3432 	mov	dph,r6
      000CD9 8F F0            [24] 3433 	mov	b,r7
      000CDB 74 40            [12] 3434 	mov	a,#0x40
      000CDD 02r00r00         [24] 3435 	ljmp	__gptrput
                                   3436 ;------------------------------------------------------------
                                   3437 ;Allocation info for local variables in function 'rudolph2_close'
                                   3438 ;------------------------------------------------------------
                                   3439 ;c                         Allocated to registers r5 r6 r7 
                                   3440 ;------------------------------------------------------------
                                   3441 ;	../contiki-sensinode/core/net/rime/rudolph2.c:376: rudolph2_close(struct rudolph2_conn *c)
                                   3442 ;	-----------------------------------------
                                   3443 ;	 function rudolph2_close
                                   3444 ;	-----------------------------------------
      000CE0                       3445 _rudolph2_close:
                                   3446 ;	../contiki-sensinode/core/net/rime/rudolph2.c:378: polite_close(&c->c);
      000CE0 02r00r00         [24] 3447 	ljmp	_polite_close
                                   3448 ;------------------------------------------------------------
                                   3449 ;Allocation info for local variables in function 'rudolph2_send'
                                   3450 ;------------------------------------------------------------
                                   3451 ;send_interval             Allocated to stack - sp -11
                                   3452 ;c                         Allocated to stack - sp -7
                                   3453 ;len                       Allocated to stack - sp -1
                                   3454 ;sloc0                     Allocated to stack - sp -4
                                   3455 ;sloc1                     Allocated to stack - sp -1
                                   3456 ;------------------------------------------------------------
                                   3457 ;	../contiki-sensinode/core/net/rime/rudolph2.c:382: rudolph2_send(struct rudolph2_conn *c, clock_time_t send_interval)
                                   3458 ;	-----------------------------------------
                                   3459 ;	 function rudolph2_send
                                   3460 ;	-----------------------------------------
      000CE3                       3461 _rudolph2_send:
      000CE3 C0 82            [24] 3462 	push	dpl
      000CE5 C0 83            [24] 3463 	push	dph
      000CE7 C0 F0            [24] 3464 	push	b
      000CE9 E5 81            [12] 3465 	mov	a,sp
      000CEB 24 05            [12] 3466 	add	a,#0x05
                                   3467 ;	../contiki-sensinode/core/net/rime/rudolph2.c:386: c->hops_from_base = 0;
      000CED F5 81            [12] 3468 	mov	sp,a
      000CEF 24 F9            [12] 3469 	add	a,#0xf9
      000CF1 F8               [12] 3470 	mov	r0,a
      000CF2 74 46            [12] 3471 	mov	a,#0x46
      000CF4 26               [12] 3472 	add	a,@r0
      000CF5 FA               [12] 3473 	mov	r2,a
      000CF6 E4               [12] 3474 	clr	a
      000CF7 08               [12] 3475 	inc	r0
      000CF8 36               [12] 3476 	addc	a,@r0
      000CF9 FB               [12] 3477 	mov	r3,a
      000CFA 08               [12] 3478 	inc	r0
      000CFB 86 04            [24] 3479 	mov	ar4,@r0
      000CFD 8A 82            [24] 3480 	mov	dpl,r2
      000CFF 8B 83            [24] 3481 	mov	dph,r3
      000D01 8C F0            [24] 3482 	mov	b,r4
      000D03 E4               [12] 3483 	clr	a
      000D04 12r00r00         [24] 3484 	lcall	__gptrput
                                   3485 ;	../contiki-sensinode/core/net/rime/rudolph2.c:387: c->version++;
      000D07 E5 81            [12] 3486 	mov	a,sp
      000D09 24 F9            [12] 3487 	add	a,#0xf9
      000D0B F8               [12] 3488 	mov	r0,a
      000D0C 74 44            [12] 3489 	mov	a,#0x44
      000D0E 26               [12] 3490 	add	a,@r0
      000D0F FA               [12] 3491 	mov	r2,a
      000D10 E4               [12] 3492 	clr	a
      000D11 08               [12] 3493 	inc	r0
      000D12 36               [12] 3494 	addc	a,@r0
      000D13 FB               [12] 3495 	mov	r3,a
      000D14 08               [12] 3496 	inc	r0
      000D15 86 04            [24] 3497 	mov	ar4,@r0
      000D17 8A 82            [24] 3498 	mov	dpl,r2
      000D19 8B 83            [24] 3499 	mov	dph,r3
      000D1B 8C F0            [24] 3500 	mov	b,r4
      000D1D 12r00r00         [24] 3501 	lcall	__gptrget
      000D20 FE               [12] 3502 	mov	r6,a
      000D21 A3               [24] 3503 	inc	dptr
      000D22 12r00r00         [24] 3504 	lcall	__gptrget
      000D25 FF               [12] 3505 	mov	r7,a
      000D26 0E               [12] 3506 	inc	r6
      000D27 BE 00 01         [24] 3507 	cjne	r6,#0x00,00113$
      000D2A 0F               [12] 3508 	inc	r7
      000D2B                       3509 00113$:
      000D2B 8A 82            [24] 3510 	mov	dpl,r2
      000D2D 8B 83            [24] 3511 	mov	dph,r3
      000D2F 8C F0            [24] 3512 	mov	b,r4
      000D31 EE               [12] 3513 	mov	a,r6
      000D32 12r00r00         [24] 3514 	lcall	__gptrput
      000D35 A3               [24] 3515 	inc	dptr
      000D36 EF               [12] 3516 	mov	a,r7
      000D37 12r00r00         [24] 3517 	lcall	__gptrput
                                   3518 ;	../contiki-sensinode/core/net/rime/rudolph2.c:388: c->snd_nxt = 0;
      000D3A E5 81            [12] 3519 	mov	a,sp
      000D3C 24 F9            [12] 3520 	add	a,#0xf9
      000D3E F8               [12] 3521 	mov	r0,a
      000D3F 74 40            [12] 3522 	mov	a,#0x40
      000D41 26               [12] 3523 	add	a,@r0
      000D42 FD               [12] 3524 	mov	r5,a
      000D43 E4               [12] 3525 	clr	a
      000D44 08               [12] 3526 	inc	r0
      000D45 36               [12] 3527 	addc	a,@r0
      000D46 FE               [12] 3528 	mov	r6,a
      000D47 08               [12] 3529 	inc	r0
      000D48 86 07            [24] 3530 	mov	ar7,@r0
      000D4A 8D 82            [24] 3531 	mov	dpl,r5
      000D4C 8E 83            [24] 3532 	mov	dph,r6
      000D4E 8F F0            [24] 3533 	mov	b,r7
      000D50 E4               [12] 3534 	clr	a
      000D51 12r00r00         [24] 3535 	lcall	__gptrput
      000D54 A3               [24] 3536 	inc	dptr
      000D55 12r00r00         [24] 3537 	lcall	__gptrput
                                   3538 ;	../contiki-sensinode/core/net/rime/rudolph2.c:389: len = RUDOLPH2_DATASIZE;
      000D58 A8 81            [24] 3539 	mov	r0,sp
      000D5A 18               [12] 3540 	dec	r0
      000D5B 76 40            [12] 3541 	mov	@r0,#0x40
      000D5D 08               [12] 3542 	inc	r0
      000D5E 76 00            [12] 3543 	mov	@r0,#0x00
                                   3544 ;	../contiki-sensinode/core/net/rime/rudolph2.c:390: packetbuf_clear();
      000D60 12r00r00         [24] 3545 	lcall	_packetbuf_clear
                                   3546 ;	../contiki-sensinode/core/net/rime/rudolph2.c:391: for(c->rcv_nxt = 0; len == RUDOLPH2_DATASIZE; c->rcv_nxt++) {
      000D63 E5 81            [12] 3547 	mov	a,sp
      000D65 24 F9            [12] 3548 	add	a,#0xf9
      000D67 F8               [12] 3549 	mov	r0,a
      000D68 E5 81            [12] 3550 	mov	a,sp
      000D6A 24 FC            [12] 3551 	add	a,#0xfc
      000D6C F9               [12] 3552 	mov	r1,a
      000D6D 74 42            [12] 3553 	mov	a,#0x42
      000D6F 26               [12] 3554 	add	a,@r0
      000D70 F7               [12] 3555 	mov	@r1,a
      000D71 E4               [12] 3556 	clr	a
      000D72 08               [12] 3557 	inc	r0
      000D73 36               [12] 3558 	addc	a,@r0
      000D74 09               [12] 3559 	inc	r1
      000D75 F7               [12] 3560 	mov	@r1,a
      000D76 08               [12] 3561 	inc	r0
      000D77 09               [12] 3562 	inc	r1
      000D78 E6               [12] 3563 	mov	a,@r0
      000D79 F7               [12] 3564 	mov	@r1,a
      000D7A E5 81            [12] 3565 	mov	a,sp
      000D7C 24 FC            [12] 3566 	add	a,#0xfc
      000D7E F8               [12] 3567 	mov	r0,a
      000D7F 86 82            [24] 3568 	mov	dpl,@r0
      000D81 08               [12] 3569 	inc	r0
      000D82 86 83            [24] 3570 	mov	dph,@r0
      000D84 08               [12] 3571 	inc	r0
      000D85 86 F0            [24] 3572 	mov	b,@r0
      000D87 E4               [12] 3573 	clr	a
      000D88 12r00r00         [24] 3574 	lcall	__gptrput
      000D8B A3               [24] 3575 	inc	dptr
      000D8C 12r00r00         [24] 3576 	lcall	__gptrput
      000D8F                       3577 00103$:
      000D8F A8 81            [24] 3578 	mov	r0,sp
      000D91 18               [12] 3579 	dec	r0
      000D92 B6 40 06         [24] 3580 	cjne	@r0,#0x40,00114$
      000D95 08               [12] 3581 	inc	r0
      000D96 B6 00 02         [24] 3582 	cjne	@r0,#0x00,00114$
      000D99 80 03            [24] 3583 	sjmp	00115$
      000D9B                       3584 00114$:
      000D9B 02r0Er1F         [24] 3585 	ljmp	00101$
      000D9E                       3586 00115$:
                                   3587 ;	../contiki-sensinode/core/net/rime/rudolph2.c:392: len = read_data(c, packetbuf_dataptr(), c->rcv_nxt);
      000D9E E5 81            [12] 3588 	mov	a,sp
      000DA0 24 FC            [12] 3589 	add	a,#0xfc
      000DA2 F8               [12] 3590 	mov	r0,a
      000DA3 86 82            [24] 3591 	mov	dpl,@r0
      000DA5 08               [12] 3592 	inc	r0
      000DA6 86 83            [24] 3593 	mov	dph,@r0
      000DA8 08               [12] 3594 	inc	r0
      000DA9 86 F0            [24] 3595 	mov	b,@r0
      000DAB 12r00r00         [24] 3596 	lcall	__gptrget
      000DAE FF               [12] 3597 	mov	r7,a
      000DAF A3               [24] 3598 	inc	dptr
      000DB0 12r00r00         [24] 3599 	lcall	__gptrget
      000DB3 FE               [12] 3600 	mov	r6,a
      000DB4 C0 07            [24] 3601 	push	ar7
      000DB6 C0 06            [24] 3602 	push	ar6
      000DB8 12r00r00         [24] 3603 	lcall	_packetbuf_dataptr
      000DBB AB 82            [24] 3604 	mov	r3,dpl
      000DBD AC 83            [24] 3605 	mov	r4,dph
      000DBF AD F0            [24] 3606 	mov	r5,b
      000DC1 C0 03            [24] 3607 	push	ar3
      000DC3 C0 04            [24] 3608 	push	ar4
      000DC5 C0 05            [24] 3609 	push	ar5
      000DC7 E5 81            [12] 3610 	mov	a,sp
      000DC9 24 F4            [12] 3611 	add	a,#0xf4
      000DCB F8               [12] 3612 	mov	r0,a
      000DCC 86 82            [24] 3613 	mov	dpl,@r0
      000DCE 08               [12] 3614 	inc	r0
      000DCF 86 83            [24] 3615 	mov	dph,@r0
      000DD1 08               [12] 3616 	inc	r0
      000DD2 86 F0            [24] 3617 	mov	b,@r0
      000DD4 12r00r00         [24] 3618 	lcall	_read_data
      000DD7 AC 82            [24] 3619 	mov	r4,dpl
      000DD9 AD 83            [24] 3620 	mov	r5,dph
      000DDB E5 81            [12] 3621 	mov	a,sp
      000DDD 24 FB            [12] 3622 	add	a,#0xfb
      000DDF F5 81            [12] 3623 	mov	sp,a
      000DE1 A8 81            [24] 3624 	mov	r0,sp
      000DE3 18               [12] 3625 	dec	r0
      000DE4 A6 04            [24] 3626 	mov	@r0,ar4
      000DE6 08               [12] 3627 	inc	r0
      000DE7 A6 05            [24] 3628 	mov	@r0,ar5
                                   3629 ;	../contiki-sensinode/core/net/rime/rudolph2.c:391: for(c->rcv_nxt = 0; len == RUDOLPH2_DATASIZE; c->rcv_nxt++) {
      000DE9 E5 81            [12] 3630 	mov	a,sp
      000DEB 24 F9            [12] 3631 	add	a,#0xf9
      000DED F8               [12] 3632 	mov	r0,a
      000DEE 74 42            [12] 3633 	mov	a,#0x42
      000DF0 26               [12] 3634 	add	a,@r0
      000DF1 FB               [12] 3635 	mov	r3,a
      000DF2 E4               [12] 3636 	clr	a
      000DF3 08               [12] 3637 	inc	r0
      000DF4 36               [12] 3638 	addc	a,@r0
      000DF5 FC               [12] 3639 	mov	r4,a
      000DF6 08               [12] 3640 	inc	r0
      000DF7 86 05            [24] 3641 	mov	ar5,@r0
      000DF9 8B 82            [24] 3642 	mov	dpl,r3
      000DFB 8C 83            [24] 3643 	mov	dph,r4
      000DFD 8D F0            [24] 3644 	mov	b,r5
      000DFF 12r00r00         [24] 3645 	lcall	__gptrget
      000E02 FA               [12] 3646 	mov	r2,a
      000E03 A3               [24] 3647 	inc	dptr
      000E04 12r00r00         [24] 3648 	lcall	__gptrget
      000E07 FF               [12] 3649 	mov	r7,a
      000E08 0A               [12] 3650 	inc	r2
      000E09 BA 00 01         [24] 3651 	cjne	r2,#0x00,00116$
      000E0C 0F               [12] 3652 	inc	r7
      000E0D                       3653 00116$:
      000E0D 8B 82            [24] 3654 	mov	dpl,r3
      000E0F 8C 83            [24] 3655 	mov	dph,r4
      000E11 8D F0            [24] 3656 	mov	b,r5
      000E13 EA               [12] 3657 	mov	a,r2
      000E14 12r00r00         [24] 3658 	lcall	__gptrput
      000E17 A3               [24] 3659 	inc	dptr
      000E18 EF               [12] 3660 	mov	a,r7
      000E19 12r00r00         [24] 3661 	lcall	__gptrput
      000E1C 02r0Dr8F         [24] 3662 	ljmp	00103$
      000E1F                       3663 00101$:
                                   3664 ;	../contiki-sensinode/core/net/rime/rudolph2.c:394: c->flags = FLAG_LAST_RECEIVED;
      000E1F E5 81            [12] 3665 	mov	a,sp
      000E21 24 F9            [12] 3666 	add	a,#0xf9
      000E23 F8               [12] 3667 	mov	r0,a
      000E24 74 48            [12] 3668 	mov	a,#0x48
      000E26 26               [12] 3669 	add	a,@r0
      000E27 FD               [12] 3670 	mov	r5,a
      000E28 E4               [12] 3671 	clr	a
      000E29 08               [12] 3672 	inc	r0
      000E2A 36               [12] 3673 	addc	a,@r0
      000E2B FE               [12] 3674 	mov	r6,a
      000E2C 08               [12] 3675 	inc	r0
      000E2D 86 07            [24] 3676 	mov	ar7,@r0
      000E2F 8D 82            [24] 3677 	mov	dpl,r5
      000E31 8E 83            [24] 3678 	mov	dph,r6
      000E33 8F F0            [24] 3679 	mov	b,r7
      000E35 74 02            [12] 3680 	mov	a,#0x02
      000E37 12r00r00         [24] 3681 	lcall	__gptrput
                                   3682 ;	../contiki-sensinode/core/net/rime/rudolph2.c:396: send_data(c, SEND_INTERVAL);
      000E3A 74 40            [12] 3683 	mov	a,#0x40
      000E3C C0 E0            [24] 3684 	push	acc
      000E3E E4               [12] 3685 	clr	a
      000E3F C0 E0            [24] 3686 	push	acc
      000E41 E5 81            [12] 3687 	mov	a,sp
      000E43 24 F7            [12] 3688 	add	a,#0xf7
      000E45 F8               [12] 3689 	mov	r0,a
      000E46 86 82            [24] 3690 	mov	dpl,@r0
      000E48 08               [12] 3691 	inc	r0
      000E49 86 83            [24] 3692 	mov	dph,@r0
      000E4B 08               [12] 3693 	inc	r0
      000E4C 86 F0            [24] 3694 	mov	b,@r0
      000E4E 12r03rBF         [24] 3695 	lcall	_send_data
      000E51 15 81            [12] 3696 	dec	sp
      000E53 15 81            [12] 3697 	dec	sp
                                   3698 ;	../contiki-sensinode/core/net/rime/rudolph2.c:397: ctimer_set(&c->t, SEND_INTERVAL, timed_send, c);
      000E55 E5 81            [12] 3699 	mov	a,sp
      000E57 24 F9            [12] 3700 	add	a,#0xf9
      000E59 F8               [12] 3701 	mov	r0,a
      000E5A 86 05            [24] 3702 	mov	ar5,@r0
      000E5C 08               [12] 3703 	inc	r0
      000E5D 86 06            [24] 3704 	mov	ar6,@r0
      000E5F 08               [12] 3705 	inc	r0
      000E60 86 07            [24] 3706 	mov	ar7,@r0
      000E62 E5 81            [12] 3707 	mov	a,sp
      000E64 24 F9            [12] 3708 	add	a,#0xf9
      000E66 F8               [12] 3709 	mov	r0,a
      000E67 74 2B            [12] 3710 	mov	a,#0x2B
      000E69 26               [12] 3711 	add	a,@r0
      000E6A FA               [12] 3712 	mov	r2,a
      000E6B E4               [12] 3713 	clr	a
      000E6C 08               [12] 3714 	inc	r0
      000E6D 36               [12] 3715 	addc	a,@r0
      000E6E FB               [12] 3716 	mov	r3,a
      000E6F 08               [12] 3717 	inc	r0
      000E70 86 04            [24] 3718 	mov	ar4,@r0
      000E72 C0 05            [24] 3719 	push	ar5
      000E74 C0 06            [24] 3720 	push	ar6
      000E76 C0 07            [24] 3721 	push	ar7
      000E78 74r39            [12] 3722 	mov	a,#_timed_send
      000E7A C0 E0            [24] 3723 	push	acc
      000E7C 74s05            [12] 3724 	mov	a,#(_timed_send >> 8)
      000E7E C0 E0            [24] 3725 	push	acc
      000E80 74 40            [12] 3726 	mov	a,#0x40
      000E82 C0 E0            [24] 3727 	push	acc
      000E84 E4               [12] 3728 	clr	a
      000E85 C0 E0            [24] 3729 	push	acc
      000E87 8A 82            [24] 3730 	mov	dpl,r2
      000E89 8B 83            [24] 3731 	mov	dph,r3
      000E8B 8C F0            [24] 3732 	mov	b,r4
      000E8D 12r00r00         [24] 3733 	lcall	_ctimer_set
      000E90 E5 81            [12] 3734 	mov	a,sp
      000E92 24 F9            [12] 3735 	add	a,#0xf9
      000E94 24 F8            [12] 3736 	add	a,#0xF8
      000E96 F5 81            [12] 3737 	mov	sp,a
      000E98 22               [24] 3738 	ret
                                   3739 ;------------------------------------------------------------
                                   3740 ;Allocation info for local variables in function 'rudolph2_stop'
                                   3741 ;------------------------------------------------------------
                                   3742 ;c                         Allocated to registers r5 r6 r7 
                                   3743 ;------------------------------------------------------------
                                   3744 ;	../contiki-sensinode/core/net/rime/rudolph2.c:401: rudolph2_stop(struct rudolph2_conn *c)
                                   3745 ;	-----------------------------------------
                                   3746 ;	 function rudolph2_stop
                                   3747 ;	-----------------------------------------
      000E99                       3748 _rudolph2_stop:
                                   3749 ;	../contiki-sensinode/core/net/rime/rudolph2.c:403: polite_cancel(&c->c);
      000E99 AD 82            [24] 3750 	mov	r5,dpl
      000E9B AE 83            [24] 3751 	mov	r6,dph
      000E9D AF F0            [24] 3752 	mov	r7,b
      000E9F C0 07            [24] 3753 	push	ar7
      000EA1 C0 06            [24] 3754 	push	ar6
      000EA3 C0 05            [24] 3755 	push	ar5
      000EA5 12r00r00         [24] 3756 	lcall	_polite_cancel
      000EA8 D0 05            [24] 3757 	pop	ar5
      000EAA D0 06            [24] 3758 	pop	ar6
      000EAC D0 07            [24] 3759 	pop	ar7
                                   3760 ;	../contiki-sensinode/core/net/rime/rudolph2.c:404: c->flags |= FLAG_IS_STOPPED;
      000EAE 74 48            [12] 3761 	mov	a,#0x48
      000EB0 2D               [12] 3762 	add	a,r5
      000EB1 FD               [12] 3763 	mov	r5,a
      000EB2 E4               [12] 3764 	clr	a
      000EB3 3E               [12] 3765 	addc	a,r6
      000EB4 FE               [12] 3766 	mov	r6,a
      000EB5 8D 82            [24] 3767 	mov	dpl,r5
      000EB7 8E 83            [24] 3768 	mov	dph,r6
      000EB9 8F F0            [24] 3769 	mov	b,r7
      000EBB 12r00r00         [24] 3770 	lcall	__gptrget
      000EBE FC               [12] 3771 	mov	r4,a
      000EBF 43 04 04         [24] 3772 	orl	ar4,#0x04
      000EC2 8D 82            [24] 3773 	mov	dpl,r5
      000EC4 8E 83            [24] 3774 	mov	dph,r6
      000EC6 8F F0            [24] 3775 	mov	b,r7
      000EC8 EC               [12] 3776 	mov	a,r4
      000EC9 02r00r00         [24] 3777 	ljmp	__gptrput
                                   3778 	.area CSEG    (CODE)
                                   3779 	.area CONST   (CODE)
      000000                       3780 _polite:
      000000r11s07                 3781 	.byte _recv,(_recv >> 8)
      000002r37s05                 3782 	.byte _sent,(_sent >> 8)
      000004r38s05                 3783 	.byte _dropped,(_dropped >> 8)
                                   3784 	.area XINIT   (CODE)
                                   3785 	.area CABS    (ABS,CODE)

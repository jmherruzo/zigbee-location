                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.4.0 #8981 (Oct 24 2015) (Linux)
                                      4 ; This file was generated Sun Oct 25 01:52:22 2015
                                      5 ;--------------------------------------------------------
                                      6 	.module slip
                                      7 	.optsdcc -mmcs51 --model-large
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _slip_arch_writeb
                                     13 	.globl _uip_ipchksum
                                     14 	.globl _uip_htons
                                     15 	.globl _tcpip_input
                                     16 	.globl _process_poll
                                     17 	.globl _memset
                                     18 	.globl _strncmp
                                     19 	.globl _memcmp
                                     20 	.globl _memcpy
                                     21 	.globl _ACTIVE
                                     22 	.globl _TX_BYTE
                                     23 	.globl _RX_BYTE
                                     24 	.globl _ERR
                                     25 	.globl _FE
                                     26 	.globl _SLAVE
                                     27 	.globl _RE
                                     28 	.globl _MODE
                                     29 	.globl _T3OVFIF
                                     30 	.globl _T3CH0IF
                                     31 	.globl _T3CH1IF
                                     32 	.globl _T4OVFIF
                                     33 	.globl _T4CH0IF
                                     34 	.globl _T4CH1IF
                                     35 	.globl _OVFIM
                                     36 	.globl _B_0
                                     37 	.globl _B_1
                                     38 	.globl _B_2
                                     39 	.globl _B_3
                                     40 	.globl _B_4
                                     41 	.globl _B_5
                                     42 	.globl _B_6
                                     43 	.globl _B_7
                                     44 	.globl _P2IF
                                     45 	.globl _UTX0IF
                                     46 	.globl _UTX1IF
                                     47 	.globl _P1IF
                                     48 	.globl _WDTIF
                                     49 	.globl _ACC_0
                                     50 	.globl _ACC_1
                                     51 	.globl _ACC_2
                                     52 	.globl _ACC_3
                                     53 	.globl _ACC_4
                                     54 	.globl _ACC_5
                                     55 	.globl _ACC_6
                                     56 	.globl _ACC_7
                                     57 	.globl _P
                                     58 	.globl _F1
                                     59 	.globl _OV
                                     60 	.globl _RS0
                                     61 	.globl _RS1
                                     62 	.globl _F0
                                     63 	.globl _AC
                                     64 	.globl _CY
                                     65 	.globl _DMAIF
                                     66 	.globl _T1IF
                                     67 	.globl _T2IF
                                     68 	.globl _T3IF
                                     69 	.globl _T4IF
                                     70 	.globl _P0IF
                                     71 	.globl _STIF
                                     72 	.globl _DMAIE
                                     73 	.globl _T1IE
                                     74 	.globl _T2IE
                                     75 	.globl _T3IE
                                     76 	.globl _T4IE
                                     77 	.globl _P0IE
                                     78 	.globl _RFERRIE
                                     79 	.globl _ADCIE
                                     80 	.globl _URX0IE
                                     81 	.globl _URX1IE
                                     82 	.globl _ENCIE
                                     83 	.globl _STIE
                                     84 	.globl _EA
                                     85 	.globl _P2_0
                                     86 	.globl _P2_1
                                     87 	.globl _P2_2
                                     88 	.globl _P2_3
                                     89 	.globl _P2_4
                                     90 	.globl _P2_5
                                     91 	.globl _P2_6
                                     92 	.globl _P2_7
                                     93 	.globl _ENCIF_0
                                     94 	.globl _ENCIF_1
                                     95 	.globl _P1_0
                                     96 	.globl _P1_1
                                     97 	.globl _P1_2
                                     98 	.globl _P1_3
                                     99 	.globl _P1_4
                                    100 	.globl _P1_5
                                    101 	.globl _P1_6
                                    102 	.globl _P1_7
                                    103 	.globl _IT0
                                    104 	.globl _RFERRIF
                                    105 	.globl _IT1
                                    106 	.globl _URX0IF
                                    107 	.globl _ADCIF
                                    108 	.globl _URX1IF
                                    109 	.globl _P0_0
                                    110 	.globl _P0_1
                                    111 	.globl _P0_2
                                    112 	.globl _P0_3
                                    113 	.globl _P0_4
                                    114 	.globl _P0_5
                                    115 	.globl _P0_6
                                    116 	.globl _P0_7
                                    117 	.globl _WDCTL
                                    118 	.globl _U1GCR
                                    119 	.globl _U1UCR
                                    120 	.globl _U1BAUD
                                    121 	.globl _U1DBUF
                                    122 	.globl _U1CSR
                                    123 	.globl _U0GCR
                                    124 	.globl _U0UCR
                                    125 	.globl _U0BAUD
                                    126 	.globl _U0DBUF
                                    127 	.globl _U0CSR
                                    128 	.globl _TIMIF
                                    129 	.globl _T4CC1
                                    130 	.globl _T4CCTL1
                                    131 	.globl _T4CC0
                                    132 	.globl _T4CCTL0
                                    133 	.globl _T4CTL
                                    134 	.globl _T4CNT
                                    135 	.globl _T3CC1
                                    136 	.globl _T3CCTL1
                                    137 	.globl _T3CC0
                                    138 	.globl _T3CCTL0
                                    139 	.globl _T3CTL
                                    140 	.globl _T3CNT
                                    141 	.globl _T2MSEL
                                    142 	.globl _T2IRQM
                                    143 	.globl _T2MOVF2
                                    144 	.globl _T2MOVF1
                                    145 	.globl _T2MOVF0
                                    146 	.globl _T2M1
                                    147 	.globl _T2M0
                                    148 	.globl _T2IRQF
                                    149 	.globl _T2EVTCFG
                                    150 	.globl _T2CTRL
                                    151 	.globl _T1STAT
                                    152 	.globl _T1CCTL2
                                    153 	.globl _T1CCTL1
                                    154 	.globl _T1CCTL0
                                    155 	.globl _T1CTL
                                    156 	.globl _T1CNTH
                                    157 	.globl _T1CNTL
                                    158 	.globl _T1CC2H
                                    159 	.globl _T1CC2L
                                    160 	.globl _T1CC1H
                                    161 	.globl _T1CC1L
                                    162 	.globl _T1CC0H
                                    163 	.globl _T1CC0L
                                    164 	.globl _CLKCONSTA
                                    165 	.globl _CLKCONCMD
                                    166 	.globl _SLEEPSTA
                                    167 	.globl _SLEEPCMD
                                    168 	.globl _STLOAD
                                    169 	.globl _ST2
                                    170 	.globl _ST1
                                    171 	.globl _ST0
                                    172 	.globl _RFERRF
                                    173 	.globl _RFIRQF0
                                    174 	.globl _RFST
                                    175 	.globl _RFD
                                    176 	.globl _RFIRQF1
                                    177 	.globl _PSBANK
                                    178 	.globl _FMAP
                                    179 	.globl _MEMCTR
                                    180 	.globl __XPAGE
                                    181 	.globl _MPAGE
                                    182 	.globl _PMUX
                                    183 	.globl _P2DIR
                                    184 	.globl _P1DIR
                                    185 	.globl _P0DIR
                                    186 	.globl _P2INP
                                    187 	.globl _P1INP
                                    188 	.globl _P2SEL
                                    189 	.globl _P1SEL
                                    190 	.globl _P0SEL
                                    191 	.globl _APCFG
                                    192 	.globl _PERCFG
                                    193 	.globl _P0INP
                                    194 	.globl _P2IEN
                                    195 	.globl _P1IEN
                                    196 	.globl _P0IEN
                                    197 	.globl _PICTL
                                    198 	.globl _P2IFG
                                    199 	.globl _P1IFG
                                    200 	.globl _P0IFG
                                    201 	.globl _DMAREQ
                                    202 	.globl _DMAARM
                                    203 	.globl _DMA0CFGH
                                    204 	.globl _DMA0CFGL
                                    205 	.globl _DMA1CFGH
                                    206 	.globl _DMA1CFGL
                                    207 	.globl _DMAIRQ
                                    208 	.globl _ENCCS
                                    209 	.globl _ENCDO
                                    210 	.globl _ENCDI
                                    211 	.globl _RNDH
                                    212 	.globl _RNDL
                                    213 	.globl _ADCH
                                    214 	.globl _ADCL
                                    215 	.globl _ADCCON3
                                    216 	.globl _ADCCON2
                                    217 	.globl _ADCCON1
                                    218 	.globl _B
                                    219 	.globl _IRCON2
                                    220 	.globl _ACC
                                    221 	.globl _PSW
                                    222 	.globl _IRCON
                                    223 	.globl _IP1
                                    224 	.globl _IEN1
                                    225 	.globl _IP0
                                    226 	.globl _IEN0
                                    227 	.globl _P2
                                    228 	.globl _S1CON
                                    229 	.globl _IEN2
                                    230 	.globl _S0CON
                                    231 	.globl _DPS
                                    232 	.globl _P1
                                    233 	.globl _TCON
                                    234 	.globl _PCON
                                    235 	.globl _DPH1
                                    236 	.globl _DPL1
                                    237 	.globl _DPH0
                                    238 	.globl _DPL0
                                    239 	.globl _SP
                                    240 	.globl _P0
                                    241 	.globl _slip_process
                                    242 	.globl _slip_active
                                    243 	.globl _X_IEEE_ADDR
                                    244 	.globl _X_INFOPAGE
                                    245 	.globl _X_P2DIR
                                    246 	.globl _X_P1DIR
                                    247 	.globl _X_P0DIR
                                    248 	.globl _X_U1GCR
                                    249 	.globl _X_U1UCR
                                    250 	.globl _X_U1BAUD
                                    251 	.globl _X_U1DBUF
                                    252 	.globl _X_U1CSR
                                    253 	.globl _X_P2INP
                                    254 	.globl _X_P1INP
                                    255 	.globl _X_P2SEL
                                    256 	.globl _X_P1SEL
                                    257 	.globl _X_P0SEL
                                    258 	.globl _X_APCFG
                                    259 	.globl _X_PERCFG
                                    260 	.globl _X_T4CC1
                                    261 	.globl _X_T4CCTL1
                                    262 	.globl _X_T4CC0
                                    263 	.globl _X_T4CCTL0
                                    264 	.globl _X_T4CTL
                                    265 	.globl _X_T4CNT
                                    266 	.globl _X_RFIRQF0
                                    267 	.globl _X_T1CCTL2
                                    268 	.globl _X_T1CCTL1
                                    269 	.globl _X_T1CCTL0
                                    270 	.globl _X_T1CTL
                                    271 	.globl _X_T1CNTH
                                    272 	.globl _X_T1CNTL
                                    273 	.globl _X_RFST
                                    274 	.globl _X_T1CC2H
                                    275 	.globl _X_T1CC2L
                                    276 	.globl _X_T1CC1H
                                    277 	.globl _X_T1CC1L
                                    278 	.globl _X_T1CC0H
                                    279 	.globl _X_T1CC0L
                                    280 	.globl _X_RFD
                                    281 	.globl _X_TIMIF
                                    282 	.globl _X_DMAREQ
                                    283 	.globl _X_DMAARM
                                    284 	.globl _X_DMA0CFGH
                                    285 	.globl _X_DMA0CFGL
                                    286 	.globl _X_DMA1CFGH
                                    287 	.globl _X_DMA1CFGL
                                    288 	.globl _X_DMAIRQ
                                    289 	.globl _X_T3CC1
                                    290 	.globl _X_T3CCTL1
                                    291 	.globl _X_T3CC0
                                    292 	.globl _X_T3CCTL0
                                    293 	.globl _X_T3CTL
                                    294 	.globl _X_T3CNT
                                    295 	.globl _X_WDCTL
                                    296 	.globl _X_MEMCTR
                                    297 	.globl _X_CLKCONCMD
                                    298 	.globl _X_U0GCR
                                    299 	.globl _X_U0UCR
                                    300 	.globl _X_T2MSEL
                                    301 	.globl _X_U0BAUD
                                    302 	.globl _X_U0DBUF
                                    303 	.globl _X_RFERRF
                                    304 	.globl _X_SLEEPCMD
                                    305 	.globl _X_RNDH
                                    306 	.globl _X_RNDL
                                    307 	.globl _X_ADCH
                                    308 	.globl _X_ADCL
                                    309 	.globl _X_ADCCON3
                                    310 	.globl _X_ADCCON2
                                    311 	.globl _X_ADCCON1
                                    312 	.globl _X_ENCCS
                                    313 	.globl _X_ENCDO
                                    314 	.globl _X_ENCDI
                                    315 	.globl _X_T1STAT
                                    316 	.globl _X_PMUX
                                    317 	.globl _X_STLOAD
                                    318 	.globl _X_P2IEN
                                    319 	.globl _X_P0IEN
                                    320 	.globl _X_T2IRQM
                                    321 	.globl _X_T2MOVF2
                                    322 	.globl _X_T2MOVF1
                                    323 	.globl _X_T2MOVF0
                                    324 	.globl _X_T2M1
                                    325 	.globl _X_T2M0
                                    326 	.globl _X_T2IRQF
                                    327 	.globl _X_P2
                                    328 	.globl _X_PSBANK
                                    329 	.globl _X_FMAP
                                    330 	.globl _X_CLKCONSTA
                                    331 	.globl _X_SLEEPSTA
                                    332 	.globl _X_T2EVTCFG
                                    333 	.globl _X_ST2
                                    334 	.globl _X_ST1
                                    335 	.globl _X_ST0
                                    336 	.globl _X_T2CTRL
                                    337 	.globl _X__XPAGE
                                    338 	.globl _X_MPAGE
                                    339 	.globl _X_RFIRQF1
                                    340 	.globl _X_P1
                                    341 	.globl _X_P0INP
                                    342 	.globl _X_P1IEN
                                    343 	.globl _X_PICTL
                                    344 	.globl _X_P2IFG
                                    345 	.globl _X_P1IFG
                                    346 	.globl _X_P0IFG
                                    347 	.globl _X_U0CSR
                                    348 	.globl _X_P0
                                    349 	.globl _USBF5
                                    350 	.globl _USBF4
                                    351 	.globl _USBF3
                                    352 	.globl _USBF2
                                    353 	.globl _USBF1
                                    354 	.globl _USBF0
                                    355 	.globl _USBCNTH
                                    356 	.globl _USBCNTL
                                    357 	.globl _USBCNT0
                                    358 	.globl _USBCSOH
                                    359 	.globl _USBCSOL
                                    360 	.globl _USBMAXO
                                    361 	.globl _USBCSIH
                                    362 	.globl _USBCSIL
                                    363 	.globl _USBCS0
                                    364 	.globl _USBMAXI
                                    365 	.globl _USBCTRL
                                    366 	.globl _USBINDEX
                                    367 	.globl _USBFRMH
                                    368 	.globl _USBFRML
                                    369 	.globl _USBCIE
                                    370 	.globl _USBOIE
                                    371 	.globl _USBIIE
                                    372 	.globl _USBCIF
                                    373 	.globl _USBOIF
                                    374 	.globl _USBIIF
                                    375 	.globl _USBPOW
                                    376 	.globl _USBADDR
                                    377 	.globl _CSPT
                                    378 	.globl _CSPZ
                                    379 	.globl _CSPY
                                    380 	.globl _CSPX
                                    381 	.globl _CSPSTAT
                                    382 	.globl _CSPCTRL
                                    383 	.globl _CSPPROG23
                                    384 	.globl _CSPPROG22
                                    385 	.globl _CSPPROG21
                                    386 	.globl _CSPPROG20
                                    387 	.globl _CSPPROG19
                                    388 	.globl _CSPPROG18
                                    389 	.globl _CSPPROG17
                                    390 	.globl _CSPPROG16
                                    391 	.globl _CSPPROG15
                                    392 	.globl _CSPPROG14
                                    393 	.globl _CSPPROG13
                                    394 	.globl _CSPPROG12
                                    395 	.globl _CSPPROG11
                                    396 	.globl _CSPPROG10
                                    397 	.globl _CSPPROG9
                                    398 	.globl _CSPPROG8
                                    399 	.globl _CSPPROG7
                                    400 	.globl _CSPPROG6
                                    401 	.globl _CSPPROG5
                                    402 	.globl _CSPPROG4
                                    403 	.globl _CSPPROG3
                                    404 	.globl _CSPPROG2
                                    405 	.globl _CSPPROG1
                                    406 	.globl _CSPPROG0
                                    407 	.globl _RFC_OBS_CTRL2
                                    408 	.globl _RFC_OBS_CTRL1
                                    409 	.globl _RFC_OBS_CTRL0
                                    410 	.globl _TXFILTCFG
                                    411 	.globl _PTEST1
                                    412 	.globl _PTEST0
                                    413 	.globl _ATEST
                                    414 	.globl _DACTEST2
                                    415 	.globl _DACTEST1
                                    416 	.globl _DACTEST0
                                    417 	.globl _MDMTEST1
                                    418 	.globl _MDMTEST0
                                    419 	.globl _ADCTEST2
                                    420 	.globl _ADCTEST1
                                    421 	.globl _ADCTEST0
                                    422 	.globl _AGCCTRL3
                                    423 	.globl _AGCCTRL2
                                    424 	.globl _AGCCTRL1
                                    425 	.globl _AGCCTRL0
                                    426 	.globl _FSCAL3
                                    427 	.globl _FSCAL2
                                    428 	.globl _FSCAL1
                                    429 	.globl _FSCAL0
                                    430 	.globl _FSCTRL
                                    431 	.globl _RXCTRL
                                    432 	.globl _FREQEST
                                    433 	.globl _MDMCTRL1
                                    434 	.globl _MDMCTRL0
                                    435 	.globl _RFRND
                                    436 	.globl _RFERRM
                                    437 	.globl _RFIRQM1
                                    438 	.globl _RFIRQM0
                                    439 	.globl _TXLAST_PTR
                                    440 	.globl _TXFIRST_PTR
                                    441 	.globl _RXP1_PTR
                                    442 	.globl _RXLAST_PTR
                                    443 	.globl _RXFIRST_PTR
                                    444 	.globl _TXFIFOCNT
                                    445 	.globl _RXFIFOCNT
                                    446 	.globl _RXFIRST
                                    447 	.globl _RSSISTAT
                                    448 	.globl _RSSI
                                    449 	.globl _CCACTRL1
                                    450 	.globl _CCACTRL0
                                    451 	.globl _FSMCTRL
                                    452 	.globl _FIFOPCTRL
                                    453 	.globl _FSMSTAT1
                                    454 	.globl _FSMSTAT0
                                    455 	.globl _TXCTRL
                                    456 	.globl _TXPOWER
                                    457 	.globl _FREQCTRL
                                    458 	.globl _FREQTUNE
                                    459 	.globl _RXMASKCLR
                                    460 	.globl _RXMASKSET
                                    461 	.globl _RXENABLE
                                    462 	.globl _FRMCTRL1
                                    463 	.globl _FRMCTRL0
                                    464 	.globl _SRCEXTEN2
                                    465 	.globl _SRCEXTEN1
                                    466 	.globl _SRCEXTEN0
                                    467 	.globl _SRCSHORTEN2
                                    468 	.globl _SRCSHORTEN1
                                    469 	.globl _SRCSHORTEN0
                                    470 	.globl _SRCMATCH
                                    471 	.globl _FRMFILT1
                                    472 	.globl _FRMFILT0
                                    473 	.globl _SHORT_ADDR1
                                    474 	.globl _SHORT_ADDR0
                                    475 	.globl _PAN_ID1
                                    476 	.globl _PAN_ID0
                                    477 	.globl _EXT_ADDR7
                                    478 	.globl _EXT_ADDR6
                                    479 	.globl _EXT_ADDR5
                                    480 	.globl _EXT_ADDR4
                                    481 	.globl _EXT_ADDR3
                                    482 	.globl _EXT_ADDR2
                                    483 	.globl _EXT_ADDR1
                                    484 	.globl _EXT_ADDR0
                                    485 	.globl _SRCSHORTPENDEN2
                                    486 	.globl _SRCSHORTPENDEN1
                                    487 	.globl _SRCSHORTPENDEN0
                                    488 	.globl _SRCEXTPENDEN2
                                    489 	.globl _SRCEXTPENDEN1
                                    490 	.globl _SRCEXTPENDEN0
                                    491 	.globl _SRCRESINDEX
                                    492 	.globl _SRCRESMASK2
                                    493 	.globl _SRCRESMASK1
                                    494 	.globl _SRCRESMASK0
                                    495 	.globl _SRC_ADDR_TABLE
                                    496 	.globl _TXFIFO
                                    497 	.globl _RXFIFO
                                    498 	.globl _RFCORE_RAM
                                    499 	.globl _CMPCTL
                                    500 	.globl _OPAMPS
                                    501 	.globl _OPAMPC
                                    502 	.globl _STCV2
                                    503 	.globl _STCV1
                                    504 	.globl _STCV0
                                    505 	.globl _STCS
                                    506 	.globl _STCC
                                    507 	.globl _T1CC4H
                                    508 	.globl _T1CC4L
                                    509 	.globl _T1CC3H
                                    510 	.globl _T1CC3L
                                    511 	.globl _XX_T1CC2H
                                    512 	.globl _XX_T1CC2L
                                    513 	.globl _XX_T1CC1H
                                    514 	.globl _XX_T1CC1L
                                    515 	.globl _XX_T1CC0H
                                    516 	.globl _XX_T1CC0L
                                    517 	.globl _T1CCTL4
                                    518 	.globl _T1CCTL3
                                    519 	.globl _XX_T1CCTL2
                                    520 	.globl _XX_T1CCTL1
                                    521 	.globl _XX_T1CCTL0
                                    522 	.globl _CLD
                                    523 	.globl _IRCTL
                                    524 	.globl _CHIPINFO1
                                    525 	.globl _CHIPINFO0
                                    526 	.globl _FWDATA
                                    527 	.globl _FADDRH
                                    528 	.globl _FADDRL
                                    529 	.globl _FCTL
                                    530 	.globl _IVCTRL
                                    531 	.globl _BATTMON
                                    532 	.globl _SRCRC
                                    533 	.globl _DBGDATA
                                    534 	.globl _TESTREG0
                                    535 	.globl _CHIPID
                                    536 	.globl _CHVER
                                    537 	.globl _OBSSEL5
                                    538 	.globl _OBSSEL4
                                    539 	.globl _OBSSEL3
                                    540 	.globl _OBSSEL2
                                    541 	.globl _OBSSEL1
                                    542 	.globl _OBSSEL0
                                    543 	.globl _I2CIO
                                    544 	.globl _I2CWC
                                    545 	.globl _I2CADDR
                                    546 	.globl _I2CDATA
                                    547 	.globl _I2CSTAT
                                    548 	.globl _I2CCFG
                                    549 	.globl _OPAMPMC
                                    550 	.globl _MONMUX
                                    551 	.globl _slip_set_input_callback
                                    552 	.globl _slip_send
                                    553 	.globl _slip_write
                                    554 	.globl _slip_input_byte
                                    555 ;--------------------------------------------------------
                                    556 ; special function registers
                                    557 ;--------------------------------------------------------
                                    558 	.area RSEG    (ABS,DATA)
      000000                        559 	.org 0x0000
                           000080   560 _P0	=	0x0080
                           000081   561 _SP	=	0x0081
                           000082   562 _DPL0	=	0x0082
                           000083   563 _DPH0	=	0x0083
                           000084   564 _DPL1	=	0x0084
                           000085   565 _DPH1	=	0x0085
                           000087   566 _PCON	=	0x0087
                           000088   567 _TCON	=	0x0088
                           000090   568 _P1	=	0x0090
                           000092   569 _DPS	=	0x0092
                           000098   570 _S0CON	=	0x0098
                           00009A   571 _IEN2	=	0x009a
                           00009B   572 _S1CON	=	0x009b
                           0000A0   573 _P2	=	0x00a0
                           0000A8   574 _IEN0	=	0x00a8
                           0000A9   575 _IP0	=	0x00a9
                           0000B8   576 _IEN1	=	0x00b8
                           0000B9   577 _IP1	=	0x00b9
                           0000C0   578 _IRCON	=	0x00c0
                           0000D0   579 _PSW	=	0x00d0
                           0000E0   580 _ACC	=	0x00e0
                           0000E8   581 _IRCON2	=	0x00e8
                           0000F0   582 _B	=	0x00f0
                           0000B4   583 _ADCCON1	=	0x00b4
                           0000B5   584 _ADCCON2	=	0x00b5
                           0000B6   585 _ADCCON3	=	0x00b6
                           0000BA   586 _ADCL	=	0x00ba
                           0000BB   587 _ADCH	=	0x00bb
                           0000BC   588 _RNDL	=	0x00bc
                           0000BD   589 _RNDH	=	0x00bd
                           0000B1   590 _ENCDI	=	0x00b1
                           0000B2   591 _ENCDO	=	0x00b2
                           0000B3   592 _ENCCS	=	0x00b3
                           0000D1   593 _DMAIRQ	=	0x00d1
                           0000D2   594 _DMA1CFGL	=	0x00d2
                           0000D3   595 _DMA1CFGH	=	0x00d3
                           0000D4   596 _DMA0CFGL	=	0x00d4
                           0000D5   597 _DMA0CFGH	=	0x00d5
                           0000D6   598 _DMAARM	=	0x00d6
                           0000D7   599 _DMAREQ	=	0x00d7
                           000089   600 _P0IFG	=	0x0089
                           00008A   601 _P1IFG	=	0x008a
                           00008B   602 _P2IFG	=	0x008b
                           00008C   603 _PICTL	=	0x008c
                           0000AB   604 _P0IEN	=	0x00ab
                           00008D   605 _P1IEN	=	0x008d
                           0000AC   606 _P2IEN	=	0x00ac
                           00008F   607 _P0INP	=	0x008f
                           0000F1   608 _PERCFG	=	0x00f1
                           0000F2   609 _APCFG	=	0x00f2
                           0000F3   610 _P0SEL	=	0x00f3
                           0000F4   611 _P1SEL	=	0x00f4
                           0000F5   612 _P2SEL	=	0x00f5
                           0000F6   613 _P1INP	=	0x00f6
                           0000F7   614 _P2INP	=	0x00f7
                           0000FD   615 _P0DIR	=	0x00fd
                           0000FE   616 _P1DIR	=	0x00fe
                           0000FF   617 _P2DIR	=	0x00ff
                           0000AE   618 _PMUX	=	0x00ae
                           000093   619 _MPAGE	=	0x0093
                           000093   620 __XPAGE	=	0x0093
                           0000C7   621 _MEMCTR	=	0x00c7
                           00009F   622 _FMAP	=	0x009f
                           00009F   623 _PSBANK	=	0x009f
                           000091   624 _RFIRQF1	=	0x0091
                           0000D9   625 _RFD	=	0x00d9
                           0000E1   626 _RFST	=	0x00e1
                           0000E9   627 _RFIRQF0	=	0x00e9
                           0000BF   628 _RFERRF	=	0x00bf
                           000095   629 _ST0	=	0x0095
                           000096   630 _ST1	=	0x0096
                           000097   631 _ST2	=	0x0097
                           0000AD   632 _STLOAD	=	0x00ad
                           0000BE   633 _SLEEPCMD	=	0x00be
                           00009D   634 _SLEEPSTA	=	0x009d
                           0000C6   635 _CLKCONCMD	=	0x00c6
                           00009E   636 _CLKCONSTA	=	0x009e
                           0000DA   637 _T1CC0L	=	0x00da
                           0000DB   638 _T1CC0H	=	0x00db
                           0000DC   639 _T1CC1L	=	0x00dc
                           0000DD   640 _T1CC1H	=	0x00dd
                           0000DE   641 _T1CC2L	=	0x00de
                           0000DF   642 _T1CC2H	=	0x00df
                           0000E2   643 _T1CNTL	=	0x00e2
                           0000E3   644 _T1CNTH	=	0x00e3
                           0000E4   645 _T1CTL	=	0x00e4
                           0000E5   646 _T1CCTL0	=	0x00e5
                           0000E6   647 _T1CCTL1	=	0x00e6
                           0000E7   648 _T1CCTL2	=	0x00e7
                           0000AF   649 _T1STAT	=	0x00af
                           000094   650 _T2CTRL	=	0x0094
                           00009C   651 _T2EVTCFG	=	0x009c
                           0000A1   652 _T2IRQF	=	0x00a1
                           0000A2   653 _T2M0	=	0x00a2
                           0000A3   654 _T2M1	=	0x00a3
                           0000A4   655 _T2MOVF0	=	0x00a4
                           0000A5   656 _T2MOVF1	=	0x00a5
                           0000A6   657 _T2MOVF2	=	0x00a6
                           0000A7   658 _T2IRQM	=	0x00a7
                           0000C3   659 _T2MSEL	=	0x00c3
                           0000CA   660 _T3CNT	=	0x00ca
                           0000CB   661 _T3CTL	=	0x00cb
                           0000CC   662 _T3CCTL0	=	0x00cc
                           0000CD   663 _T3CC0	=	0x00cd
                           0000CE   664 _T3CCTL1	=	0x00ce
                           0000CF   665 _T3CC1	=	0x00cf
                           0000EA   666 _T4CNT	=	0x00ea
                           0000EB   667 _T4CTL	=	0x00eb
                           0000EC   668 _T4CCTL0	=	0x00ec
                           0000ED   669 _T4CC0	=	0x00ed
                           0000EE   670 _T4CCTL1	=	0x00ee
                           0000EF   671 _T4CC1	=	0x00ef
                           0000D8   672 _TIMIF	=	0x00d8
                           000086   673 _U0CSR	=	0x0086
                           0000C1   674 _U0DBUF	=	0x00c1
                           0000C2   675 _U0BAUD	=	0x00c2
                           0000C4   676 _U0UCR	=	0x00c4
                           0000C5   677 _U0GCR	=	0x00c5
                           0000F8   678 _U1CSR	=	0x00f8
                           0000F9   679 _U1DBUF	=	0x00f9
                           0000FA   680 _U1BAUD	=	0x00fa
                           0000FB   681 _U1UCR	=	0x00fb
                           0000FC   682 _U1GCR	=	0x00fc
                           0000C9   683 _WDCTL	=	0x00c9
                                    684 ;--------------------------------------------------------
                                    685 ; special function bits
                                    686 ;--------------------------------------------------------
                                    687 	.area RSEG    (ABS,DATA)
      000000                        688 	.org 0x0000
                           000087   689 _P0_7	=	0x0087
                           000086   690 _P0_6	=	0x0086
                           000085   691 _P0_5	=	0x0085
                           000084   692 _P0_4	=	0x0084
                           000083   693 _P0_3	=	0x0083
                           000082   694 _P0_2	=	0x0082
                           000081   695 _P0_1	=	0x0081
                           000080   696 _P0_0	=	0x0080
                           00008F   697 _URX1IF	=	0x008f
                           00008D   698 _ADCIF	=	0x008d
                           00008B   699 _URX0IF	=	0x008b
                           00008A   700 _IT1	=	0x008a
                           000089   701 _RFERRIF	=	0x0089
                           000088   702 _IT0	=	0x0088
                           000097   703 _P1_7	=	0x0097
                           000096   704 _P1_6	=	0x0096
                           000095   705 _P1_5	=	0x0095
                           000094   706 _P1_4	=	0x0094
                           000093   707 _P1_3	=	0x0093
                           000092   708 _P1_2	=	0x0092
                           000091   709 _P1_1	=	0x0091
                           000090   710 _P1_0	=	0x0090
                           000099   711 _ENCIF_1	=	0x0099
                           000098   712 _ENCIF_0	=	0x0098
                           0000A7   713 _P2_7	=	0x00a7
                           0000A6   714 _P2_6	=	0x00a6
                           0000A5   715 _P2_5	=	0x00a5
                           0000A4   716 _P2_4	=	0x00a4
                           0000A3   717 _P2_3	=	0x00a3
                           0000A2   718 _P2_2	=	0x00a2
                           0000A1   719 _P2_1	=	0x00a1
                           0000A0   720 _P2_0	=	0x00a0
                           0000AF   721 _EA	=	0x00af
                           0000AD   722 _STIE	=	0x00ad
                           0000AC   723 _ENCIE	=	0x00ac
                           0000AB   724 _URX1IE	=	0x00ab
                           0000AA   725 _URX0IE	=	0x00aa
                           0000A9   726 _ADCIE	=	0x00a9
                           0000A8   727 _RFERRIE	=	0x00a8
                           0000BD   728 _P0IE	=	0x00bd
                           0000BC   729 _T4IE	=	0x00bc
                           0000BB   730 _T3IE	=	0x00bb
                           0000BA   731 _T2IE	=	0x00ba
                           0000B9   732 _T1IE	=	0x00b9
                           0000B8   733 _DMAIE	=	0x00b8
                           0000C7   734 _STIF	=	0x00c7
                           0000C5   735 _P0IF	=	0x00c5
                           0000C4   736 _T4IF	=	0x00c4
                           0000C3   737 _T3IF	=	0x00c3
                           0000C2   738 _T2IF	=	0x00c2
                           0000C1   739 _T1IF	=	0x00c1
                           0000C0   740 _DMAIF	=	0x00c0
                           0000D7   741 _CY	=	0x00d7
                           0000D6   742 _AC	=	0x00d6
                           0000D5   743 _F0	=	0x00d5
                           0000D4   744 _RS1	=	0x00d4
                           0000D3   745 _RS0	=	0x00d3
                           0000D2   746 _OV	=	0x00d2
                           0000D1   747 _F1	=	0x00d1
                           0000D0   748 _P	=	0x00d0
                           0000E7   749 _ACC_7	=	0x00e7
                           0000E6   750 _ACC_6	=	0x00e6
                           0000E5   751 _ACC_5	=	0x00e5
                           0000E4   752 _ACC_4	=	0x00e4
                           0000E3   753 _ACC_3	=	0x00e3
                           0000E2   754 _ACC_2	=	0x00e2
                           0000E1   755 _ACC_1	=	0x00e1
                           0000E0   756 _ACC_0	=	0x00e0
                           0000EC   757 _WDTIF	=	0x00ec
                           0000EB   758 _P1IF	=	0x00eb
                           0000EA   759 _UTX1IF	=	0x00ea
                           0000E9   760 _UTX0IF	=	0x00e9
                           0000E8   761 _P2IF	=	0x00e8
                           0000F7   762 _B_7	=	0x00f7
                           0000F6   763 _B_6	=	0x00f6
                           0000F5   764 _B_5	=	0x00f5
                           0000F4   765 _B_4	=	0x00f4
                           0000F3   766 _B_3	=	0x00f3
                           0000F2   767 _B_2	=	0x00f2
                           0000F1   768 _B_1	=	0x00f1
                           0000F0   769 _B_0	=	0x00f0
                           0000DE   770 _OVFIM	=	0x00de
                           0000DD   771 _T4CH1IF	=	0x00dd
                           0000DC   772 _T4CH0IF	=	0x00dc
                           0000DB   773 _T4OVFIF	=	0x00db
                           0000DA   774 _T3CH1IF	=	0x00da
                           0000D9   775 _T3CH0IF	=	0x00d9
                           0000D8   776 _T3OVFIF	=	0x00d8
                           0000FF   777 _MODE	=	0x00ff
                           0000FE   778 _RE	=	0x00fe
                           0000FD   779 _SLAVE	=	0x00fd
                           0000FC   780 _FE	=	0x00fc
                           0000FB   781 _ERR	=	0x00fb
                           0000FA   782 _RX_BYTE	=	0x00fa
                           0000F9   783 _TX_BYTE	=	0x00f9
                           0000F8   784 _ACTIVE	=	0x00f8
                                    785 ;--------------------------------------------------------
                                    786 ; overlayable register banks
                                    787 ;--------------------------------------------------------
                                    788 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        789 	.ds 8
                                    790 ;--------------------------------------------------------
                                    791 ; internal ram data
                                    792 ;--------------------------------------------------------
                                    793 	.area DSEG    (DATA)
                                    794 ;--------------------------------------------------------
                                    795 ; overlayable items in internal ram 
                                    796 ;--------------------------------------------------------
                                    797 ;--------------------------------------------------------
                                    798 ; indirectly addressable internal ram data
                                    799 ;--------------------------------------------------------
                                    800 	.area ISEG    (DATA)
                                    801 ;--------------------------------------------------------
                                    802 ; absolute internal ram data
                                    803 ;--------------------------------------------------------
                                    804 	.area IABS    (ABS,DATA)
                                    805 	.area IABS    (ABS,DATA)
                                    806 ;--------------------------------------------------------
                                    807 ; bit data
                                    808 ;--------------------------------------------------------
                                    809 	.area BSEG    (BIT)
                                    810 ;--------------------------------------------------------
                                    811 ; paged external ram data
                                    812 ;--------------------------------------------------------
                                    813 	.area PSEG    (PAG,XDATA)
                                    814 ;--------------------------------------------------------
                                    815 ; external ram data
                                    816 ;--------------------------------------------------------
                                    817 	.area XSEG    (XDATA)
                           0061A6   818 _MONMUX	=	0x61a6
                           0061A6   819 _OPAMPMC	=	0x61a6
                           006230   820 _I2CCFG	=	0x6230
                           006231   821 _I2CSTAT	=	0x6231
                           006232   822 _I2CDATA	=	0x6232
                           006233   823 _I2CADDR	=	0x6233
                           006234   824 _I2CWC	=	0x6234
                           006235   825 _I2CIO	=	0x6235
                           006243   826 _OBSSEL0	=	0x6243
                           006244   827 _OBSSEL1	=	0x6244
                           006245   828 _OBSSEL2	=	0x6245
                           006246   829 _OBSSEL3	=	0x6246
                           006247   830 _OBSSEL4	=	0x6247
                           006248   831 _OBSSEL5	=	0x6248
                           006249   832 _CHVER	=	0x6249
                           00624A   833 _CHIPID	=	0x624a
                           00624B   834 _TESTREG0	=	0x624b
                           006260   835 _DBGDATA	=	0x6260
                           006262   836 _SRCRC	=	0x6262
                           006264   837 _BATTMON	=	0x6264
                           006265   838 _IVCTRL	=	0x6265
                           006270   839 _FCTL	=	0x6270
                           006271   840 _FADDRL	=	0x6271
                           006272   841 _FADDRH	=	0x6272
                           006273   842 _FWDATA	=	0x6273
                           006276   843 _CHIPINFO0	=	0x6276
                           006277   844 _CHIPINFO1	=	0x6277
                           006281   845 _IRCTL	=	0x6281
                           006290   846 _CLD	=	0x6290
                           0062A0   847 _XX_T1CCTL0	=	0x62a0
                           0062A1   848 _XX_T1CCTL1	=	0x62a1
                           0062A2   849 _XX_T1CCTL2	=	0x62a2
                           0062A3   850 _T1CCTL3	=	0x62a3
                           0062A4   851 _T1CCTL4	=	0x62a4
                           0062A6   852 _XX_T1CC0L	=	0x62a6
                           0062A7   853 _XX_T1CC0H	=	0x62a7
                           0062A8   854 _XX_T1CC1L	=	0x62a8
                           0062A9   855 _XX_T1CC1H	=	0x62a9
                           0062AA   856 _XX_T1CC2L	=	0x62aa
                           0062AB   857 _XX_T1CC2H	=	0x62ab
                           0062AC   858 _T1CC3L	=	0x62ac
                           0062AD   859 _T1CC3H	=	0x62ad
                           0062AE   860 _T1CC4L	=	0x62ae
                           0062AF   861 _T1CC4H	=	0x62af
                           0062B0   862 _STCC	=	0x62b0
                           0062B1   863 _STCS	=	0x62b1
                           0062B2   864 _STCV0	=	0x62b2
                           0062B3   865 _STCV1	=	0x62b3
                           0062B4   866 _STCV2	=	0x62b4
                           0062C0   867 _OPAMPC	=	0x62c0
                           0062C1   868 _OPAMPS	=	0x62c1
                           0062D0   869 _CMPCTL	=	0x62d0
                           006000   870 _RFCORE_RAM	=	0x6000
                           006000   871 _RXFIFO	=	0x6000
                           006080   872 _TXFIFO	=	0x6080
                           006100   873 _SRC_ADDR_TABLE	=	0x6100
                           006160   874 _SRCRESMASK0	=	0x6160
                           006161   875 _SRCRESMASK1	=	0x6161
                           006162   876 _SRCRESMASK2	=	0x6162
                           006163   877 _SRCRESINDEX	=	0x6163
                           006164   878 _SRCEXTPENDEN0	=	0x6164
                           006165   879 _SRCEXTPENDEN1	=	0x6165
                           006166   880 _SRCEXTPENDEN2	=	0x6166
                           006167   881 _SRCSHORTPENDEN0	=	0x6167
                           006168   882 _SRCSHORTPENDEN1	=	0x6168
                           006169   883 _SRCSHORTPENDEN2	=	0x6169
                           00616A   884 _EXT_ADDR0	=	0x616a
                           00616B   885 _EXT_ADDR1	=	0x616b
                           00616C   886 _EXT_ADDR2	=	0x616c
                           00616D   887 _EXT_ADDR3	=	0x616d
                           00616E   888 _EXT_ADDR4	=	0x616e
                           00616F   889 _EXT_ADDR5	=	0x616f
                           006170   890 _EXT_ADDR6	=	0x6170
                           006171   891 _EXT_ADDR7	=	0x6171
                           006172   892 _PAN_ID0	=	0x6172
                           006173   893 _PAN_ID1	=	0x6173
                           006174   894 _SHORT_ADDR0	=	0x6174
                           006175   895 _SHORT_ADDR1	=	0x6175
                           006180   896 _FRMFILT0	=	0x6180
                           006181   897 _FRMFILT1	=	0x6181
                           006182   898 _SRCMATCH	=	0x6182
                           006183   899 _SRCSHORTEN0	=	0x6183
                           006184   900 _SRCSHORTEN1	=	0x6184
                           006185   901 _SRCSHORTEN2	=	0x6185
                           006186   902 _SRCEXTEN0	=	0x6186
                           006187   903 _SRCEXTEN1	=	0x6187
                           006188   904 _SRCEXTEN2	=	0x6188
                           006189   905 _FRMCTRL0	=	0x6189
                           00618A   906 _FRMCTRL1	=	0x618a
                           00618B   907 _RXENABLE	=	0x618b
                           00618C   908 _RXMASKSET	=	0x618c
                           00618D   909 _RXMASKCLR	=	0x618d
                           00618E   910 _FREQTUNE	=	0x618e
                           00618F   911 _FREQCTRL	=	0x618f
                           006190   912 _TXPOWER	=	0x6190
                           006191   913 _TXCTRL	=	0x6191
                           006192   914 _FSMSTAT0	=	0x6192
                           006193   915 _FSMSTAT1	=	0x6193
                           006194   916 _FIFOPCTRL	=	0x6194
                           006195   917 _FSMCTRL	=	0x6195
                           006196   918 _CCACTRL0	=	0x6196
                           006197   919 _CCACTRL1	=	0x6197
                           006198   920 _RSSI	=	0x6198
                           006199   921 _RSSISTAT	=	0x6199
                           00619A   922 _RXFIRST	=	0x619a
                           00619B   923 _RXFIFOCNT	=	0x619b
                           00619C   924 _TXFIFOCNT	=	0x619c
                           00619D   925 _RXFIRST_PTR	=	0x619d
                           00619E   926 _RXLAST_PTR	=	0x619e
                           00619F   927 _RXP1_PTR	=	0x619f
                           0061A1   928 _TXFIRST_PTR	=	0x61a1
                           0061A2   929 _TXLAST_PTR	=	0x61a2
                           0061A3   930 _RFIRQM0	=	0x61a3
                           0061A4   931 _RFIRQM1	=	0x61a4
                           0061A5   932 _RFERRM	=	0x61a5
                           0061A7   933 _RFRND	=	0x61a7
                           0061A8   934 _MDMCTRL0	=	0x61a8
                           0061A9   935 _MDMCTRL1	=	0x61a9
                           0061AA   936 _FREQEST	=	0x61aa
                           0061AB   937 _RXCTRL	=	0x61ab
                           0061AC   938 _FSCTRL	=	0x61ac
                           0061AD   939 _FSCAL0	=	0x61ad
                           0061AE   940 _FSCAL1	=	0x61ae
                           0061AF   941 _FSCAL2	=	0x61af
                           0061B0   942 _FSCAL3	=	0x61b0
                           0061B1   943 _AGCCTRL0	=	0x61b1
                           0061B2   944 _AGCCTRL1	=	0x61b2
                           0061B3   945 _AGCCTRL2	=	0x61b3
                           0061B4   946 _AGCCTRL3	=	0x61b4
                           0061B5   947 _ADCTEST0	=	0x61b5
                           0061B6   948 _ADCTEST1	=	0x61b6
                           0061B7   949 _ADCTEST2	=	0x61b7
                           0061B8   950 _MDMTEST0	=	0x61b8
                           0061B9   951 _MDMTEST1	=	0x61b9
                           0061BA   952 _DACTEST0	=	0x61ba
                           0061BB   953 _DACTEST1	=	0x61bb
                           0061BC   954 _DACTEST2	=	0x61bc
                           0061BD   955 _ATEST	=	0x61bd
                           0061BE   956 _PTEST0	=	0x61be
                           0061BF   957 _PTEST1	=	0x61bf
                           0061FA   958 _TXFILTCFG	=	0x61fa
                           0061EB   959 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   960 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   961 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   962 _CSPPROG0	=	0x61c0
                           0061C1   963 _CSPPROG1	=	0x61c1
                           0061C2   964 _CSPPROG2	=	0x61c2
                           0061C3   965 _CSPPROG3	=	0x61c3
                           0061C4   966 _CSPPROG4	=	0x61c4
                           0061C5   967 _CSPPROG5	=	0x61c5
                           0061C6   968 _CSPPROG6	=	0x61c6
                           0061C7   969 _CSPPROG7	=	0x61c7
                           0061C8   970 _CSPPROG8	=	0x61c8
                           0061C9   971 _CSPPROG9	=	0x61c9
                           0061CA   972 _CSPPROG10	=	0x61ca
                           0061CB   973 _CSPPROG11	=	0x61cb
                           0061CC   974 _CSPPROG12	=	0x61cc
                           0061CD   975 _CSPPROG13	=	0x61cd
                           0061CE   976 _CSPPROG14	=	0x61ce
                           0061CF   977 _CSPPROG15	=	0x61cf
                           0061D0   978 _CSPPROG16	=	0x61d0
                           0061D1   979 _CSPPROG17	=	0x61d1
                           0061D2   980 _CSPPROG18	=	0x61d2
                           0061D3   981 _CSPPROG19	=	0x61d3
                           0061D4   982 _CSPPROG20	=	0x61d4
                           0061D5   983 _CSPPROG21	=	0x61d5
                           0061D6   984 _CSPPROG22	=	0x61d6
                           0061D7   985 _CSPPROG23	=	0x61d7
                           0061E0   986 _CSPCTRL	=	0x61e0
                           0061E1   987 _CSPSTAT	=	0x61e1
                           0061E2   988 _CSPX	=	0x61e2
                           0061E3   989 _CSPY	=	0x61e3
                           0061E4   990 _CSPZ	=	0x61e4
                           0061E5   991 _CSPT	=	0x61e5
                           006200   992 _USBADDR	=	0x6200
                           006201   993 _USBPOW	=	0x6201
                           006202   994 _USBIIF	=	0x6202
                           006204   995 _USBOIF	=	0x6204
                           006206   996 _USBCIF	=	0x6206
                           006207   997 _USBIIE	=	0x6207
                           006209   998 _USBOIE	=	0x6209
                           00620B   999 _USBCIE	=	0x620b
                           00620C  1000 _USBFRML	=	0x620c
                           00620D  1001 _USBFRMH	=	0x620d
                           00620E  1002 _USBINDEX	=	0x620e
                           00620F  1003 _USBCTRL	=	0x620f
                           006210  1004 _USBMAXI	=	0x6210
                           006211  1005 _USBCS0	=	0x6211
                           006211  1006 _USBCSIL	=	0x6211
                           006212  1007 _USBCSIH	=	0x6212
                           006213  1008 _USBMAXO	=	0x6213
                           006214  1009 _USBCSOL	=	0x6214
                           006215  1010 _USBCSOH	=	0x6215
                           006216  1011 _USBCNT0	=	0x6216
                           006216  1012 _USBCNTL	=	0x6216
                           006217  1013 _USBCNTH	=	0x6217
                           006220  1014 _USBF0	=	0x6220
                           006222  1015 _USBF1	=	0x6222
                           006224  1016 _USBF2	=	0x6224
                           006226  1017 _USBF3	=	0x6226
                           006228  1018 _USBF4	=	0x6228
                           00622A  1019 _USBF5	=	0x622a
                           007080  1020 _X_P0	=	0x7080
                           007086  1021 _X_U0CSR	=	0x7086
                           007089  1022 _X_P0IFG	=	0x7089
                           00708A  1023 _X_P1IFG	=	0x708a
                           00708B  1024 _X_P2IFG	=	0x708b
                           00708C  1025 _X_PICTL	=	0x708c
                           00708D  1026 _X_P1IEN	=	0x708d
                           00708F  1027 _X_P0INP	=	0x708f
                           007090  1028 _X_P1	=	0x7090
                           007091  1029 _X_RFIRQF1	=	0x7091
                           007093  1030 _X_MPAGE	=	0x7093
                           007093  1031 _X__XPAGE	=	0x7093
                           007094  1032 _X_T2CTRL	=	0x7094
                           007095  1033 _X_ST0	=	0x7095
                           007096  1034 _X_ST1	=	0x7096
                           007097  1035 _X_ST2	=	0x7097
                           00709C  1036 _X_T2EVTCFG	=	0x709c
                           00709D  1037 _X_SLEEPSTA	=	0x709d
                           00709E  1038 _X_CLKCONSTA	=	0x709e
                           00709F  1039 _X_FMAP	=	0x709f
                           00709F  1040 _X_PSBANK	=	0x709f
                           0070A0  1041 _X_P2	=	0x70a0
                           0070A1  1042 _X_T2IRQF	=	0x70a1
                           0070A2  1043 _X_T2M0	=	0x70a2
                           0070A3  1044 _X_T2M1	=	0x70a3
                           0070A4  1045 _X_T2MOVF0	=	0x70a4
                           0070A5  1046 _X_T2MOVF1	=	0x70a5
                           0070A6  1047 _X_T2MOVF2	=	0x70a6
                           0070A7  1048 _X_T2IRQM	=	0x70a7
                           0070AB  1049 _X_P0IEN	=	0x70ab
                           0070AC  1050 _X_P2IEN	=	0x70ac
                           0070AD  1051 _X_STLOAD	=	0x70ad
                           0070AE  1052 _X_PMUX	=	0x70ae
                           0070AF  1053 _X_T1STAT	=	0x70af
                           0070B1  1054 _X_ENCDI	=	0x70b1
                           0070B2  1055 _X_ENCDO	=	0x70b2
                           0070B3  1056 _X_ENCCS	=	0x70b3
                           0070B4  1057 _X_ADCCON1	=	0x70b4
                           0070B5  1058 _X_ADCCON2	=	0x70b5
                           0070B6  1059 _X_ADCCON3	=	0x70b6
                           0070BA  1060 _X_ADCL	=	0x70ba
                           0070BB  1061 _X_ADCH	=	0x70bb
                           0070BC  1062 _X_RNDL	=	0x70bc
                           0070BD  1063 _X_RNDH	=	0x70bd
                           0070BE  1064 _X_SLEEPCMD	=	0x70be
                           0070BF  1065 _X_RFERRF	=	0x70bf
                           0070C1  1066 _X_U0DBUF	=	0x70c1
                           0070C2  1067 _X_U0BAUD	=	0x70c2
                           0070C3  1068 _X_T2MSEL	=	0x70c3
                           0070C4  1069 _X_U0UCR	=	0x70c4
                           0070C5  1070 _X_U0GCR	=	0x70c5
                           0070C6  1071 _X_CLKCONCMD	=	0x70c6
                           0070C7  1072 _X_MEMCTR	=	0x70c7
                           0070C9  1073 _X_WDCTL	=	0x70c9
                           0070CA  1074 _X_T3CNT	=	0x70ca
                           0070CB  1075 _X_T3CTL	=	0x70cb
                           0070CC  1076 _X_T3CCTL0	=	0x70cc
                           0070CD  1077 _X_T3CC0	=	0x70cd
                           0070CE  1078 _X_T3CCTL1	=	0x70ce
                           0070CF  1079 _X_T3CC1	=	0x70cf
                           0070D1  1080 _X_DMAIRQ	=	0x70d1
                           0070D2  1081 _X_DMA1CFGL	=	0x70d2
                           0070D3  1082 _X_DMA1CFGH	=	0x70d3
                           0070D4  1083 _X_DMA0CFGL	=	0x70d4
                           0070D5  1084 _X_DMA0CFGH	=	0x70d5
                           0070D6  1085 _X_DMAARM	=	0x70d6
                           0070D7  1086 _X_DMAREQ	=	0x70d7
                           0070D8  1087 _X_TIMIF	=	0x70d8
                           0070D9  1088 _X_RFD	=	0x70d9
                           0070DA  1089 _X_T1CC0L	=	0x70da
                           0070DB  1090 _X_T1CC0H	=	0x70db
                           0070DC  1091 _X_T1CC1L	=	0x70dc
                           0070DD  1092 _X_T1CC1H	=	0x70dd
                           0070DE  1093 _X_T1CC2L	=	0x70de
                           0070DF  1094 _X_T1CC2H	=	0x70df
                           0070E1  1095 _X_RFST	=	0x70e1
                           0070E2  1096 _X_T1CNTL	=	0x70e2
                           0070E3  1097 _X_T1CNTH	=	0x70e3
                           0070E4  1098 _X_T1CTL	=	0x70e4
                           0070E5  1099 _X_T1CCTL0	=	0x70e5
                           0070E6  1100 _X_T1CCTL1	=	0x70e6
                           0070E7  1101 _X_T1CCTL2	=	0x70e7
                           0070E9  1102 _X_RFIRQF0	=	0x70e9
                           0070EA  1103 _X_T4CNT	=	0x70ea
                           0070EB  1104 _X_T4CTL	=	0x70eb
                           0070EC  1105 _X_T4CCTL0	=	0x70ec
                           0070ED  1106 _X_T4CC0	=	0x70ed
                           0070EE  1107 _X_T4CCTL1	=	0x70ee
                           0070EF  1108 _X_T4CC1	=	0x70ef
                           0070F1  1109 _X_PERCFG	=	0x70f1
                           0070F2  1110 _X_APCFG	=	0x70f2
                           0070F3  1111 _X_P0SEL	=	0x70f3
                           0070F4  1112 _X_P1SEL	=	0x70f4
                           0070F5  1113 _X_P2SEL	=	0x70f5
                           0070F6  1114 _X_P1INP	=	0x70f6
                           0070F7  1115 _X_P2INP	=	0x70f7
                           0070F8  1116 _X_U1CSR	=	0x70f8
                           0070F9  1117 _X_U1DBUF	=	0x70f9
                           0070FA  1118 _X_U1BAUD	=	0x70fa
                           0070FB  1119 _X_U1UCR	=	0x70fb
                           0070FC  1120 _X_U1GCR	=	0x70fc
                           0070FD  1121 _X_P0DIR	=	0x70fd
                           0070FE  1122 _X_P1DIR	=	0x70fe
                           0070FF  1123 _X_P2DIR	=	0x70ff
                           007800  1124 _X_INFOPAGE	=	0x7800
                           00780C  1125 _X_IEEE_ADDR	=	0x780c
      000000                       1126 _slip_active::
      000000                       1127 	.ds 1
      000001                       1128 _begin:
      000001                       1129 	.ds 2
      000003                       1130 _end:
      000003                       1131 	.ds 2
      000005                       1132 _rxbuf:
      000005                       1133 	.ds 110
      000073                       1134 _pkt_end:
      000073                       1135 	.ds 2
      000075                       1136 _process_thread_slip_process_ip_id_6_186:
      000075                       1137 	.ds 2
                                   1138 ;--------------------------------------------------------
                                   1139 ; absolute external ram data
                                   1140 ;--------------------------------------------------------
                                   1141 	.area XABS    (ABS,XDATA)
                                   1142 ;--------------------------------------------------------
                                   1143 ; external initialized ram data
                                   1144 ;--------------------------------------------------------
                                   1145 	.area XISEG   (XDATA)
      000000                       1146 _slip_process::
      000000                       1147 	.ds 9
      000009                       1148 _state:
      000009                       1149 	.ds 1
      00000A                       1150 _input_callback:
      00000A                       1151 	.ds 2
                                   1152 	.area HOME    (CODE)
                                   1153 	.area GSINIT0 (CODE)
                                   1154 	.area GSINIT1 (CODE)
                                   1155 	.area GSINIT2 (CODE)
                                   1156 	.area GSINIT3 (CODE)
                                   1157 	.area GSINIT4 (CODE)
                                   1158 	.area GSINIT5 (CODE)
                                   1159 	.area GSINIT  (CODE)
                                   1160 	.area GSFINAL (CODE)
                                   1161 	.area CSEG    (CODE)
                                   1162 ;--------------------------------------------------------
                                   1163 ; global & static initialisations
                                   1164 ;--------------------------------------------------------
                                   1165 	.area HOME    (CODE)
                                   1166 	.area GSINIT  (CODE)
                                   1167 	.area GSFINAL (CODE)
                                   1168 	.area GSINIT  (CODE)
                                   1169 ;--------------------------------------------------------
                                   1170 ; Home
                                   1171 ;--------------------------------------------------------
                                   1172 	.area HOME    (CODE)
                                   1173 	.area HOME    (CODE)
                                   1174 ;--------------------------------------------------------
                                   1175 ; code
                                   1176 ;--------------------------------------------------------
                                   1177 	.area CSEG    (CODE)
                                   1178 ;------------------------------------------------------------
                                   1179 ;Allocation info for local variables in function 'slip_set_input_callback'
                                   1180 ;------------------------------------------------------------
                                   1181 ;c                         Allocated to registers 
                                   1182 ;------------------------------------------------------------
                                   1183 ;	../contiki-sensinode/core/dev/slip.c:91: slip_set_input_callback(void (*c)(void))
                                   1184 ;	-----------------------------------------
                                   1185 ;	 function slip_set_input_callback
                                   1186 ;	-----------------------------------------
      000000                       1187 _slip_set_input_callback:
                           000007  1188 	ar7 = 0x07
                           000006  1189 	ar6 = 0x06
                           000005  1190 	ar5 = 0x05
                           000004  1191 	ar4 = 0x04
                           000003  1192 	ar3 = 0x03
                           000002  1193 	ar2 = 0x02
                           000001  1194 	ar1 = 0x01
                           000000  1195 	ar0 = 0x00
      000000 AF 83            [24] 1196 	mov	r7,dph
      000002 E5 82            [12] 1197 	mov	a,dpl
      000004 90r00r0A         [24] 1198 	mov	dptr,#_input_callback
      000007 F0               [24] 1199 	movx	@dptr,a
      000008 EF               [12] 1200 	mov	a,r7
      000009 A3               [24] 1201 	inc	dptr
      00000A F0               [24] 1202 	movx	@dptr,a
                                   1203 ;	../contiki-sensinode/core/dev/slip.c:93: input_callback = c;
      00000B 22               [24] 1204 	ret
                                   1205 ;------------------------------------------------------------
                                   1206 ;Allocation info for local variables in function 'slip_send'
                                   1207 ;------------------------------------------------------------
                                   1208 ;i                         Allocated to stack - sp -1
                                   1209 ;ptr                       Allocated to registers r5 r6 r7 
                                   1210 ;c                         Allocated to registers r4 
                                   1211 ;------------------------------------------------------------
                                   1212 ;	../contiki-sensinode/core/dev/slip.c:101: slip_send(void)
                                   1213 ;	-----------------------------------------
                                   1214 ;	 function slip_send
                                   1215 ;	-----------------------------------------
      00000C                       1216 _slip_send:
      00000C 05 81            [12] 1217 	inc	sp
      00000E 05 81            [12] 1218 	inc	sp
                                   1219 ;	../contiki-sensinode/core/dev/slip.c:107: slip_arch_writeb(SLIP_END);
      000010 75 82 C0         [24] 1220 	mov	dpl,#0xC0
      000013 12r00r00         [24] 1221 	lcall	_slip_arch_writeb
                                   1222 ;	../contiki-sensinode/core/dev/slip.c:109: ptr = &uip_buf[UIP_LLH_LEN];
      000016 7Dr0E            [12] 1223 	mov	r5,#(_uip_aligned_buf + 0x000e)
      000018 7Es00            [12] 1224 	mov	r6,#((_uip_aligned_buf + 0x000e) >> 8)
      00001A 7F 00            [12] 1225 	mov	r7,#0x00
                                   1226 ;	../contiki-sensinode/core/dev/slip.c:110: for(i = 0; i < uip_len; ++i) {
      00001C A8 81            [24] 1227 	mov	r0,sp
      00001E 18               [12] 1228 	dec	r0
      00001F E4               [12] 1229 	clr	a
      000020 F6               [12] 1230 	mov	@r0,a
      000021 08               [12] 1231 	inc	r0
      000022 F6               [12] 1232 	mov	@r0,a
      000023                       1233 00110$:
      000023 C0 05            [24] 1234 	push	ar5
      000025 C0 06            [24] 1235 	push	ar6
      000027 C0 07            [24] 1236 	push	ar7
      000029 90r00r00         [24] 1237 	mov	dptr,#_uip_len
      00002C E0               [24] 1238 	movx	a,@dptr
      00002D FA               [12] 1239 	mov	r2,a
      00002E A3               [24] 1240 	inc	dptr
      00002F E0               [24] 1241 	movx	a,@dptr
      000030 FF               [12] 1242 	mov	r7,a
      000031 E5 81            [12] 1243 	mov	a,sp
      000033 24 FC            [12] 1244 	add	a,#0xfc
      000035 F8               [12] 1245 	mov	r0,a
      000036 C3               [12] 1246 	clr	c
      000037 E6               [12] 1247 	mov	a,@r0
      000038 9A               [12] 1248 	subb	a,r2
      000039 08               [12] 1249 	inc	r0
      00003A E6               [12] 1250 	mov	a,@r0
      00003B 9F               [12] 1251 	subb	a,r7
      00003C D0 07            [24] 1252 	pop	ar7
      00003E D0 06            [24] 1253 	pop	ar6
      000040 D0 05            [24] 1254 	pop	ar5
      000042 40 03            [24] 1255 	jc	00130$
      000044 02r00rBE         [24] 1256 	ljmp	00108$
      000047                       1257 00130$:
                                   1258 ;	../contiki-sensinode/core/dev/slip.c:111: if(i == UIP_TCPIP_HLEN) {
      000047 A8 81            [24] 1259 	mov	r0,sp
      000049 18               [12] 1260 	dec	r0
      00004A B6 28 15         [24] 1261 	cjne	@r0,#0x28,00102$
      00004D 08               [12] 1262 	inc	r0
      00004E B6 00 11         [24] 1263 	cjne	@r0,#0x00,00102$
                                   1264 ;	../contiki-sensinode/core/dev/slip.c:112: ptr = (uint8_t *)uip_appdata;
      000051 90r00r00         [24] 1265 	mov	dptr,#_uip_appdata
      000054 E0               [24] 1266 	movx	a,@dptr
      000055 FA               [12] 1267 	mov	r2,a
      000056 A3               [24] 1268 	inc	dptr
      000057 E0               [24] 1269 	movx	a,@dptr
      000058 FB               [12] 1270 	mov	r3,a
      000059 A3               [24] 1271 	inc	dptr
      00005A E0               [24] 1272 	movx	a,@dptr
      00005B FC               [12] 1273 	mov	r4,a
      00005C 8A 05            [24] 1274 	mov	ar5,r2
      00005E 8B 06            [24] 1275 	mov	ar6,r3
      000060 8C 07            [24] 1276 	mov	ar7,r4
      000062                       1277 00102$:
                                   1278 ;	../contiki-sensinode/core/dev/slip.c:114: c = *ptr++;
      000062 8D 82            [24] 1279 	mov	dpl,r5
      000064 8E 83            [24] 1280 	mov	dph,r6
      000066 8F F0            [24] 1281 	mov	b,r7
      000068 12r00r00         [24] 1282 	lcall	__gptrget
      00006B FC               [12] 1283 	mov	r4,a
      00006C A3               [24] 1284 	inc	dptr
      00006D AD 82            [24] 1285 	mov	r5,dpl
      00006F AE 83            [24] 1286 	mov	r6,dph
                                   1287 ;	../contiki-sensinode/core/dev/slip.c:115: if(c == SLIP_END) {
      000071 BC C0 16         [24] 1288 	cjne	r4,#0xC0,00106$
                                   1289 ;	../contiki-sensinode/core/dev/slip.c:116: slip_arch_writeb(SLIP_ESC);
      000074 75 82 DB         [24] 1290 	mov	dpl,#0xDB
      000077 C0 07            [24] 1291 	push	ar7
      000079 C0 06            [24] 1292 	push	ar6
      00007B C0 05            [24] 1293 	push	ar5
      00007D 12r00r00         [24] 1294 	lcall	_slip_arch_writeb
      000080 D0 05            [24] 1295 	pop	ar5
      000082 D0 06            [24] 1296 	pop	ar6
      000084 D0 07            [24] 1297 	pop	ar7
                                   1298 ;	../contiki-sensinode/core/dev/slip.c:117: c = SLIP_ESC_END;
      000086 7C DC            [12] 1299 	mov	r4,#0xDC
      000088 80 17            [24] 1300 	sjmp	00107$
      00008A                       1301 00106$:
                                   1302 ;	../contiki-sensinode/core/dev/slip.c:118: } else if(c == SLIP_ESC) {
      00008A BC DB 14         [24] 1303 	cjne	r4,#0xDB,00107$
                                   1304 ;	../contiki-sensinode/core/dev/slip.c:119: slip_arch_writeb(SLIP_ESC);
      00008D 75 82 DB         [24] 1305 	mov	dpl,#0xDB
      000090 C0 07            [24] 1306 	push	ar7
      000092 C0 06            [24] 1307 	push	ar6
      000094 C0 05            [24] 1308 	push	ar5
      000096 12r00r00         [24] 1309 	lcall	_slip_arch_writeb
      000099 D0 05            [24] 1310 	pop	ar5
      00009B D0 06            [24] 1311 	pop	ar6
      00009D D0 07            [24] 1312 	pop	ar7
                                   1313 ;	../contiki-sensinode/core/dev/slip.c:120: c = SLIP_ESC_ESC;
      00009F 7C DD            [12] 1314 	mov	r4,#0xDD
      0000A1                       1315 00107$:
                                   1316 ;	../contiki-sensinode/core/dev/slip.c:122: slip_arch_writeb(c);
      0000A1 8C 82            [24] 1317 	mov	dpl,r4
      0000A3 C0 07            [24] 1318 	push	ar7
      0000A5 C0 06            [24] 1319 	push	ar6
      0000A7 C0 05            [24] 1320 	push	ar5
      0000A9 12r00r00         [24] 1321 	lcall	_slip_arch_writeb
      0000AC D0 05            [24] 1322 	pop	ar5
      0000AE D0 06            [24] 1323 	pop	ar6
      0000B0 D0 07            [24] 1324 	pop	ar7
                                   1325 ;	../contiki-sensinode/core/dev/slip.c:110: for(i = 0; i < uip_len; ++i) {
      0000B2 A8 81            [24] 1326 	mov	r0,sp
      0000B4 18               [12] 1327 	dec	r0
      0000B5 06               [12] 1328 	inc	@r0
      0000B6 B6 00 02         [24] 1329 	cjne	@r0,#0x00,00137$
      0000B9 08               [12] 1330 	inc	r0
      0000BA 06               [12] 1331 	inc	@r0
      0000BB                       1332 00137$:
      0000BB 02r00r23         [24] 1333 	ljmp	00110$
      0000BE                       1334 00108$:
                                   1335 ;	../contiki-sensinode/core/dev/slip.c:124: slip_arch_writeb(SLIP_END);
      0000BE 75 82 C0         [24] 1336 	mov	dpl,#0xC0
      0000C1 12r00r00         [24] 1337 	lcall	_slip_arch_writeb
                                   1338 ;	../contiki-sensinode/core/dev/slip.c:126: return UIP_FW_OK;
      0000C4 75 82 00         [24] 1339 	mov	dpl,#0x00
      0000C7 15 81            [12] 1340 	dec	sp
      0000C9 15 81            [12] 1341 	dec	sp
      0000CB 22               [24] 1342 	ret
                                   1343 ;------------------------------------------------------------
                                   1344 ;Allocation info for local variables in function 'slip_write'
                                   1345 ;------------------------------------------------------------
                                   1346 ;len                       Allocated to stack - sp -3
                                   1347 ;_ptr                      Allocated to registers r5 r6 r7 
                                   1348 ;ptr                       Allocated to registers r5 r6 r7 
                                   1349 ;i                         Allocated to registers r3 r4 
                                   1350 ;c                         Allocated to registers r2 
                                   1351 ;------------------------------------------------------------
                                   1352 ;	../contiki-sensinode/core/dev/slip.c:131: slip_write(const void *_ptr, int len)
                                   1353 ;	-----------------------------------------
                                   1354 ;	 function slip_write
                                   1355 ;	-----------------------------------------
      0000CC                       1356 _slip_write:
      0000CC AD 82            [24] 1357 	mov	r5,dpl
      0000CE AE 83            [24] 1358 	mov	r6,dph
      0000D0 AF F0            [24] 1359 	mov	r7,b
                                   1360 ;	../contiki-sensinode/core/dev/slip.c:133: const uint8_t *ptr = _ptr;
                                   1361 ;	../contiki-sensinode/core/dev/slip.c:137: slip_arch_writeb(SLIP_END);
      0000D2 75 82 C0         [24] 1362 	mov	dpl,#0xC0
      0000D5 C0 07            [24] 1363 	push	ar7
      0000D7 C0 06            [24] 1364 	push	ar6
      0000D9 C0 05            [24] 1365 	push	ar5
      0000DB 12r00r00         [24] 1366 	lcall	_slip_arch_writeb
      0000DE D0 05            [24] 1367 	pop	ar5
      0000E0 D0 06            [24] 1368 	pop	ar6
      0000E2 D0 07            [24] 1369 	pop	ar7
                                   1370 ;	../contiki-sensinode/core/dev/slip.c:139: for(i = 0; i < len; ++i) {
      0000E4 7B 00            [12] 1371 	mov	r3,#0x00
      0000E6 7C 00            [12] 1372 	mov	r4,#0x00
      0000E8                       1373 00108$:
      0000E8 C0 05            [24] 1374 	push	ar5
      0000EA C0 06            [24] 1375 	push	ar6
      0000EC C0 07            [24] 1376 	push	ar7
      0000EE E5 81            [12] 1377 	mov	a,sp
      0000F0 24 FA            [12] 1378 	add	a,#0xfa
      0000F2 F8               [12] 1379 	mov	r0,a
      0000F3 86 02            [24] 1380 	mov	ar2,@r0
      0000F5 08               [12] 1381 	inc	r0
      0000F6 86 07            [24] 1382 	mov	ar7,@r0
      0000F8 C3               [12] 1383 	clr	c
      0000F9 EB               [12] 1384 	mov	a,r3
      0000FA 9A               [12] 1385 	subb	a,r2
      0000FB EC               [12] 1386 	mov	a,r4
      0000FC 9F               [12] 1387 	subb	a,r7
      0000FD D0 07            [24] 1388 	pop	ar7
      0000FF D0 06            [24] 1389 	pop	ar6
      000101 D0 05            [24] 1390 	pop	ar5
      000103 50 70            [24] 1391 	jnc	00106$
                                   1392 ;	../contiki-sensinode/core/dev/slip.c:140: c = *ptr++;
      000105 8D 82            [24] 1393 	mov	dpl,r5
      000107 8E 83            [24] 1394 	mov	dph,r6
      000109 8F F0            [24] 1395 	mov	b,r7
      00010B 12r00r00         [24] 1396 	lcall	__gptrget
      00010E FA               [12] 1397 	mov	r2,a
      00010F A3               [24] 1398 	inc	dptr
      000110 AD 82            [24] 1399 	mov	r5,dpl
      000112 AE 83            [24] 1400 	mov	r6,dph
                                   1401 ;	../contiki-sensinode/core/dev/slip.c:141: if(c == SLIP_END) {
      000114 BA C0 1E         [24] 1402 	cjne	r2,#0xC0,00104$
                                   1403 ;	../contiki-sensinode/core/dev/slip.c:142: slip_arch_writeb(SLIP_ESC);
      000117 75 82 DB         [24] 1404 	mov	dpl,#0xDB
      00011A C0 07            [24] 1405 	push	ar7
      00011C C0 06            [24] 1406 	push	ar6
      00011E C0 05            [24] 1407 	push	ar5
      000120 C0 04            [24] 1408 	push	ar4
      000122 C0 03            [24] 1409 	push	ar3
      000124 12r00r00         [24] 1410 	lcall	_slip_arch_writeb
      000127 D0 03            [24] 1411 	pop	ar3
      000129 D0 04            [24] 1412 	pop	ar4
      00012B D0 05            [24] 1413 	pop	ar5
      00012D D0 06            [24] 1414 	pop	ar6
      00012F D0 07            [24] 1415 	pop	ar7
                                   1416 ;	../contiki-sensinode/core/dev/slip.c:143: c = SLIP_ESC_END;
      000131 7A DC            [12] 1417 	mov	r2,#0xDC
      000133 80 1F            [24] 1418 	sjmp	00105$
      000135                       1419 00104$:
                                   1420 ;	../contiki-sensinode/core/dev/slip.c:144: } else if(c == SLIP_ESC) {
      000135 BA DB 1C         [24] 1421 	cjne	r2,#0xDB,00105$
                                   1422 ;	../contiki-sensinode/core/dev/slip.c:145: slip_arch_writeb(SLIP_ESC);
      000138 75 82 DB         [24] 1423 	mov	dpl,#0xDB
      00013B C0 07            [24] 1424 	push	ar7
      00013D C0 06            [24] 1425 	push	ar6
      00013F C0 05            [24] 1426 	push	ar5
      000141 C0 04            [24] 1427 	push	ar4
      000143 C0 03            [24] 1428 	push	ar3
      000145 12r00r00         [24] 1429 	lcall	_slip_arch_writeb
      000148 D0 03            [24] 1430 	pop	ar3
      00014A D0 04            [24] 1431 	pop	ar4
      00014C D0 05            [24] 1432 	pop	ar5
      00014E D0 06            [24] 1433 	pop	ar6
      000150 D0 07            [24] 1434 	pop	ar7
                                   1435 ;	../contiki-sensinode/core/dev/slip.c:146: c = SLIP_ESC_ESC;
      000152 7A DD            [12] 1436 	mov	r2,#0xDD
      000154                       1437 00105$:
                                   1438 ;	../contiki-sensinode/core/dev/slip.c:148: slip_arch_writeb(c);
      000154 8A 82            [24] 1439 	mov	dpl,r2
      000156 C0 07            [24] 1440 	push	ar7
      000158 C0 06            [24] 1441 	push	ar6
      00015A C0 05            [24] 1442 	push	ar5
      00015C C0 04            [24] 1443 	push	ar4
      00015E C0 03            [24] 1444 	push	ar3
      000160 12r00r00         [24] 1445 	lcall	_slip_arch_writeb
      000163 D0 03            [24] 1446 	pop	ar3
      000165 D0 04            [24] 1447 	pop	ar4
      000167 D0 05            [24] 1448 	pop	ar5
      000169 D0 06            [24] 1449 	pop	ar6
      00016B D0 07            [24] 1450 	pop	ar7
                                   1451 ;	../contiki-sensinode/core/dev/slip.c:139: for(i = 0; i < len; ++i) {
      00016D 0B               [12] 1452 	inc	r3
      00016E BB 00 01         [24] 1453 	cjne	r3,#0x00,00130$
      000171 0C               [12] 1454 	inc	r4
      000172                       1455 00130$:
      000172 02r00rE8         [24] 1456 	ljmp	00108$
      000175                       1457 00106$:
                                   1458 ;	../contiki-sensinode/core/dev/slip.c:150: slip_arch_writeb(SLIP_END);
      000175 75 82 C0         [24] 1459 	mov	dpl,#0xC0
      000178 12r00r00         [24] 1460 	lcall	_slip_arch_writeb
                                   1461 ;	../contiki-sensinode/core/dev/slip.c:152: return len;
      00017B E5 81            [12] 1462 	mov	a,sp
      00017D 24 FD            [12] 1463 	add	a,#0xfd
      00017F F8               [12] 1464 	mov	r0,a
      000180 86 07            [24] 1465 	mov	ar7,@r0
      000182 8F 82            [24] 1466 	mov	dpl,r7
      000184 22               [24] 1467 	ret
                                   1468 ;------------------------------------------------------------
                                   1469 ;Allocation info for local variables in function 'rxbuf_init'
                                   1470 ;------------------------------------------------------------
                                   1471 ;	../contiki-sensinode/core/dev/slip.c:156: rxbuf_init(void)
                                   1472 ;	-----------------------------------------
                                   1473 ;	 function rxbuf_init
                                   1474 ;	-----------------------------------------
      000185                       1475 _rxbuf_init:
                                   1476 ;	../contiki-sensinode/core/dev/slip.c:158: begin = end = pkt_end = 0;
      000185 90r00r73         [24] 1477 	mov	dptr,#_pkt_end
      000188 E4               [12] 1478 	clr	a
      000189 F0               [24] 1479 	movx	@dptr,a
      00018A A3               [24] 1480 	inc	dptr
      00018B F0               [24] 1481 	movx	@dptr,a
      00018C 90r00r03         [24] 1482 	mov	dptr,#_end
      00018F F0               [24] 1483 	movx	@dptr,a
      000190 A3               [24] 1484 	inc	dptr
      000191 F0               [24] 1485 	movx	@dptr,a
      000192 90r00r01         [24] 1486 	mov	dptr,#_begin
      000195 F0               [24] 1487 	movx	@dptr,a
      000196 A3               [24] 1488 	inc	dptr
      000197 F0               [24] 1489 	movx	@dptr,a
                                   1490 ;	../contiki-sensinode/core/dev/slip.c:159: state = STATE_OK;
      000198 90r00r09         [24] 1491 	mov	dptr,#_state
      00019B 04               [12] 1492 	inc	a
      00019C F0               [24] 1493 	movx	@dptr,a
      00019D 22               [24] 1494 	ret
                                   1495 ;------------------------------------------------------------
                                   1496 ;Allocation info for local variables in function 'slip_poll_handler'
                                   1497 ;------------------------------------------------------------
                                   1498 ;blen                      Allocated to stack - sp -8
                                   1499 ;outbuf                    Allocated to stack - sp -4
                                   1500 ;i                         Allocated to registers r3 r4 
                                   1501 ;len                       Allocated to stack - sp -1
                                   1502 ;i                         Allocated to registers 
                                   1503 ;sloc0                     Allocated to stack - sp +5
                                   1504 ;sloc1                     Allocated to stack - sp +7
                                   1505 ;sloc2                     Allocated to stack - sp +9
                                   1506 ;------------------------------------------------------------
                                   1507 ;	../contiki-sensinode/core/dev/slip.c:164: slip_poll_handler(uint8_t *outbuf, uint16_t blen)
                                   1508 ;	-----------------------------------------
                                   1509 ;	 function slip_poll_handler
                                   1510 ;	-----------------------------------------
      00019E                       1511 _slip_poll_handler:
      00019E C0 82            [24] 1512 	push	dpl
      0001A0 C0 83            [24] 1513 	push	dph
      0001A2 C0 F0            [24] 1514 	push	b
      0001A4 05 81            [12] 1515 	inc	sp
      0001A6 05 81            [12] 1516 	inc	sp
                                   1517 ;	../contiki-sensinode/core/dev/slip.c:167: if(rxbuf[begin] == 'C') {
      0001A8 90r00r01         [24] 1518 	mov	dptr,#_begin
      0001AB E0               [24] 1519 	movx	a,@dptr
      0001AC FB               [12] 1520 	mov	r3,a
      0001AD A3               [24] 1521 	inc	dptr
      0001AE E0               [24] 1522 	movx	a,@dptr
      0001AF FC               [12] 1523 	mov	r4,a
      0001B0 EB               [12] 1524 	mov	a,r3
      0001B1 24r05            [12] 1525 	add	a,#_rxbuf
      0001B3 FF               [12] 1526 	mov	r7,a
      0001B4 EC               [12] 1527 	mov	a,r4
      0001B5 34s00            [12] 1528 	addc	a,#(_rxbuf >> 8)
      0001B7 FE               [12] 1529 	mov	r6,a
      0001B8 8F 82            [24] 1530 	mov	dpl,r7
      0001BA 8E 83            [24] 1531 	mov	dph,r6
      0001BC E0               [24] 1532 	movx	a,@dptr
      0001BD FA               [12] 1533 	mov	r2,a
      0001BE BA 43 02         [24] 1534 	cjne	r2,#0x43,00181$
      0001C1 80 03            [24] 1535 	sjmp	00182$
      0001C3                       1536 00181$:
      0001C3 02r02r80         [24] 1537 	ljmp	00107$
      0001C6                       1538 00182$:
                                   1539 ;	../contiki-sensinode/core/dev/slip.c:169: if(begin < end && (end - begin) >= 6
      0001C6 90r00r03         [24] 1540 	mov	dptr,#_end
      0001C9 E0               [24] 1541 	movx	a,@dptr
      0001CA FD               [12] 1542 	mov	r5,a
      0001CB A3               [24] 1543 	inc	dptr
      0001CC E0               [24] 1544 	movx	a,@dptr
      0001CD FA               [12] 1545 	mov	r2,a
      0001CE C3               [12] 1546 	clr	c
      0001CF EB               [12] 1547 	mov	a,r3
      0001D0 9D               [12] 1548 	subb	a,r5
      0001D1 EC               [12] 1549 	mov	a,r4
      0001D2 9A               [12] 1550 	subb	a,r2
      0001D3 40 03            [24] 1551 	jc	00183$
      0001D5 02r02r80         [24] 1552 	ljmp	00107$
      0001D8                       1553 00183$:
      0001D8 ED               [12] 1554 	mov	a,r5
      0001D9 C3               [12] 1555 	clr	c
      0001DA 9B               [12] 1556 	subb	a,r3
      0001DB FB               [12] 1557 	mov	r3,a
      0001DC EA               [12] 1558 	mov	a,r2
      0001DD 9C               [12] 1559 	subb	a,r4
      0001DE FC               [12] 1560 	mov	r4,a
      0001DF C3               [12] 1561 	clr	c
      0001E0 EB               [12] 1562 	mov	a,r3
      0001E1 94 06            [12] 1563 	subb	a,#0x06
      0001E3 EC               [12] 1564 	mov	a,r4
      0001E4 94 00            [12] 1565 	subb	a,#0x00
      0001E6 50 03            [24] 1566 	jnc	00184$
      0001E8 02r02r80         [24] 1567 	ljmp	00107$
      0001EB                       1568 00184$:
                                   1569 ;	../contiki-sensinode/core/dev/slip.c:170: && memcmp(&rxbuf[begin], "CLIENT", 6) == 0) {
      0001EB 8F 03            [24] 1570 	mov	ar3,r7
      0001ED 8E 04            [24] 1571 	mov	ar4,r6
      0001EF 7A 00            [12] 1572 	mov	r2,#0x00
      0001F1 74 06            [12] 1573 	mov	a,#0x06
      0001F3 C0 E0            [24] 1574 	push	acc
      0001F5 E4               [12] 1575 	clr	a
      0001F6 C0 E0            [24] 1576 	push	acc
      0001F8 74r00            [12] 1577 	mov	a,#___str_0
      0001FA C0 E0            [24] 1578 	push	acc
      0001FC 74s00            [12] 1579 	mov	a,#(___str_0 >> 8)
      0001FE C0 E0            [24] 1580 	push	acc
      000200 74 80            [12] 1581 	mov	a,#0x80
      000202 C0 E0            [24] 1582 	push	acc
      000204 8B 82            [24] 1583 	mov	dpl,r3
      000206 8C 83            [24] 1584 	mov	dph,r4
      000208 8A F0            [24] 1585 	mov	b,r2
      00020A 12r00r00         [24] 1586 	lcall	_memcmp
      00020D AB 82            [24] 1587 	mov	r3,dpl
      00020F AC 83            [24] 1588 	mov	r4,dph
      000211 E5 81            [12] 1589 	mov	a,sp
      000213 24 FB            [12] 1590 	add	a,#0xfb
      000215 F5 81            [12] 1591 	mov	sp,a
      000217 EB               [12] 1592 	mov	a,r3
      000218 4C               [12] 1593 	orl	a,r4
      000219 70 65            [24] 1594 	jnz	00107$
                                   1595 ;	../contiki-sensinode/core/dev/slip.c:171: state = STATE_TWOPACKETS;	/* Interrupts do nothing. */
      00021B 90r00r09         [24] 1596 	mov	dptr,#_state
      00021E E4               [12] 1597 	clr	a
      00021F F0               [24] 1598 	movx	@dptr,a
                                   1599 ;	../contiki-sensinode/core/dev/slip.c:172: memset(&rxbuf[begin], 0x0, 6);
      000220 90r00r01         [24] 1600 	mov	dptr,#_begin
      000223 E0               [24] 1601 	movx	a,@dptr
      000224 FB               [12] 1602 	mov	r3,a
      000225 A3               [24] 1603 	inc	dptr
      000226 E0               [24] 1604 	movx	a,@dptr
      000227 FC               [12] 1605 	mov	r4,a
      000228 EB               [12] 1606 	mov	a,r3
      000229 24r05            [12] 1607 	add	a,#_rxbuf
      00022B FB               [12] 1608 	mov	r3,a
      00022C EC               [12] 1609 	mov	a,r4
      00022D 34s00            [12] 1610 	addc	a,#(_rxbuf >> 8)
      00022F FC               [12] 1611 	mov	r4,a
      000230 7A 00            [12] 1612 	mov	r2,#0x00
      000232 74 06            [12] 1613 	mov	a,#0x06
      000234 C0 E0            [24] 1614 	push	acc
      000236 E4               [12] 1615 	clr	a
      000237 C0 E0            [24] 1616 	push	acc
      000239 C0 E0            [24] 1617 	push	acc
      00023B 8B 82            [24] 1618 	mov	dpl,r3
      00023D 8C 83            [24] 1619 	mov	dph,r4
      00023F 8A F0            [24] 1620 	mov	b,r2
      000241 12r00r00         [24] 1621 	lcall	_memset
      000244 15 81            [12] 1622 	dec	sp
      000246 15 81            [12] 1623 	dec	sp
      000248 15 81            [12] 1624 	dec	sp
                                   1625 ;	../contiki-sensinode/core/dev/slip.c:174: rxbuf_init();
      00024A 12r01r85         [24] 1626 	lcall	_rxbuf_init
                                   1627 ;	../contiki-sensinode/core/dev/slip.c:176: for(i = 0; i < 13; i++) {
      00024D 7B 00            [12] 1628 	mov	r3,#0x00
      00024F 7C 00            [12] 1629 	mov	r4,#0x00
      000251                       1630 00123$:
                                   1631 ;	../contiki-sensinode/core/dev/slip.c:177: slip_arch_writeb("CLIENTSERVER\300"[i]);
      000251 EB               [12] 1632 	mov	a,r3
      000252 24r07            [12] 1633 	add	a,#___str_1
      000254 F5 82            [12] 1634 	mov	dpl,a
      000256 EC               [12] 1635 	mov	a,r4
      000257 34s00            [12] 1636 	addc	a,#(___str_1 >> 8)
      000259 F5 83            [12] 1637 	mov	dph,a
      00025B E4               [12] 1638 	clr	a
      00025C 93               [24] 1639 	movc	a,@a+dptr
      00025D F5 82            [12] 1640 	mov	dpl,a
      00025F C0 04            [24] 1641 	push	ar4
      000261 C0 03            [24] 1642 	push	ar3
      000263 12r00r00         [24] 1643 	lcall	_slip_arch_writeb
      000266 D0 03            [24] 1644 	pop	ar3
      000268 D0 04            [24] 1645 	pop	ar4
                                   1646 ;	../contiki-sensinode/core/dev/slip.c:176: for(i = 0; i < 13; i++) {
      00026A 0B               [12] 1647 	inc	r3
      00026B BB 00 01         [24] 1648 	cjne	r3,#0x00,00186$
      00026E 0C               [12] 1649 	inc	r4
      00026F                       1650 00186$:
      00026F C3               [12] 1651 	clr	c
      000270 EB               [12] 1652 	mov	a,r3
      000271 94 0D            [12] 1653 	subb	a,#0x0D
      000273 EC               [12] 1654 	mov	a,r4
      000274 64 80            [12] 1655 	xrl	a,#0x80
      000276 94 80            [12] 1656 	subb	a,#0x80
      000278 40 D7            [24] 1657 	jc	00123$
                                   1658 ;	../contiki-sensinode/core/dev/slip.c:179: return 0;
      00027A 90 00 00         [24] 1659 	mov	dptr,#0x0000
      00027D 02r03rF8         [24] 1660 	ljmp	00131$
      000280                       1661 00107$:
                                   1662 ;	../contiki-sensinode/core/dev/slip.c:213: if(begin != pkt_end) {
      000280 90r00r01         [24] 1663 	mov	dptr,#_begin
      000283 E0               [24] 1664 	movx	a,@dptr
      000284 FB               [12] 1665 	mov	r3,a
      000285 A3               [24] 1666 	inc	dptr
      000286 E0               [24] 1667 	movx	a,@dptr
      000287 FC               [12] 1668 	mov	r4,a
      000288 90r00r73         [24] 1669 	mov	dptr,#_pkt_end
      00028B E0               [24] 1670 	movx	a,@dptr
      00028C FD               [12] 1671 	mov	r5,a
      00028D A3               [24] 1672 	inc	dptr
      00028E E0               [24] 1673 	movx	a,@dptr
      00028F FA               [12] 1674 	mov	r2,a
      000290 EB               [12] 1675 	mov	a,r3
      000291 B5 05 07         [24] 1676 	cjne	a,ar5,00188$
      000294 EC               [12] 1677 	mov	a,r4
      000295 B5 02 03         [24] 1678 	cjne	a,ar2,00188$
      000298 02r03rF5         [24] 1679 	ljmp	00122$
      00029B                       1680 00188$:
                                   1681 ;	../contiki-sensinode/core/dev/slip.c:216: if(begin < pkt_end) {
      00029B C3               [12] 1682 	clr	c
      00029C EB               [12] 1683 	mov	a,r3
      00029D 9D               [12] 1684 	subb	a,r5
      00029E EC               [12] 1685 	mov	a,r4
      00029F 9A               [12] 1686 	subb	a,r2
      0002A0 50 63            [24] 1687 	jnc	00117$
                                   1688 ;	../contiki-sensinode/core/dev/slip.c:217: len = pkt_end - begin;
      0002A2 ED               [12] 1689 	mov	a,r5
      0002A3 C3               [12] 1690 	clr	c
      0002A4 9B               [12] 1691 	subb	a,r3
      0002A5 FF               [12] 1692 	mov	r7,a
      0002A6 EA               [12] 1693 	mov	a,r2
      0002A7 9C               [12] 1694 	subb	a,r4
      0002A8 FE               [12] 1695 	mov	r6,a
      0002A9 A8 81            [24] 1696 	mov	r0,sp
      0002AB 18               [12] 1697 	dec	r0
      0002AC A6 07            [24] 1698 	mov	@r0,ar7
      0002AE 08               [12] 1699 	inc	r0
      0002AF A6 06            [24] 1700 	mov	@r0,ar6
                                   1701 ;	../contiki-sensinode/core/dev/slip.c:218: if(len > blen) {
      0002B1 A8 81            [24] 1702 	mov	r0,sp
      0002B3 18               [12] 1703 	dec	r0
      0002B4 E5 81            [12] 1704 	mov	a,sp
      0002B6 24 F8            [12] 1705 	add	a,#0xf8
      0002B8 F9               [12] 1706 	mov	r1,a
      0002B9 C3               [12] 1707 	clr	c
      0002BA E7               [12] 1708 	mov	a,@r1
      0002BB 96               [12] 1709 	subb	a,@r0
      0002BC 09               [12] 1710 	inc	r1
      0002BD E7               [12] 1711 	mov	a,@r1
      0002BE 08               [12] 1712 	inc	r0
      0002BF 96               [12] 1713 	subb	a,@r0
      0002C0 50 0A            [24] 1714 	jnc	00109$
                                   1715 ;	../contiki-sensinode/core/dev/slip.c:219: len = 0;
      0002C2 A8 81            [24] 1716 	mov	r0,sp
      0002C4 18               [12] 1717 	dec	r0
      0002C5 E4               [12] 1718 	clr	a
      0002C6 F6               [12] 1719 	mov	@r0,a
      0002C7 08               [12] 1720 	inc	r0
      0002C8 F6               [12] 1721 	mov	@r0,a
      0002C9 02r03rB5         [24] 1722 	ljmp	00118$
      0002CC                       1723 00109$:
                                   1724 ;	../contiki-sensinode/core/dev/slip.c:221: memcpy(outbuf, &rxbuf[begin], len);
      0002CC EB               [12] 1725 	mov	a,r3
      0002CD 24r05            [12] 1726 	add	a,#_rxbuf
      0002CF FD               [12] 1727 	mov	r5,a
      0002D0 EC               [12] 1728 	mov	a,r4
      0002D1 34s00            [12] 1729 	addc	a,#(_rxbuf >> 8)
      0002D3 FC               [12] 1730 	mov	r4,a
      0002D4 7B 00            [12] 1731 	mov	r3,#0x00
      0002D6 E5 81            [12] 1732 	mov	a,sp
      0002D8 24 FC            [12] 1733 	add	a,#0xfc
      0002DA F8               [12] 1734 	mov	r0,a
      0002DB 86 02            [24] 1735 	mov	ar2,@r0
      0002DD 08               [12] 1736 	inc	r0
      0002DE 86 06            [24] 1737 	mov	ar6,@r0
      0002E0 08               [12] 1738 	inc	r0
      0002E1 86 07            [24] 1739 	mov	ar7,@r0
      0002E3 A8 81            [24] 1740 	mov	r0,sp
      0002E5 18               [12] 1741 	dec	r0
      0002E6 E6               [12] 1742 	mov	a,@r0
      0002E7 C0 E0            [24] 1743 	push	acc
      0002E9 08               [12] 1744 	inc	r0
      0002EA E6               [12] 1745 	mov	a,@r0
      0002EB C0 E0            [24] 1746 	push	acc
      0002ED C0 05            [24] 1747 	push	ar5
      0002EF C0 04            [24] 1748 	push	ar4
      0002F1 C0 03            [24] 1749 	push	ar3
      0002F3 8A 82            [24] 1750 	mov	dpl,r2
      0002F5 8E 83            [24] 1751 	mov	dph,r6
      0002F7 8F F0            [24] 1752 	mov	b,r7
      0002F9 12r00r00         [24] 1753 	lcall	_memcpy
      0002FC E5 81            [12] 1754 	mov	a,sp
      0002FE 24 FB            [12] 1755 	add	a,#0xfb
      000300 F5 81            [12] 1756 	mov	sp,a
      000302 02r03rB5         [24] 1757 	ljmp	00118$
      000305                       1758 00117$:
                                   1759 ;	../contiki-sensinode/core/dev/slip.c:224: len = (RX_BUFSIZE - begin) + (pkt_end - 0);
      000305 74 6E            [12] 1760 	mov	a,#0x6E
      000307 C3               [12] 1761 	clr	c
      000308 9B               [12] 1762 	subb	a,r3
      000309 FE               [12] 1763 	mov	r6,a
      00030A E4               [12] 1764 	clr	a
      00030B 9C               [12] 1765 	subb	a,r4
      00030C FF               [12] 1766 	mov	r7,a
      00030D ED               [12] 1767 	mov	a,r5
      00030E 2E               [12] 1768 	add	a,r6
      00030F FE               [12] 1769 	mov	r6,a
      000310 EA               [12] 1770 	mov	a,r2
      000311 3F               [12] 1771 	addc	a,r7
      000312 FF               [12] 1772 	mov	r7,a
      000313 A8 81            [24] 1773 	mov	r0,sp
      000315 18               [12] 1774 	dec	r0
      000316 A6 06            [24] 1775 	mov	@r0,ar6
      000318 08               [12] 1776 	inc	r0
      000319 A6 07            [24] 1777 	mov	@r0,ar7
                                   1778 ;	../contiki-sensinode/core/dev/slip.c:225: if(len > blen) {
      00031B A8 81            [24] 1779 	mov	r0,sp
      00031D 18               [12] 1780 	dec	r0
      00031E E5 81            [12] 1781 	mov	a,sp
      000320 24 F8            [12] 1782 	add	a,#0xf8
      000322 F9               [12] 1783 	mov	r1,a
      000323 C3               [12] 1784 	clr	c
      000324 E7               [12] 1785 	mov	a,@r1
      000325 96               [12] 1786 	subb	a,@r0
      000326 09               [12] 1787 	inc	r1
      000327 E7               [12] 1788 	mov	a,@r1
      000328 08               [12] 1789 	inc	r0
      000329 96               [12] 1790 	subb	a,@r0
      00032A 50 0A            [24] 1791 	jnc	00114$
                                   1792 ;	../contiki-sensinode/core/dev/slip.c:226: len = 0;
      00032C A8 81            [24] 1793 	mov	r0,sp
      00032E 18               [12] 1794 	dec	r0
      00032F E4               [12] 1795 	clr	a
      000330 F6               [12] 1796 	mov	@r0,a
      000331 08               [12] 1797 	inc	r0
      000332 F6               [12] 1798 	mov	@r0,a
      000333 02r03rB5         [24] 1799 	ljmp	00118$
      000336                       1800 00114$:
                                   1801 ;	../contiki-sensinode/core/dev/slip.c:229: for(i = begin; i < RX_BUFSIZE; i++) {
      000336 8B 06            [24] 1802 	mov	ar6,r3
      000338 8C 07            [24] 1803 	mov	ar7,r4
      00033A E5 81            [12] 1804 	mov	a,sp
      00033C 24 FC            [12] 1805 	add	a,#0xfc
      00033E F8               [12] 1806 	mov	r0,a
      00033F 86 03            [24] 1807 	mov	ar3,@r0
      000341 08               [12] 1808 	inc	r0
      000342 86 04            [24] 1809 	mov	ar4,@r0
      000344 08               [12] 1810 	inc	r0
      000345 86 05            [24] 1811 	mov	ar5,@r0
      000347                       1812 00126$:
      000347 C3               [12] 1813 	clr	c
      000348 EE               [12] 1814 	mov	a,r6
      000349 94 6E            [12] 1815 	subb	a,#0x6E
      00034B EF               [12] 1816 	mov	a,r7
      00034C 94 00            [12] 1817 	subb	a,#0x00
      00034E 50 21            [24] 1818 	jnc	00111$
                                   1819 ;	../contiki-sensinode/core/dev/slip.c:230: *outbuf++ = rxbuf[i];
      000350 EE               [12] 1820 	mov	a,r6
      000351 24r05            [12] 1821 	add	a,#_rxbuf
      000353 F5 82            [12] 1822 	mov	dpl,a
      000355 EF               [12] 1823 	mov	a,r7
      000356 34s00            [12] 1824 	addc	a,#(_rxbuf >> 8)
      000358 F5 83            [12] 1825 	mov	dph,a
      00035A E0               [24] 1826 	movx	a,@dptr
      00035B FA               [12] 1827 	mov	r2,a
      00035C 8B 82            [24] 1828 	mov	dpl,r3
      00035E 8C 83            [24] 1829 	mov	dph,r4
      000360 8D F0            [24] 1830 	mov	b,r5
      000362 12r00r00         [24] 1831 	lcall	__gptrput
      000365 A3               [24] 1832 	inc	dptr
      000366 AB 82            [24] 1833 	mov	r3,dpl
      000368 AC 83            [24] 1834 	mov	r4,dph
                                   1835 ;	../contiki-sensinode/core/dev/slip.c:229: for(i = begin; i < RX_BUFSIZE; i++) {
      00036A 0E               [12] 1836 	inc	r6
      00036B BE 00 D9         [24] 1837 	cjne	r6,#0x00,00126$
      00036E 0F               [12] 1838 	inc	r7
      00036F 80 D6            [24] 1839 	sjmp	00126$
      000371                       1840 00111$:
                                   1841 ;	../contiki-sensinode/core/dev/slip.c:232: for(i = 0; i < pkt_end; i++) {
      000371 8B 07            [24] 1842 	mov	ar7,r3
      000373 8C 06            [24] 1843 	mov	ar6,r4
      000375 7B 00            [12] 1844 	mov	r3,#0x00
      000377 7C 00            [12] 1845 	mov	r4,#0x00
      000379                       1846 00129$:
      000379 C0 07            [24] 1847 	push	ar7
      00037B C0 06            [24] 1848 	push	ar6
      00037D C0 05            [24] 1849 	push	ar5
      00037F 90r00r73         [24] 1850 	mov	dptr,#_pkt_end
      000382 E0               [24] 1851 	movx	a,@dptr
      000383 FA               [12] 1852 	mov	r2,a
      000384 A3               [24] 1853 	inc	dptr
      000385 E0               [24] 1854 	movx	a,@dptr
      000386 FF               [12] 1855 	mov	r7,a
      000387 C3               [12] 1856 	clr	c
      000388 EB               [12] 1857 	mov	a,r3
      000389 9A               [12] 1858 	subb	a,r2
      00038A EC               [12] 1859 	mov	a,r4
      00038B 9F               [12] 1860 	subb	a,r7
      00038C D0 05            [24] 1861 	pop	ar5
      00038E D0 06            [24] 1862 	pop	ar6
      000390 D0 07            [24] 1863 	pop	ar7
      000392 50 21            [24] 1864 	jnc	00118$
                                   1865 ;	../contiki-sensinode/core/dev/slip.c:233: *outbuf++ = rxbuf[i];
      000394 EB               [12] 1866 	mov	a,r3
      000395 24r05            [12] 1867 	add	a,#_rxbuf
      000397 F5 82            [12] 1868 	mov	dpl,a
      000399 EC               [12] 1869 	mov	a,r4
      00039A 34s00            [12] 1870 	addc	a,#(_rxbuf >> 8)
      00039C F5 83            [12] 1871 	mov	dph,a
      00039E E0               [24] 1872 	movx	a,@dptr
      00039F FA               [12] 1873 	mov	r2,a
      0003A0 8F 82            [24] 1874 	mov	dpl,r7
      0003A2 8E 83            [24] 1875 	mov	dph,r6
      0003A4 8D F0            [24] 1876 	mov	b,r5
      0003A6 12r00r00         [24] 1877 	lcall	__gptrput
      0003A9 A3               [24] 1878 	inc	dptr
      0003AA AF 82            [24] 1879 	mov	r7,dpl
      0003AC AE 83            [24] 1880 	mov	r6,dph
                                   1881 ;	../contiki-sensinode/core/dev/slip.c:232: for(i = 0; i < pkt_end; i++) {
      0003AE 0B               [12] 1882 	inc	r3
      0003AF BB 00 C7         [24] 1883 	cjne	r3,#0x00,00129$
      0003B2 0C               [12] 1884 	inc	r4
      0003B3 80 C4            [24] 1885 	sjmp	00129$
      0003B5                       1886 00118$:
                                   1887 ;	../contiki-sensinode/core/dev/slip.c:239: begin = pkt_end;
      0003B5 90r00r73         [24] 1888 	mov	dptr,#_pkt_end
      0003B8 E0               [24] 1889 	movx	a,@dptr
      0003B9 FE               [12] 1890 	mov	r6,a
      0003BA A3               [24] 1891 	inc	dptr
      0003BB E0               [24] 1892 	movx	a,@dptr
      0003BC FF               [12] 1893 	mov	r7,a
      0003BD 90r00r01         [24] 1894 	mov	dptr,#_begin
      0003C0 EE               [12] 1895 	mov	a,r6
      0003C1 F0               [24] 1896 	movx	@dptr,a
      0003C2 EF               [12] 1897 	mov	a,r7
      0003C3 A3               [24] 1898 	inc	dptr
      0003C4 F0               [24] 1899 	movx	@dptr,a
                                   1900 ;	../contiki-sensinode/core/dev/slip.c:240: if(state == STATE_TWOPACKETS) {
      0003C5 90r00r09         [24] 1901 	mov	dptr,#_state
      0003C8 E0               [24] 1902 	movx	a,@dptr
      0003C9 FF               [12] 1903 	mov	r7,a
      0003CA 70 1F            [24] 1904 	jnz	00120$
                                   1905 ;	../contiki-sensinode/core/dev/slip.c:241: pkt_end = end;
      0003CC 90r00r03         [24] 1906 	mov	dptr,#_end
      0003CF E0               [24] 1907 	movx	a,@dptr
      0003D0 FE               [12] 1908 	mov	r6,a
      0003D1 A3               [24] 1909 	inc	dptr
      0003D2 E0               [24] 1910 	movx	a,@dptr
      0003D3 FF               [12] 1911 	mov	r7,a
      0003D4 90r00r73         [24] 1912 	mov	dptr,#_pkt_end
      0003D7 EE               [12] 1913 	mov	a,r6
      0003D8 F0               [24] 1914 	movx	@dptr,a
      0003D9 EF               [12] 1915 	mov	a,r7
      0003DA A3               [24] 1916 	inc	dptr
      0003DB F0               [24] 1917 	movx	@dptr,a
                                   1918 ;	../contiki-sensinode/core/dev/slip.c:242: state = STATE_OK;		/* Assume no bytes where lost! */
      0003DC 90r00r09         [24] 1919 	mov	dptr,#_state
      0003DF 74 01            [12] 1920 	mov	a,#0x01
      0003E1 F0               [24] 1921 	movx	@dptr,a
                                   1922 ;	../contiki-sensinode/core/dev/slip.c:245: process_poll(&slip_process);
      0003E2 90r00r00         [24] 1923 	mov	dptr,#_slip_process
      0003E5 75 F0 00         [24] 1924 	mov	b,#0x00
      0003E8 12r00r00         [24] 1925 	lcall	_process_poll
      0003EB                       1926 00120$:
                                   1927 ;	../contiki-sensinode/core/dev/slip.c:247: return len;
      0003EB A8 81            [24] 1928 	mov	r0,sp
      0003ED 18               [12] 1929 	dec	r0
      0003EE 86 82            [24] 1930 	mov	dpl,@r0
      0003F0 08               [12] 1931 	inc	r0
      0003F1 86 83            [24] 1932 	mov	dph,@r0
      0003F3 80 03            [24] 1933 	sjmp	00131$
      0003F5                       1934 00122$:
                                   1935 ;	../contiki-sensinode/core/dev/slip.c:250: return 0;
      0003F5 90 00 00         [24] 1936 	mov	dptr,#0x0000
      0003F8                       1937 00131$:
      0003F8 E5 81            [12] 1938 	mov	a,sp
      0003FA 24 FB            [12] 1939 	add	a,#0xFB
      0003FC F5 81            [12] 1940 	mov	sp,a
      0003FE 22               [24] 1941 	ret
                                   1942 ;------------------------------------------------------------
                                   1943 ;Allocation info for local variables in function 'process_thread_slip_process'
                                   1944 ;------------------------------------------------------------
                                   1945 ;ev                        Allocated to stack - sp -10
                                   1946 ;data                      Allocated to stack - sp -13
                                   1947 ;process_pt                Allocated to registers r5 r6 r7 
                                   1948 ;PT_YIELD_FLAG             Allocated to registers r4 
                                   1949 ;buf                       Allocated to stack - sp -7
                                   1950 ;nid                       Allocated to registers r3 r4 
                                   1951 ;ip_id                     Allocated with name '_process_thread_slip_process_ip_id_6_186'
                                   1952 ;------------------------------------------------------------
                                   1953 ;	../contiki-sensinode/core/dev/slip.c:253: PROCESS_THREAD(slip_process, ev, data)
                                   1954 ;	-----------------------------------------
                                   1955 ;	 function process_thread_slip_process
                                   1956 ;	-----------------------------------------
      0003FF                       1957 _process_thread_slip_process:
      0003FF E5 81            [12] 1958 	mov	a,sp
      000401 24 08            [12] 1959 	add	a,#0x08
      000403 F5 81            [12] 1960 	mov	sp,a
                                   1961 ;	../contiki-sensinode/core/dev/slip.c:255: PROCESS_BEGIN();
      000405 AD 82            [24] 1962 	mov	r5,dpl
      000407 AE 83            [24] 1963 	mov	r6,dph
      000409 AF F0            [24] 1964 	mov	r7,b
      00040B 7C 01            [12] 1965 	mov	r4,#0x01
      00040D 12r00r00         [24] 1966 	lcall	__gptrget
      000410 FA               [12] 1967 	mov	r2,a
      000411 A3               [24] 1968 	inc	dptr
      000412 12r00r00         [24] 1969 	lcall	__gptrget
      000415 FB               [12] 1970 	mov	r3,a
      000416 BA 00 05         [24] 1971 	cjne	r2,#0x00,00174$
      000419 BB 00 02         [24] 1972 	cjne	r3,#0x00,00174$
      00041C 80 0B            [24] 1973 	sjmp	00101$
      00041E                       1974 00174$:
      00041E BA 04 05         [24] 1975 	cjne	r2,#0x04,00175$
      000421 BB 01 02         [24] 1976 	cjne	r3,#0x01,00175$
      000424 80 25            [24] 1977 	sjmp	00102$
      000426                       1978 00175$:
      000426 02r06rBF         [24] 1979 	ljmp	00129$
      000429                       1980 00101$:
                                   1981 ;	../contiki-sensinode/core/dev/slip.c:257: rxbuf_init();
      000429 C0 07            [24] 1982 	push	ar7
      00042B C0 06            [24] 1983 	push	ar6
      00042D C0 05            [24] 1984 	push	ar5
      00042F 12r01r85         [24] 1985 	lcall	_rxbuf_init
      000432 D0 05            [24] 1986 	pop	ar5
      000434 D0 06            [24] 1987 	pop	ar6
      000436 D0 07            [24] 1988 	pop	ar7
                                   1989 ;	../contiki-sensinode/core/dev/slip.c:259: while(1) {
      000438                       1990 00127$:
                                   1991 ;	../contiki-sensinode/core/dev/slip.c:260: PROCESS_YIELD_UNTIL(ev == PROCESS_EVENT_POLL);
      000438 7C 00            [12] 1992 	mov	r4,#0x00
      00043A 8D 82            [24] 1993 	mov	dpl,r5
      00043C 8E 83            [24] 1994 	mov	dph,r6
      00043E 8F F0            [24] 1995 	mov	b,r7
      000440 74 04            [12] 1996 	mov	a,#0x04
      000442 12r00r00         [24] 1997 	lcall	__gptrput
      000445 A3               [24] 1998 	inc	dptr
      000446 74 01            [12] 1999 	mov	a,#0x01
      000448 12r00r00         [24] 2000 	lcall	__gptrput
      00044B                       2001 00102$:
      00044B EC               [12] 2002 	mov	a,r4
      00044C 60 0A            [24] 2003 	jz	00103$
      00044E E5 81            [12] 2004 	mov	a,sp
      000450 24 F6            [12] 2005 	add	a,#0xf6
      000452 F8               [12] 2006 	mov	r0,a
      000453 B6 82 02         [24] 2007 	cjne	@r0,#0x82,00177$
      000456 80 06            [24] 2008 	sjmp	00107$
      000458                       2009 00177$:
      000458                       2010 00103$:
      000458 75 82 01         [24] 2011 	mov	dpl,#0x01
      00045B 02r06rD0         [24] 2012 	ljmp	00130$
      00045E                       2013 00107$:
                                   2014 ;	../contiki-sensinode/core/dev/slip.c:262: slip_active = 1;
      00045E 90r00r00         [24] 2015 	mov	dptr,#_slip_active
      000461 74 01            [12] 2016 	mov	a,#0x01
      000463 F0               [24] 2017 	movx	@dptr,a
                                   2018 ;	../contiki-sensinode/core/dev/slip.c:265: uip_len = slip_poll_handler(&uip_buf[UIP_LLH_LEN],
      000464 C0 07            [24] 2019 	push	ar7
      000466 C0 06            [24] 2020 	push	ar6
      000468 C0 05            [24] 2021 	push	ar5
      00046A 74 5E            [12] 2022 	mov	a,#0x5E
      00046C C0 E0            [24] 2023 	push	acc
      00046E E4               [12] 2024 	clr	a
      00046F C0 E0            [24] 2025 	push	acc
      000471 90r00r0E         [24] 2026 	mov	dptr,#(_uip_aligned_buf + 0x000e)
      000474 75 F0 00         [24] 2027 	mov	b,#0x00
      000477 12r01r9E         [24] 2028 	lcall	_slip_poll_handler
      00047A AB 82            [24] 2029 	mov	r3,dpl
      00047C AC 83            [24] 2030 	mov	r4,dph
      00047E 15 81            [12] 2031 	dec	sp
      000480 15 81            [12] 2032 	dec	sp
      000482 D0 05            [24] 2033 	pop	ar5
      000484 D0 06            [24] 2034 	pop	ar6
      000486 D0 07            [24] 2035 	pop	ar7
      000488 90r00r00         [24] 2036 	mov	dptr,#_uip_len
      00048B EB               [12] 2037 	mov	a,r3
      00048C F0               [24] 2038 	movx	@dptr,a
      00048D EC               [12] 2039 	mov	a,r4
      00048E A3               [24] 2040 	inc	dptr
      00048F F0               [24] 2041 	movx	@dptr,a
                                   2042 ;	../contiki-sensinode/core/dev/slip.c:268: if(uip_len == 4 && strncmp((char*)&uip_buf[UIP_LLH_LEN], "?IPA", 4) == 0) {
      000490 BB 04 05         [24] 2043 	cjne	r3,#0x04,00178$
      000493 BC 00 02         [24] 2044 	cjne	r4,#0x00,00178$
      000496 80 03            [24] 2045 	sjmp	00179$
      000498                       2046 00178$:
      000498 02r05rA4         [24] 2047 	ljmp	00123$
      00049B                       2048 00179$:
      00049B C0 07            [24] 2049 	push	ar7
      00049D C0 06            [24] 2050 	push	ar6
      00049F C0 05            [24] 2051 	push	ar5
      0004A1 74 04            [12] 2052 	mov	a,#0x04
      0004A3 C0 E0            [24] 2053 	push	acc
      0004A5 E4               [12] 2054 	clr	a
      0004A6 C0 E0            [24] 2055 	push	acc
      0004A8 74r15            [12] 2056 	mov	a,#___str_2
      0004AA C0 E0            [24] 2057 	push	acc
      0004AC 74s00            [12] 2058 	mov	a,#(___str_2 >> 8)
      0004AE C0 E0            [24] 2059 	push	acc
      0004B0 74 80            [12] 2060 	mov	a,#0x80
      0004B2 C0 E0            [24] 2061 	push	acc
      0004B4 90r00r0E         [24] 2062 	mov	dptr,#(_uip_aligned_buf + 0x000e)
      0004B7 75 F0 00         [24] 2063 	mov	b,#0x00
      0004BA 12r00r00         [24] 2064 	lcall	_strncmp
      0004BD AB 82            [24] 2065 	mov	r3,dpl
      0004BF AC 83            [24] 2066 	mov	r4,dph
      0004C1 E5 81            [12] 2067 	mov	a,sp
      0004C3 24 FB            [12] 2068 	add	a,#0xfb
      0004C5 F5 81            [12] 2069 	mov	sp,a
      0004C7 D0 05            [24] 2070 	pop	ar5
      0004C9 D0 06            [24] 2071 	pop	ar6
      0004CB D0 07            [24] 2072 	pop	ar7
      0004CD EB               [12] 2073 	mov	a,r3
      0004CE 4C               [12] 2074 	orl	a,r4
      0004CF 60 03            [24] 2075 	jz	00180$
      0004D1 02r05rA4         [24] 2076 	ljmp	00123$
      0004D4                       2077 00180$:
                                   2078 ;	../contiki-sensinode/core/dev/slip.c:270: memcpy(&buf[0], "=IPA", 4);
      0004D4 C0 05            [24] 2079 	push	ar5
      0004D6 C0 06            [24] 2080 	push	ar6
      0004D8 C0 07            [24] 2081 	push	ar7
      0004DA E5 81            [12] 2082 	mov	a,sp
      0004DC 24 F6            [12] 2083 	add	a,#0xF6
      0004DE FC               [12] 2084 	mov	r4,a
      0004DF FA               [12] 2085 	mov	r2,a
      0004E0 7B 00            [12] 2086 	mov	r3,#0x00
      0004E2 7F 40            [12] 2087 	mov	r7,#0x40
      0004E4 C0 07            [24] 2088 	push	ar7
      0004E6 C0 06            [24] 2089 	push	ar6
      0004E8 C0 05            [24] 2090 	push	ar5
      0004EA C0 04            [24] 2091 	push	ar4
      0004EC 74 04            [12] 2092 	mov	a,#0x04
      0004EE C0 E0            [24] 2093 	push	acc
      0004F0 E4               [12] 2094 	clr	a
      0004F1 C0 E0            [24] 2095 	push	acc
      0004F3 74r1A            [12] 2096 	mov	a,#___str_3
      0004F5 C0 E0            [24] 2097 	push	acc
      0004F7 74s00            [12] 2098 	mov	a,#(___str_3 >> 8)
      0004F9 C0 E0            [24] 2099 	push	acc
      0004FB 74 80            [12] 2100 	mov	a,#0x80
      0004FD C0 E0            [24] 2101 	push	acc
      0004FF 8A 82            [24] 2102 	mov	dpl,r2
      000501 8B 83            [24] 2103 	mov	dph,r3
      000503 8F F0            [24] 2104 	mov	b,r7
      000505 12r00r00         [24] 2105 	lcall	_memcpy
      000508 E5 81            [12] 2106 	mov	a,sp
      00050A 24 FB            [12] 2107 	add	a,#0xfb
      00050C F5 81            [12] 2108 	mov	sp,a
      00050E D0 04            [24] 2109 	pop	ar4
      000510 D0 05            [24] 2110 	pop	ar5
      000512 D0 06            [24] 2111 	pop	ar6
      000514 D0 07            [24] 2112 	pop	ar7
                                   2113 ;	../contiki-sensinode/core/dev/slip.c:271: memcpy(&buf[4], &uip_hostaddr, 4);
      000516 74 04            [12] 2114 	mov	a,#0x04
      000518 2C               [12] 2115 	add	a,r4
      000519 FF               [12] 2116 	mov	r7,a
      00051A 7E 00            [12] 2117 	mov	r6,#0x00
      00051C 7D 40            [12] 2118 	mov	r5,#0x40
      00051E C0 07            [24] 2119 	push	ar7
      000520 C0 06            [24] 2120 	push	ar6
      000522 C0 05            [24] 2121 	push	ar5
      000524 C0 04            [24] 2122 	push	ar4
      000526 74 04            [12] 2123 	mov	a,#0x04
      000528 C0 E0            [24] 2124 	push	acc
      00052A E4               [12] 2125 	clr	a
      00052B C0 E0            [24] 2126 	push	acc
      00052D 74r00            [12] 2127 	mov	a,#_uip_hostaddr
      00052F C0 E0            [24] 2128 	push	acc
      000531 74s00            [12] 2129 	mov	a,#(_uip_hostaddr >> 8)
      000533 C0 E0            [24] 2130 	push	acc
      000535 E4               [12] 2131 	clr	a
      000536 C0 E0            [24] 2132 	push	acc
      000538 8F 82            [24] 2133 	mov	dpl,r7
      00053A 8E 83            [24] 2134 	mov	dph,r6
      00053C 8D F0            [24] 2135 	mov	b,r5
      00053E 12r00r00         [24] 2136 	lcall	_memcpy
      000541 E5 81            [12] 2137 	mov	a,sp
      000543 24 FB            [12] 2138 	add	a,#0xfb
      000545 F5 81            [12] 2139 	mov	sp,a
      000547 D0 04            [24] 2140 	pop	ar4
      000549 D0 05            [24] 2141 	pop	ar5
      00054B D0 06            [24] 2142 	pop	ar6
      00054D D0 07            [24] 2143 	pop	ar7
                                   2144 ;	../contiki-sensinode/core/dev/slip.c:272: if(input_callback) {
      00054F 90r00r0A         [24] 2145 	mov	dptr,#_input_callback
      000552 E0               [24] 2146 	movx	a,@dptr
      000553 FE               [12] 2147 	mov	r6,a
      000554 A3               [24] 2148 	inc	dptr
      000555 E0               [24] 2149 	movx	a,@dptr
      000556 4E               [12] 2150 	orl	a,r6
      000557 D0 07            [24] 2151 	pop	ar7
      000559 D0 06            [24] 2152 	pop	ar6
      00055B D0 05            [24] 2153 	pop	ar5
      00055D 60 1E            [24] 2154 	jz	00110$
                                   2155 ;	../contiki-sensinode/core/dev/slip.c:273: input_callback();
      00055F C0 07            [24] 2156 	push	ar7
      000561 C0 06            [24] 2157 	push	ar6
      000563 C0 05            [24] 2158 	push	ar5
      000565 C0 04            [24] 2159 	push	ar4
      000567 90r00r0A         [24] 2160 	mov	dptr,#_input_callback
      00056A E0               [24] 2161 	movx	a,@dptr
      00056B F8               [12] 2162 	mov	r0,a
      00056C A3               [24] 2163 	inc	dptr
      00056D E0               [24] 2164 	movx	a,@dptr
      00056E F5 83            [12] 2165 	mov	dph,a
      000570 88 82            [24] 2166 	mov	dpl,r0
      000572 12r00r00         [24] 2167 	lcall	__sdcc_call_dptr
      000575 D0 04            [24] 2168 	pop	ar4
      000577 D0 05            [24] 2169 	pop	ar5
      000579 D0 06            [24] 2170 	pop	ar6
      00057B D0 07            [24] 2171 	pop	ar7
      00057D                       2172 00110$:
                                   2173 ;	../contiki-sensinode/core/dev/slip.c:275: slip_write(buf, 8);
      00057D 7B 00            [12] 2174 	mov	r3,#0x00
      00057F 7A 40            [12] 2175 	mov	r2,#0x40
      000581 C0 07            [24] 2176 	push	ar7
      000583 C0 06            [24] 2177 	push	ar6
      000585 C0 05            [24] 2178 	push	ar5
      000587 74 08            [12] 2179 	mov	a,#0x08
      000589 C0 E0            [24] 2180 	push	acc
      00058B E4               [12] 2181 	clr	a
      00058C C0 E0            [24] 2182 	push	acc
      00058E 8C 82            [24] 2183 	mov	dpl,r4
      000590 8B 83            [24] 2184 	mov	dph,r3
      000592 8A F0            [24] 2185 	mov	b,r2
      000594 12r00rCC         [24] 2186 	lcall	_slip_write
      000597 15 81            [12] 2187 	dec	sp
      000599 15 81            [12] 2188 	dec	sp
      00059B D0 05            [24] 2189 	pop	ar5
      00059D D0 06            [24] 2190 	pop	ar6
      00059F D0 07            [24] 2191 	pop	ar7
      0005A1 02r04r38         [24] 2192 	ljmp	00127$
      0005A4                       2193 00123$:
                                   2194 ;	../contiki-sensinode/core/dev/slip.c:276: } else if(uip_len > 0
      0005A4 90r00r00         [24] 2195 	mov	dptr,#_uip_len
      0005A7 E0               [24] 2196 	movx	a,@dptr
      0005A8 FB               [12] 2197 	mov	r3,a
      0005A9 A3               [24] 2198 	inc	dptr
      0005AA E0               [24] 2199 	movx	a,@dptr
      0005AB FC               [12] 2200 	mov	r4,a
      0005AC 4B               [12] 2201 	orl	a,r3
      0005AD 70 03            [24] 2202 	jnz	00182$
      0005AF 02r06rB5         [24] 2203 	ljmp	00118$
      0005B2                       2204 00182$:
                                   2205 ;	../contiki-sensinode/core/dev/slip.c:277: && uip_len == (((uint16_t)(BUF->len[0]) << 8) + BUF->len[1])
      0005B2 C0 05            [24] 2206 	push	ar5
      0005B4 C0 06            [24] 2207 	push	ar6
      0005B6 C0 07            [24] 2208 	push	ar7
      0005B8 90r00r10         [24] 2209 	mov	dptr,#(_uip_aligned_buf + 0x0010)
      0005BB E0               [24] 2210 	movx	a,@dptr
      0005BC FF               [12] 2211 	mov	r7,a
      0005BD 7A 00            [12] 2212 	mov	r2,#0x00
      0005BF 90r00r11         [24] 2213 	mov	dptr,#(_uip_aligned_buf + 0x0011)
      0005C2 E0               [24] 2214 	movx	a,@dptr
      0005C3 FE               [12] 2215 	mov	r6,a
      0005C4 7D 00            [12] 2216 	mov	r5,#0x00
      0005C6 2A               [12] 2217 	add	a,r2
      0005C7 FA               [12] 2218 	mov	r2,a
      0005C8 ED               [12] 2219 	mov	a,r5
      0005C9 3F               [12] 2220 	addc	a,r7
      0005CA FF               [12] 2221 	mov	r7,a
      0005CB EB               [12] 2222 	mov	a,r3
      0005CC B5 02 06         [24] 2223 	cjne	a,ar2,00183$
      0005CF EC               [12] 2224 	mov	a,r4
      0005D0 B5 07 02         [24] 2225 	cjne	a,ar7,00183$
      0005D3 80 09            [24] 2226 	sjmp	00184$
      0005D5                       2227 00183$:
      0005D5 D0 07            [24] 2228 	pop	ar7
      0005D7 D0 06            [24] 2229 	pop	ar6
      0005D9 D0 05            [24] 2230 	pop	ar5
      0005DB 02r06rB5         [24] 2231 	ljmp	00118$
      0005DE                       2232 00184$:
      0005DE D0 07            [24] 2233 	pop	ar7
      0005E0 D0 06            [24] 2234 	pop	ar6
      0005E2 D0 05            [24] 2235 	pop	ar5
                                   2236 ;	../contiki-sensinode/core/dev/slip.c:278: && uip_ipchksum() == 0xffff) {
      0005E4 C0 07            [24] 2237 	push	ar7
      0005E6 C0 06            [24] 2238 	push	ar6
      0005E8 C0 05            [24] 2239 	push	ar5
      0005EA 12r00r00         [24] 2240 	lcall	_uip_ipchksum
      0005ED AB 82            [24] 2241 	mov	r3,dpl
      0005EF AC 83            [24] 2242 	mov	r4,dph
      0005F1 D0 05            [24] 2243 	pop	ar5
      0005F3 D0 06            [24] 2244 	pop	ar6
      0005F5 D0 07            [24] 2245 	pop	ar7
      0005F7 BB FF 05         [24] 2246 	cjne	r3,#0xFF,00185$
      0005FA BC FF 02         [24] 2247 	cjne	r4,#0xFF,00185$
      0005FD 80 03            [24] 2248 	sjmp	00186$
      0005FF                       2249 00185$:
      0005FF 02r06rB5         [24] 2250 	ljmp	00118$
      000602                       2251 00186$:
                                   2252 ;	../contiki-sensinode/core/dev/slip.c:280: if(BUF->ipid[0] == 0 && BUF->ipid[1] == 0 && BUF->ipoffset[0] & IP_DF) {
      000602 90r00r12         [24] 2253 	mov	dptr,#(_uip_aligned_buf + 0x0012)
      000605 E0               [24] 2254 	movx	a,@dptr
      000606 60 03            [24] 2255 	jz	00187$
      000608 02r06rA3         [24] 2256 	ljmp	00114$
      00060B                       2257 00187$:
      00060B 90r00r13         [24] 2258 	mov	dptr,#(_uip_aligned_buf + 0x0013)
      00060E E0               [24] 2259 	movx	a,@dptr
      00060F 60 03            [24] 2260 	jz	00188$
      000611 02r06rA3         [24] 2261 	ljmp	00114$
      000614                       2262 00188$:
      000614 90r00r14         [24] 2263 	mov	dptr,#(_uip_aligned_buf + 0x0014)
      000617 E0               [24] 2264 	movx	a,@dptr
      000618 FC               [12] 2265 	mov	r4,a
      000619 20 E6 03         [24] 2266 	jb	acc.6,00189$
      00061C 02r06rA3         [24] 2267 	ljmp	00114$
      00061F                       2268 00189$:
                                   2269 ;	../contiki-sensinode/core/dev/slip.c:282: uint16_t nid = ip_id++;
      00061F C0 05            [24] 2270 	push	ar5
      000621 C0 06            [24] 2271 	push	ar6
      000623 C0 07            [24] 2272 	push	ar7
      000625 90r00r75         [24] 2273 	mov	dptr,#_process_thread_slip_process_ip_id_6_186
      000628 E0               [24] 2274 	movx	a,@dptr
      000629 FB               [12] 2275 	mov	r3,a
      00062A A3               [24] 2276 	inc	dptr
      00062B E0               [24] 2277 	movx	a,@dptr
      00062C FC               [12] 2278 	mov	r4,a
      00062D 90r00r75         [24] 2279 	mov	dptr,#_process_thread_slip_process_ip_id_6_186
      000630 74 01            [12] 2280 	mov	a,#0x01
      000632 2B               [12] 2281 	add	a,r3
      000633 F0               [24] 2282 	movx	@dptr,a
      000634 E4               [12] 2283 	clr	a
      000635 3C               [12] 2284 	addc	a,r4
      000636 A3               [24] 2285 	inc	dptr
      000637 F0               [24] 2286 	movx	@dptr,a
                                   2287 ;	../contiki-sensinode/core/dev/slip.c:283: BUF->ipid[0] = nid >> 8;
      000638 8C 02            [24] 2288 	mov	ar2,r4
      00063A 90r00r12         [24] 2289 	mov	dptr,#(_uip_aligned_buf + 0x0012)
      00063D EA               [12] 2290 	mov	a,r2
      00063E F0               [24] 2291 	movx	@dptr,a
                                   2292 ;	../contiki-sensinode/core/dev/slip.c:284: BUF->ipid[1] = nid;
      00063F 8B 02            [24] 2293 	mov	ar2,r3
      000641 90r00r13         [24] 2294 	mov	dptr,#(_uip_aligned_buf + 0x0013)
      000644 EA               [12] 2295 	mov	a,r2
      000645 F0               [24] 2296 	movx	@dptr,a
                                   2297 ;	../contiki-sensinode/core/dev/slip.c:285: nid = uip_htons(nid);
      000646 8B 82            [24] 2298 	mov	dpl,r3
      000648 8C 83            [24] 2299 	mov	dph,r4
      00064A C0 06            [24] 2300 	push	ar6
      00064C C0 05            [24] 2301 	push	ar5
      00064E 12r00r00         [24] 2302 	lcall	_uip_htons
      000651 AA 82            [24] 2303 	mov	r2,dpl
      000653 AF 83            [24] 2304 	mov	r7,dph
      000655 D0 05            [24] 2305 	pop	ar5
      000657 D0 06            [24] 2306 	pop	ar6
      000659 8A 03            [24] 2307 	mov	ar3,r2
      00065B 8F 04            [24] 2308 	mov	ar4,r7
                                   2309 ;	../contiki-sensinode/core/dev/slip.c:286: nid = ~nid;		/* negate */
      00065D EB               [12] 2310 	mov	a,r3
      00065E F4               [12] 2311 	cpl	a
      00065F FB               [12] 2312 	mov	r3,a
      000660 EC               [12] 2313 	mov	a,r4
      000661 F4               [12] 2314 	cpl	a
      000662 FC               [12] 2315 	mov	r4,a
                                   2316 ;	../contiki-sensinode/core/dev/slip.c:287: BUF->ipchksum += nid;	/* add */
      000663 90r00r18         [24] 2317 	mov	dptr,#(_uip_aligned_buf + 0x0018)
      000666 E0               [24] 2318 	movx	a,@dptr
      000667 FE               [12] 2319 	mov	r6,a
      000668 A3               [24] 2320 	inc	dptr
      000669 E0               [24] 2321 	movx	a,@dptr
      00066A FF               [12] 2322 	mov	r7,a
      00066B EB               [12] 2323 	mov	a,r3
      00066C 2E               [12] 2324 	add	a,r6
      00066D FE               [12] 2325 	mov	r6,a
      00066E EC               [12] 2326 	mov	a,r4
      00066F 3F               [12] 2327 	addc	a,r7
      000670 FF               [12] 2328 	mov	r7,a
      000671 90r00r18         [24] 2329 	mov	dptr,#(_uip_aligned_buf + 0x0018)
      000674 EE               [12] 2330 	mov	a,r6
      000675 F0               [24] 2331 	movx	@dptr,a
      000676 EF               [12] 2332 	mov	a,r7
      000677 A3               [24] 2333 	inc	dptr
      000678 F0               [24] 2334 	movx	@dptr,a
                                   2335 ;	../contiki-sensinode/core/dev/slip.c:288: if(BUF->ipchksum < nid) { /* 1-complement overflow? */
      000679 90r00r18         [24] 2336 	mov	dptr,#(_uip_aligned_buf + 0x0018)
      00067C E0               [24] 2337 	movx	a,@dptr
      00067D FE               [12] 2338 	mov	r6,a
      00067E A3               [24] 2339 	inc	dptr
      00067F E0               [24] 2340 	movx	a,@dptr
      000680 FF               [12] 2341 	mov	r7,a
      000681 C3               [12] 2342 	clr	c
      000682 EE               [12] 2343 	mov	a,r6
      000683 9B               [12] 2344 	subb	a,r3
      000684 EF               [12] 2345 	mov	a,r7
      000685 9C               [12] 2346 	subb	a,r4
      000686 D0 07            [24] 2347 	pop	ar7
      000688 D0 06            [24] 2348 	pop	ar6
      00068A D0 05            [24] 2349 	pop	ar5
      00068C 50 15            [24] 2350 	jnc	00114$
                                   2351 ;	../contiki-sensinode/core/dev/slip.c:289: BUF->ipchksum++;
      00068E 90r00r18         [24] 2352 	mov	dptr,#(_uip_aligned_buf + 0x0018)
      000691 E0               [24] 2353 	movx	a,@dptr
      000692 FB               [12] 2354 	mov	r3,a
      000693 A3               [24] 2355 	inc	dptr
      000694 E0               [24] 2356 	movx	a,@dptr
      000695 FC               [12] 2357 	mov	r4,a
      000696 0B               [12] 2358 	inc	r3
      000697 BB 00 01         [24] 2359 	cjne	r3,#0x00,00191$
      00069A 0C               [12] 2360 	inc	r4
      00069B                       2361 00191$:
      00069B 90r00r18         [24] 2362 	mov	dptr,#(_uip_aligned_buf + 0x0018)
      00069E EB               [12] 2363 	mov	a,r3
      00069F F0               [24] 2364 	movx	@dptr,a
      0006A0 EC               [12] 2365 	mov	a,r4
      0006A1 A3               [24] 2366 	inc	dptr
      0006A2 F0               [24] 2367 	movx	@dptr,a
      0006A3                       2368 00114$:
                                   2369 ;	../contiki-sensinode/core/dev/slip.c:295: tcpip_input();
      0006A3 C0 07            [24] 2370 	push	ar7
      0006A5 C0 06            [24] 2371 	push	ar6
      0006A7 C0 05            [24] 2372 	push	ar5
      0006A9 12r00r00         [24] 2373 	lcall	_tcpip_input
      0006AC D0 05            [24] 2374 	pop	ar5
      0006AE D0 06            [24] 2375 	pop	ar6
      0006B0 D0 07            [24] 2376 	pop	ar7
      0006B2 02r04r38         [24] 2377 	ljmp	00127$
      0006B5                       2378 00118$:
                                   2379 ;	../contiki-sensinode/core/dev/slip.c:298: uip_len = 0;
      0006B5 90r00r00         [24] 2380 	mov	dptr,#_uip_len
      0006B8 E4               [12] 2381 	clr	a
      0006B9 F0               [24] 2382 	movx	@dptr,a
      0006BA A3               [24] 2383 	inc	dptr
      0006BB F0               [24] 2384 	movx	@dptr,a
      0006BC 02r04r38         [24] 2385 	ljmp	00127$
                                   2386 ;	../contiki-sensinode/core/dev/slip.c:315: PROCESS_END();
      0006BF                       2387 00129$:
      0006BF 8D 82            [24] 2388 	mov	dpl,r5
      0006C1 8E 83            [24] 2389 	mov	dph,r6
      0006C3 8F F0            [24] 2390 	mov	b,r7
      0006C5 E4               [12] 2391 	clr	a
      0006C6 12r00r00         [24] 2392 	lcall	__gptrput
      0006C9 A3               [24] 2393 	inc	dptr
      0006CA 12r00r00         [24] 2394 	lcall	__gptrput
      0006CD 75 82 03         [24] 2395 	mov	dpl,#0x03
      0006D0                       2396 00130$:
      0006D0 E5 81            [12] 2397 	mov	a,sp
      0006D2 24 F8            [12] 2398 	add	a,#0xF8
      0006D4 F5 81            [12] 2399 	mov	sp,a
      0006D6 22               [24] 2400 	ret
                                   2401 ;------------------------------------------------------------
                                   2402 ;Allocation info for local variables in function 'slip_input_byte'
                                   2403 ;------------------------------------------------------------
                                   2404 ;c                         Allocated to registers r7 
                                   2405 ;next                      Allocated to registers r3 r4 
                                   2406 ;sloc0                     Allocated to stack - sp -1
                                   2407 ;------------------------------------------------------------
                                   2408 ;	../contiki-sensinode/core/dev/slip.c:319: slip_input_byte(unsigned char c)
                                   2409 ;	-----------------------------------------
                                   2410 ;	 function slip_input_byte
                                   2411 ;	-----------------------------------------
      0006D7                       2412 _slip_input_byte:
      0006D7 05 81            [12] 2413 	inc	sp
      0006D9 05 81            [12] 2414 	inc	sp
      0006DB AF 82            [24] 2415 	mov	r7,dpl
                                   2416 ;	../contiki-sensinode/core/dev/slip.c:321: switch(state) {
      0006DD 90r00r09         [24] 2417 	mov	dptr,#_state
      0006E0 E0               [24] 2418 	movx	a,@dptr
      0006E1 FE               [12] 2419 	mov  r6,a
      0006E2 24 FC            [12] 2420 	add	a,#0xff - 0x03
      0006E4 50 03            [24] 2421 	jnc	00169$
      0006E6 02r07rB1         [24] 2422 	ljmp	00123$
      0006E9                       2423 00169$:
      0006E9 EE               [12] 2424 	mov	a,r6
      0006EA 2E               [12] 2425 	add	a,r6
      0006EB 2E               [12] 2426 	add	a,r6
      0006EC 90r06rF0         [24] 2427 	mov	dptr,#00170$
      0006EF 73               [24] 2428 	jmp	@a+dptr
      0006F0                       2429 00170$:
      0006F0 02r07r08         [24] 2430 	ljmp	00104$
      0006F3 02r07r41         [24] 2431 	ljmp	00112$
      0006F6 02r07r0E         [24] 2432 	ljmp	00105$
                                   2433 ;	../contiki-sensinode/core/dev/slip.c:322: case STATE_RUBBISH:
                                   2434 ;	../contiki-sensinode/core/dev/slip.c:323: if(c == SLIP_END) {
      0006F9 BF C0 06         [24] 2435 	cjne	r7,#0xC0,00103$
                                   2436 ;	../contiki-sensinode/core/dev/slip.c:324: state = STATE_OK;
      0006FC 90r00r09         [24] 2437 	mov	dptr,#_state
      0006FF 74 01            [12] 2438 	mov	a,#0x01
      000701 F0               [24] 2439 	movx	@dptr,a
      000702                       2440 00103$:
                                   2441 ;	../contiki-sensinode/core/dev/slip.c:326: return 0;
      000702 90 00 00         [24] 2442 	mov	dptr,#0x0000
      000705 02r08r4C         [24] 2443 	ljmp	00131$
                                   2444 ;	../contiki-sensinode/core/dev/slip.c:328: case STATE_TWOPACKETS:       /* Two packets are already buffered! */
      000708                       2445 00104$:
                                   2446 ;	../contiki-sensinode/core/dev/slip.c:329: return 0;
      000708 90 00 00         [24] 2447 	mov	dptr,#0x0000
      00070B 02r08r4C         [24] 2448 	ljmp	00131$
                                   2449 ;	../contiki-sensinode/core/dev/slip.c:331: case STATE_ESC:
      00070E                       2450 00105$:
                                   2451 ;	../contiki-sensinode/core/dev/slip.c:332: if(c == SLIP_ESC_END) {
      00070E BF DC 04         [24] 2452 	cjne	r7,#0xDC,00110$
                                   2453 ;	../contiki-sensinode/core/dev/slip.c:333: c = SLIP_END;
      000711 7F C0            [12] 2454 	mov	r7,#0xC0
      000713 80 23            [24] 2455 	sjmp	00111$
      000715                       2456 00110$:
                                   2457 ;	../contiki-sensinode/core/dev/slip.c:334: } else if(c == SLIP_ESC_ESC) {
      000715 BF DD 04         [24] 2458 	cjne	r7,#0xDD,00107$
                                   2459 ;	../contiki-sensinode/core/dev/slip.c:335: c = SLIP_ESC;
      000718 7F DB            [12] 2460 	mov	r7,#0xDB
      00071A 80 1C            [24] 2461 	sjmp	00111$
      00071C                       2462 00107$:
                                   2463 ;	../contiki-sensinode/core/dev/slip.c:337: state = STATE_RUBBISH;
      00071C 90r00r09         [24] 2464 	mov	dptr,#_state
      00071F 74 03            [12] 2465 	mov	a,#0x03
      000721 F0               [24] 2466 	movx	@dptr,a
                                   2467 ;	../contiki-sensinode/core/dev/slip.c:339: end = pkt_end;		/* remove rubbish */
      000722 90r00r73         [24] 2468 	mov	dptr,#_pkt_end
      000725 E0               [24] 2469 	movx	a,@dptr
      000726 FD               [12] 2470 	mov	r5,a
      000727 A3               [24] 2471 	inc	dptr
      000728 E0               [24] 2472 	movx	a,@dptr
      000729 FE               [12] 2473 	mov	r6,a
      00072A 90r00r03         [24] 2474 	mov	dptr,#_end
      00072D ED               [12] 2475 	mov	a,r5
      00072E F0               [24] 2476 	movx	@dptr,a
      00072F EE               [12] 2477 	mov	a,r6
      000730 A3               [24] 2478 	inc	dptr
      000731 F0               [24] 2479 	movx	@dptr,a
                                   2480 ;	../contiki-sensinode/core/dev/slip.c:340: return 0;
      000732 90 00 00         [24] 2481 	mov	dptr,#0x0000
      000735 02r08r4C         [24] 2482 	ljmp	00131$
      000738                       2483 00111$:
                                   2484 ;	../contiki-sensinode/core/dev/slip.c:342: state = STATE_OK;
      000738 90r00r09         [24] 2485 	mov	dptr,#_state
      00073B 74 01            [12] 2486 	mov	a,#0x01
      00073D F0               [24] 2487 	movx	@dptr,a
                                   2488 ;	../contiki-sensinode/core/dev/slip.c:343: break;
      00073E 02r07rB1         [24] 2489 	ljmp	00123$
                                   2490 ;	../contiki-sensinode/core/dev/slip.c:345: case STATE_OK:
      000741                       2491 00112$:
                                   2492 ;	../contiki-sensinode/core/dev/slip.c:346: if(c == SLIP_ESC) {
      000741 BF DB 0C         [24] 2493 	cjne	r7,#0xDB,00121$
                                   2494 ;	../contiki-sensinode/core/dev/slip.c:347: state = STATE_ESC;
      000744 90r00r09         [24] 2495 	mov	dptr,#_state
      000747 74 02            [12] 2496 	mov	a,#0x02
      000749 F0               [24] 2497 	movx	@dptr,a
                                   2498 ;	../contiki-sensinode/core/dev/slip.c:348: return 0;
      00074A 90 00 00         [24] 2499 	mov	dptr,#0x0000
      00074D 02r08r4C         [24] 2500 	ljmp	00131$
      000750                       2501 00121$:
                                   2502 ;	../contiki-sensinode/core/dev/slip.c:349: } else if(c == SLIP_END) {
      000750 BF C0 5E         [24] 2503 	cjne	r7,#0xC0,00123$
                                   2504 ;	../contiki-sensinode/core/dev/slip.c:355: if(end != pkt_end) {	/* Non zero length. */
      000753 90r00r03         [24] 2505 	mov	dptr,#_end
      000756 E0               [24] 2506 	movx	a,@dptr
      000757 FD               [12] 2507 	mov	r5,a
      000758 A3               [24] 2508 	inc	dptr
      000759 E0               [24] 2509 	movx	a,@dptr
      00075A FE               [12] 2510 	mov	r6,a
      00075B 90r00r73         [24] 2511 	mov	dptr,#_pkt_end
      00075E E0               [24] 2512 	movx	a,@dptr
      00075F FB               [12] 2513 	mov	r3,a
      000760 A3               [24] 2514 	inc	dptr
      000761 E0               [24] 2515 	movx	a,@dptr
      000762 FC               [12] 2516 	mov	r4,a
      000763 ED               [12] 2517 	mov	a,r5
      000764 B5 03 06         [24] 2518 	cjne	a,ar3,00181$
      000767 EE               [12] 2519 	mov	a,r6
      000768 B5 04 02         [24] 2520 	cjne	a,ar4,00181$
      00076B 80 3E            [24] 2521 	sjmp	00117$
      00076D                       2522 00181$:
                                   2523 ;	../contiki-sensinode/core/dev/slip.c:356: if(begin == pkt_end) {	/* None buffered. */
      00076D C0 05            [24] 2524 	push	ar5
      00076F C0 06            [24] 2525 	push	ar6
      000771 90r00r01         [24] 2526 	mov	dptr,#_begin
      000774 E0               [24] 2527 	movx	a,@dptr
      000775 FA               [12] 2528 	mov	r2,a
      000776 A3               [24] 2529 	inc	dptr
      000777 E0               [24] 2530 	movx	a,@dptr
      000778 FE               [12] 2531 	mov	r6,a
      000779 EA               [12] 2532 	mov	a,r2
      00077A B5 03 06         [24] 2533 	cjne	a,ar3,00182$
      00077D EE               [12] 2534 	mov	a,r6
      00077E B5 04 02         [24] 2535 	cjne	a,ar4,00182$
      000781 80 06            [24] 2536 	sjmp	00183$
      000783                       2537 00182$:
      000783 D0 06            [24] 2538 	pop	ar6
      000785 D0 05            [24] 2539 	pop	ar5
      000787 80 0E            [24] 2540 	sjmp	00114$
      000789                       2541 00183$:
      000789 D0 06            [24] 2542 	pop	ar6
      00078B D0 05            [24] 2543 	pop	ar5
                                   2544 ;	../contiki-sensinode/core/dev/slip.c:357: pkt_end = end;
      00078D 90r00r73         [24] 2545 	mov	dptr,#_pkt_end
      000790 ED               [12] 2546 	mov	a,r5
      000791 F0               [24] 2547 	movx	@dptr,a
      000792 EE               [12] 2548 	mov	a,r6
      000793 A3               [24] 2549 	inc	dptr
      000794 F0               [24] 2550 	movx	@dptr,a
      000795 80 05            [24] 2551 	sjmp	00115$
      000797                       2552 00114$:
                                   2553 ;	../contiki-sensinode/core/dev/slip.c:359: state = STATE_TWOPACKETS;
      000797 90r00r09         [24] 2554 	mov	dptr,#_state
      00079A E4               [12] 2555 	clr	a
      00079B F0               [24] 2556 	movx	@dptr,a
      00079C                       2557 00115$:
                                   2558 ;	../contiki-sensinode/core/dev/slip.c:362: process_poll(&slip_process);
      00079C 90r00r00         [24] 2559 	mov	dptr,#_slip_process
      00079F 75 F0 00         [24] 2560 	mov	b,#0x00
      0007A2 12r00r00         [24] 2561 	lcall	_process_poll
                                   2562 ;	../contiki-sensinode/core/dev/slip.c:363: return 1;
      0007A5 90 00 01         [24] 2563 	mov	dptr,#0x0001
      0007A8 02r08r4C         [24] 2564 	ljmp	00131$
      0007AB                       2565 00117$:
                                   2566 ;	../contiki-sensinode/core/dev/slip.c:365: return 0;
      0007AB 90 00 00         [24] 2567 	mov	dptr,#0x0000
      0007AE 02r08r4C         [24] 2568 	ljmp	00131$
                                   2569 ;	../contiki-sensinode/core/dev/slip.c:368: }
      0007B1                       2570 00123$:
                                   2571 ;	../contiki-sensinode/core/dev/slip.c:373: next = end + 1;
      0007B1 90r00r03         [24] 2572 	mov	dptr,#_end
      0007B4 E0               [24] 2573 	movx	a,@dptr
      0007B5 FD               [12] 2574 	mov	r5,a
      0007B6 A3               [24] 2575 	inc	dptr
      0007B7 E0               [24] 2576 	movx	a,@dptr
      0007B8 FE               [12] 2577 	mov	r6,a
      0007B9 74 01            [12] 2578 	mov	a,#0x01
      0007BB 2D               [12] 2579 	add	a,r5
      0007BC FB               [12] 2580 	mov	r3,a
      0007BD E4               [12] 2581 	clr	a
      0007BE 3E               [12] 2582 	addc	a,r6
      0007BF FC               [12] 2583 	mov	r4,a
                                   2584 ;	../contiki-sensinode/core/dev/slip.c:374: if(next == RX_BUFSIZE) {
      0007C0 BB 6E 07         [24] 2585 	cjne	r3,#0x6E,00125$
      0007C3 BC 00 04         [24] 2586 	cjne	r4,#0x00,00125$
                                   2587 ;	../contiki-sensinode/core/dev/slip.c:375: next = 0;
      0007C6 7B 00            [12] 2588 	mov	r3,#0x00
      0007C8 7C 00            [12] 2589 	mov	r4,#0x00
      0007CA                       2590 00125$:
                                   2591 ;	../contiki-sensinode/core/dev/slip.c:377: if(next == begin) {		/* rxbuf is full */
      0007CA C0 05            [24] 2592 	push	ar5
      0007CC C0 06            [24] 2593 	push	ar6
      0007CE 90r00r01         [24] 2594 	mov	dptr,#_begin
      0007D1 E0               [24] 2595 	movx	a,@dptr
      0007D2 FA               [12] 2596 	mov	r2,a
      0007D3 A3               [24] 2597 	inc	dptr
      0007D4 E0               [24] 2598 	movx	a,@dptr
      0007D5 FE               [12] 2599 	mov	r6,a
      0007D6 EB               [12] 2600 	mov	a,r3
      0007D7 B5 02 06         [24] 2601 	cjne	a,ar2,00186$
      0007DA EC               [12] 2602 	mov	a,r4
      0007DB B5 06 02         [24] 2603 	cjne	a,ar6,00186$
      0007DE 80 06            [24] 2604 	sjmp	00187$
      0007E0                       2605 00186$:
      0007E0 D0 06            [24] 2606 	pop	ar6
      0007E2 D0 05            [24] 2607 	pop	ar5
      0007E4 80 27            [24] 2608 	sjmp	00127$
      0007E6                       2609 00187$:
      0007E6 D0 06            [24] 2610 	pop	ar6
      0007E8 D0 05            [24] 2611 	pop	ar5
                                   2612 ;	../contiki-sensinode/core/dev/slip.c:378: state = STATE_RUBBISH;
      0007EA 90r00r09         [24] 2613 	mov	dptr,#_state
      0007ED 74 03            [12] 2614 	mov	a,#0x03
      0007EF F0               [24] 2615 	movx	@dptr,a
                                   2616 ;	../contiki-sensinode/core/dev/slip.c:380: end = pkt_end;		/* remove rubbish */
      0007F0 90r00r73         [24] 2617 	mov	dptr,#_pkt_end
      0007F3 A8 81            [24] 2618 	mov	r0,sp
      0007F5 18               [12] 2619 	dec	r0
      0007F6 E0               [24] 2620 	movx	a,@dptr
      0007F7 F6               [12] 2621 	mov	@r0,a
      0007F8 A3               [24] 2622 	inc	dptr
      0007F9 E0               [24] 2623 	movx	a,@dptr
      0007FA 08               [12] 2624 	inc	r0
      0007FB F6               [12] 2625 	mov	@r0,a
      0007FC A8 81            [24] 2626 	mov	r0,sp
      0007FE 18               [12] 2627 	dec	r0
      0007FF 90r00r03         [24] 2628 	mov	dptr,#_end
      000802 E6               [12] 2629 	mov	a,@r0
      000803 F0               [24] 2630 	movx	@dptr,a
      000804 08               [12] 2631 	inc	r0
      000805 E6               [12] 2632 	mov	a,@r0
      000806 A3               [24] 2633 	inc	dptr
      000807 F0               [24] 2634 	movx	@dptr,a
                                   2635 ;	../contiki-sensinode/core/dev/slip.c:381: return 0;
      000808 90 00 00         [24] 2636 	mov	dptr,#0x0000
      00080B 80 3F            [24] 2637 	sjmp	00131$
      00080D                       2638 00127$:
                                   2639 ;	../contiki-sensinode/core/dev/slip.c:383: rxbuf[end] = c;
      00080D ED               [12] 2640 	mov	a,r5
      00080E 24r05            [12] 2641 	add	a,#_rxbuf
      000810 F5 82            [12] 2642 	mov	dpl,a
      000812 EE               [12] 2643 	mov	a,r6
      000813 34s00            [12] 2644 	addc	a,#(_rxbuf >> 8)
      000815 F5 83            [12] 2645 	mov	dph,a
      000817 EF               [12] 2646 	mov	a,r7
      000818 F0               [24] 2647 	movx	@dptr,a
                                   2648 ;	../contiki-sensinode/core/dev/slip.c:384: end = next;
      000819 90r00r03         [24] 2649 	mov	dptr,#_end
      00081C EB               [12] 2650 	mov	a,r3
      00081D F0               [24] 2651 	movx	@dptr,a
      00081E EC               [12] 2652 	mov	a,r4
      00081F A3               [24] 2653 	inc	dptr
      000820 F0               [24] 2654 	movx	@dptr,a
                                   2655 ;	../contiki-sensinode/core/dev/slip.c:388: if(c == 'T' && rxbuf[begin] == 'C') {
      000821 BF 54 25         [24] 2656 	cjne	r7,#0x54,00129$
      000824 90r00r01         [24] 2657 	mov	dptr,#_begin
      000827 E0               [24] 2658 	movx	a,@dptr
      000828 FE               [12] 2659 	mov	r6,a
      000829 A3               [24] 2660 	inc	dptr
      00082A E0               [24] 2661 	movx	a,@dptr
      00082B FF               [12] 2662 	mov	r7,a
      00082C EE               [12] 2663 	mov	a,r6
      00082D 24r05            [12] 2664 	add	a,#_rxbuf
      00082F F5 82            [12] 2665 	mov	dpl,a
      000831 EF               [12] 2666 	mov	a,r7
      000832 34s00            [12] 2667 	addc	a,#(_rxbuf >> 8)
      000834 F5 83            [12] 2668 	mov	dph,a
      000836 E0               [24] 2669 	movx	a,@dptr
      000837 FF               [12] 2670 	mov	r7,a
      000838 BF 43 0E         [24] 2671 	cjne	r7,#0x43,00129$
                                   2672 ;	../contiki-sensinode/core/dev/slip.c:389: process_poll(&slip_process);
      00083B 90r00r00         [24] 2673 	mov	dptr,#_slip_process
      00083E 75 F0 00         [24] 2674 	mov	b,#0x00
      000841 12r00r00         [24] 2675 	lcall	_process_poll
                                   2676 ;	../contiki-sensinode/core/dev/slip.c:390: return 1;
      000844 90 00 01         [24] 2677 	mov	dptr,#0x0001
      000847 80 03            [24] 2678 	sjmp	00131$
      000849                       2679 00129$:
                                   2680 ;	../contiki-sensinode/core/dev/slip.c:393: return 0;
      000849 90 00 00         [24] 2681 	mov	dptr,#0x0000
      00084C                       2682 00131$:
      00084C 15 81            [12] 2683 	dec	sp
      00084E 15 81            [12] 2684 	dec	sp
      000850 22               [24] 2685 	ret
                                   2686 	.area CSEG    (CODE)
                                   2687 	.area CONST   (CODE)
      000000                       2688 ___str_0:
      000000 43 4C 49 45 4E 54     2689 	.ascii "CLIENT"
      000006 00                    2690 	.db 0x00
      000007                       2691 ___str_1:
      000007 43 4C 49 45 4E 54 53  2692 	.ascii "CLIENTSERVER"
             45 52 56 45 52
      000013 C0                    2693 	.db 0xC0
      000014 00                    2694 	.db 0x00
      000015                       2695 ___str_2:
      000015 3F 49 50 41           2696 	.ascii "?IPA"
      000019 00                    2697 	.db 0x00
      00001A                       2698 ___str_3:
      00001A 3D 49 50 41           2699 	.ascii "=IPA"
      00001E 00                    2700 	.db 0x00
                                   2701 	.area XINIT   (CODE)
      000000                       2702 __xinit__slip_process:
                                   2703 ; generic printIvalPtr
      000000 00 00 00              2704 	.byte #0x00,#0x00,#0x00
      000003rFFs03                 2705 	.byte _process_thread_slip_process,(_process_thread_slip_process >> 8)
      000005 00 00                 2706 	.byte #0x00,#0x00	; 0
      000007 00                    2707 	.db #0x00	; 0
      000008 00                    2708 	.db #0x00	; 0
      000009                       2709 __xinit__state:
      000009 00                    2710 	.db #0x00	; 0
      00000A                       2711 __xinit__input_callback:
      00000A 00 00                 2712 	.byte #0x00,#0x00
                                   2713 	.area CABS    (ABS,CODE)
